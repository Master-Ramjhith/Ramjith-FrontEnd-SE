{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\Dynamic Resume Analyzer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\n\n/*\r\n  Professional single-file React app (no external libs)\r\n  - Parses uploaded .txt resumes (drag/drop or file input)\r\n  - Detects sections using robust heading regex and slices content\r\n  - Extracts skills, education, experience entries when possible\r\n  - JD-aware ATS scoring with weighting, n-gram matching, stopword filtering\r\n  - Real-time (debounced) analysis, UI controls, download/print report\r\n  - All logic contained here — ready to drop into a React project\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECTION = {\n  education: /(^(education|academic\\s+background|qualifications|education:)$)/im,\n  skills: /(^(skills|technical\\s+skills|key\\s+skills|skills:)$)/im,\n  experience: /(^(experience|work\\s+experience|professional\\s+experience|employment:)$)/im,\n  projects: /(^(projects|personal\\s+projects|project:)$)/im,\n  certifications: /(^(certifications|licenses|certified:)$)/im,\n  contact: /(^(contact|contact\\s+information|email|phone|linkedin|github:)$)/im\n};\nconst STOPWORDS = new Set([\"a\", \"an\", \"the\", \"and\", \"or\", \"of\", \"in\", \"on\", \"for\", \"to\", \"with\", \"by\", \"is\", \"are\", \"be\", \"as\", \"at\", \"from\", \"that\", \"this\", \"these\", \"those\", \"it\", \"its\", \"which\", \"will\", \"we\", \"you\", \"your\", \"i\", \"my\", \"me\"]);\nfunction normalize(text) {\n  return text.replace(/[“”«»\"'`]/g, ' ').replace(/[^\\w\\s\\-]/g, ' ').replace(/\\s+/g, ' ').trim().toLowerCase();\n}\nfunction wordsOnly(text) {\n  return normalize(text).split(/\\s+/).filter(Boolean);\n}\nfunction generateNgrams(words, maxN = 3) {\n  const ngrams = new Set();\n  for (let n = 1; n <= maxN; n++) {\n    for (let i = 0; i <= words.length - n; i++) {\n      const gram = words.slice(i, i + n).join(' ');\n      // drop ngrams made only of stopwords\n      const parts = gram.split(' ');\n      if (parts.every(p => STOPWORDS.has(p))) continue;\n      ngrams.add(gram);\n    }\n  }\n  return Array.from(ngrams);\n}\nfunction extractSectionsByHeadings(text) {\n  // Split by lines and look for headings that match SECTION keys\n  const lines = text.split(/\\r?\\n/);\n  const indices = [];\n  for (let i = 0; i < lines.length; i++) {\n    const ln = lines[i].trim();\n    for (const [key, rx] of Object.entries(SECTION)) {\n      if (rx.test(ln)) {\n        indices.push({\n          key,\n          idx: i\n        });\n      }\n    }\n  }\n  // If no explicit headings found, try headline-like lines (ALL CAPS or lines ending with ':')\n  if (indices.length === 0) {\n    for (let i = 0; i < lines.length; i++) {\n      const ln = lines[i].trim();\n      if (!ln) continue;\n      if (/^[-\\s]*[A-Z0-9 \\-]{3,}$/.test(ln) || /:$/.test(ln)) {\n        // crude heading candidate\n        // choose the best matching SECTION key by keyword inside\n        for (const [key, rx] of Object.entries(SECTION)) {\n          if (new RegExp(key, 'i').test(ln)) {\n            indices.push({\n              key,\n              idx: i\n            });\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // Build section content by slicing between indices\n  const out = {};\n  if (indices.length === 0) {\n    // no headings: put everything in a fallback 'body'\n    out.body = text;\n    return out;\n  }\n  indices.sort((a, b) => a.idx - b.idx);\n  for (let i = 0; i < indices.length; i++) {\n    const key = indices[i].key;\n    const start = indices[i].idx + 1; // content begins after heading line\n    const end = i + 1 < indices.length ? indices[i + 1].idx : lines.length;\n    const slice = lines.slice(start, end).join('\\n').trim();\n    out[key] = (out[key] ? out[key] + '\\n' : '') + (slice || '');\n  }\n  return out;\n}\nexport default function App() {\n  _s();\n  const [resumeText, setResumeText] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [sections, setSections] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [atsScore, setAtsScore] = useState(null);\n  const [lastRun, setLastRun] = useState(null);\n  const debounceRef = useRef(null);\n  useEffect(() => {\n    // run analysis when either resume or JD changes, debounced\n    if (debounceRef.current) clearTimeout(debounceRef.current);\n    debounceRef.current = setTimeout(() => {\n      runAnalysis();\n    }, 400);\n    return () => clearTimeout(debounceRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resumeText, jobDescription]);\n  function handleFile(file) {\n    if (!file) return;\n    if (!/text\\//.test(file.type) && !file.name.endsWith('.txt') && !file.name.endsWith('.md')) {\n      window.alert('Only plain text (.txt or .md) resumes supported');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => setResumeText(String(e.target.result));\n    reader.readAsText(file);\n  }\n  function handleDrop(e) {\n    e.preventDefault();\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFile(e.dataTransfer.files[0]);\n    }\n  }\n  function runAnalysis() {\n    const raw = resumeText || '';\n    if (!raw.trim()) {\n      setSections(null);\n      setAnalysis(null);\n      setAtsScore(null);\n      return;\n    }\n    const sec = extractSectionsByHeadings(raw);\n    setSections(sec);\n\n    // detect which common sections are present\n    const found = {};\n    const missing = [];\n    for (const key of Object.keys(SECTION)) {\n      if (sec[key] && sec[key].trim()) found[key] = true;else missing.push(key);\n    }\n\n    // build searchable texts for sections\n    const searchTexts = {};\n    for (const [k, v] of Object.entries(sec)) {\n      searchTexts[k] = normalize(v || '');\n    }\n    const fullText = normalize(raw);\n\n    // Extract candidate keywords from JD\n    const jd = jobDescription || '';\n    const jdWords = wordsOnly(jd);\n    const jdNgrams = generateNgrams(jdWords, 3);\n\n    // Filter JD ngrams: remove trivial short stopword-only ones and those shorter than 2 chars\n    const jdCandidates = jdNgrams.filter(g => g.split(' ').some(p => p.length > 1));\n\n    // Assign weights by type. We'll attempt to classify jd term as skill-like if it appears near 'skill' word in the JD or is short technical token\n    const isSkillLike = term => {\n      // heuristic: contains - or . or + or is common tech token or contains java/python/js/c++ etc\n      if (/\\b(java|python|react|node|c\\+\\+|c#|typescript|sql|aws|docker|kubernetes|html|css|graphql|rest)\\b/i.test(term)) return true;\n      // contains slash or plus\n      if (/[\\+\\-\\/]/.test(term)) return true;\n      // multi-word with 'experience' nearby in JD\n      const idx = jd.toLowerCase().indexOf(term);\n      if (idx >= 0) {\n        const window = jd.toLowerCase().slice(Math.max(0, idx - 30), idx + term.length + 30);\n        if (/skill|skills|proficient|experience|knowledge/.test(window)) return true;\n      }\n      return false;\n    };\n\n    // Build scoring\n    let weightedMatch = 0;\n    let maxWeight = 0;\n    const matches = [];\n    for (const term of jdCandidates) {\n      const normTerm = normalize(term);\n      // base weight\n      let weight = isSkillLike(normTerm) ? 3 : 1;\n      // if term appears to be a job title (contains engineer, developer, manager)\n      if (/\\b(engineer|developer|manager|lead|architect|intern)\\b/.test(normTerm)) weight = Math.max(weight, 2);\n      maxWeight += weight;\n\n      // check presence in fullText or section-specific\n      let present = false;\n      if (fullText.includes(normTerm)) present = true;else {\n        // try fuzzy: all words in term must be somewhere in text (order may differ)\n        const parts = normTerm.split(' ').filter(Boolean);\n        if (parts.every(p => fullText.includes(p))) present = true;\n      }\n      if (present) {\n        // boost if appears explicitly in skills section\n        let boost = 0;\n        if (searchTexts.skills && searchTexts.skills.includes(normTerm)) boost = 1;\n        if (searchTexts.experience && searchTexts.experience.includes(normTerm)) boost += 0.5;\n        weightedMatch += weight + boost;\n        matches.push({\n          term,\n          weight,\n          boost\n        });\n      }\n    }\n\n    // Avoid division by zero\n    const rawScore = maxWeight > 0 ? weightedMatch / maxWeight * 100 : 0;\n    const finalScore = Math.round(Math.min(100, rawScore));\n\n    // Additional heuristics: penalize if missing critical sections\n    let penalty = 0;\n    if (missing.includes('contact')) penalty += 10;\n    if (missing.includes('education')) penalty += 5;\n    if (missing.includes('skills')) penalty += 8;\n    const penalized = Math.max(0, finalScore - penalty);\n    setAnalysis({\n      found,\n      missing,\n      matches,\n      maxWeight,\n      weightedMatch\n    });\n    setAtsScore(penalized);\n    setLastRun(new Date().toISOString());\n  }\n  const feedback = useMemo(() => {\n    if (!analysis) return [];\n    const fb = [];\n    if (analysis.missing && analysis.missing.length) {\n      fb.push(`Missing sections: ${analysis.missing.join(', ')}.`);\n      if (analysis.missing.includes('skills')) fb.push('Add a dedicated Skills section with bullet list of technologies and tools.');\n      if (analysis.missing.includes('contact')) fb.push('Include contact info (email, phone, LinkedIn/GitHub).');\n    }\n    if (atsScore === null) fb.push('Paste a job description to compute ATS score.');else if (atsScore < 40) fb.push('ATS score is low — add exact JD keywords (skills, tools, job titles) into your Skills and Experience bullets.');else if (atsScore < 70) fb.push('Decent match. Optimize: move highest-value keywords into Skills and top bullets of Experience.');else fb.push('Strong match — well aligned with the JD.');\n    if (analysis.matches && analysis.matches.length) {\n      fb.push(`Matched terms (${analysis.matches.length}): ${analysis.matches.slice(0, 12).map(m => m.term).join(', ')}.`);\n    }\n    return fb;\n  }, [analysis, atsScore]);\n  function downloadReport() {\n    const el = document.getElementById('results-section');\n    if (!el) return window.alert('No results to print');\n    const win = window.open('', '_blank');\n    const style = `\n      body { font-family: Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial; padding: 24px; color:#0f172a }\n      h1,h2,h3{ color:#0f172a }\n      .card{ border:1px solid #e6eef8; padding:12px; margin:8px 0; border-radius:8px }\n    `;\n    win.document.write(`<html><head><title>Resume Analysis</title><style>${style}</style></head><body>${el.innerHTML}</body></html>`);\n    win.document.close();\n    win.focus();\n    win.print();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.hero,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.heroTitle,\n        children: \"Resume Analyzer \\u2014 Real-time, JD-aware (no external libs)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.heroText,\n        children: \"Drop a plain-text resume and paste a job description. Analysis runs automatically.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        style: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cardBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload / Paste Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt,.md,text/*\",\n            onChange: e => handleFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onDragOver: e => e.preventDefault(),\n            onDrop: handleDrop,\n            style: styles.dropzone,\n            children: \"Drag & drop .txt resume here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Or paste resume text here...\",\n            value: resumeText,\n            onChange: e => setResumeText(e.target.value),\n            style: styles.largeTextarea\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cardBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Job Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Paste job description...\",\n            value: jobDescription,\n            onChange: e => setJobDescription(e.target.value),\n            style: styles.largeTextarea\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.button,\n              onClick: runAnalysis,\n              children: \"Force Analyze Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                ...styles.button,\n                marginLeft: 8\n              },\n              onClick: () => {\n                setJobDescription('');\n                setAtsScore(null);\n              },\n              children: \"Clear JD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), analysis && /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"results-section\",\n        style: styles.results,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.grid,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.smallCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Detected Sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.keys(analysis.found).map(k => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: k\n              }, k, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 56\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.smallCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Missing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: analysis.missing.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: m\n              }, m, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.smallCard,\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"ATS Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 36,\n                fontWeight: 700\n              },\n              children: atsScore !== null ? `${atsScore}%` : '—'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 12,\n                color: '#475569'\n              },\n              children: [\"Calculated at: \", lastRun]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Matched JD Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: analysis.matches && analysis.matches.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: analysis.matches.map((m, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [m.term, \" (w:\", m.weight, m.boost ? ` +${m.boost}` : '', \")\"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 51\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No explicit matches found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 12\n            },\n            children: \"Suggestions & Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: f\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Section Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: sections ? Object.entries(sections).map(([k, v]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: k\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  style: {\n                    whiteSpace: 'pre-wrap',\n                    margin: 6\n                  },\n                  children: v.slice(0, 800)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this)]\n              }, k, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No sections parsed.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.button,\n              onClick: downloadReport,\n              children: \"Print / Download Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hmlAbaRrICPxxD5QSDF/aSU0tVs=\");\n_c = App;\nconst styles = {\n  app: {\n    background: '#f8fafc',\n    minHeight: '100vh',\n    fontFamily: 'system-ui, -apple-system, Roboto, ' + \"'Segoe UI'\",\n    paddingBottom: 60\n  },\n  hero: {\n    background: 'linear-gradient(135deg,#0f172a,#1e293b)',\n    color: 'white',\n    padding: '28px 20px',\n    textAlign: 'center'\n  },\n  heroTitle: {\n    fontSize: 20,\n    margin: 0\n  },\n  heroText: {\n    opacity: 0.9,\n    marginTop: 8\n  },\n  container: {\n    maxWidth: 1100,\n    margin: '18px auto',\n    padding: '0 12px'\n  },\n  row: {\n    display: 'flex',\n    gap: 20,\n    alignItems: 'flex-start',\n    flexWrap: 'wrap'\n  },\n  cardBlock: {\n    flex: 1,\n    minWidth: 320,\n    background: 'white',\n    padding: 16,\n    borderRadius: 10,\n    boxShadow: '0 8px 20px rgba(2,6,23,0.06)'\n  },\n  dropzone: {\n    border: '2px dashed #cbd5e1',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 8,\n    textAlign: 'center',\n    color: '#475569'\n  },\n  largeTextarea: {\n    width: '100%',\n    minHeight: 220,\n    marginTop: 8,\n    padding: 12,\n    borderRadius: 8,\n    border: '1px solid #e6eef8',\n    fontFamily: 'monospace'\n  },\n  button: {\n    background: '#0f172a',\n    color: 'white',\n    border: 'none',\n    padding: '8px 12px',\n    borderRadius: 8,\n    cursor: 'pointer'\n  },\n  results: {\n    background: 'white',\n    padding: 16,\n    marginTop: 16,\n    borderRadius: 10,\n    boxShadow: '0 6px 18px rgba(2,6,23,0.04)'\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit,minmax(220px,1fr))',\n    gap: 12\n  },\n  smallCard: {\n    padding: 12,\n    borderRadius: 8,\n    border: '1px solid #e6eef8',\n    background: '#f8fafc'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","jsxDEV","_jsxDEV","SECTION","education","skills","experience","projects","certifications","contact","STOPWORDS","Set","normalize","text","replace","trim","toLowerCase","wordsOnly","split","filter","Boolean","generateNgrams","words","maxN","ngrams","n","i","length","gram","slice","join","parts","every","p","has","add","Array","from","extractSectionsByHeadings","lines","indices","ln","key","rx","Object","entries","test","push","idx","RegExp","out","body","sort","a","b","start","end","App","_s","resumeText","setResumeText","jobDescription","setJobDescription","sections","setSections","analysis","setAnalysis","atsScore","setAtsScore","lastRun","setLastRun","debounceRef","current","clearTimeout","setTimeout","runAnalysis","handleFile","file","type","name","endsWith","window","alert","reader","FileReader","onload","e","String","target","result","readAsText","handleDrop","preventDefault","dataTransfer","files","raw","sec","found","missing","keys","searchTexts","k","v","fullText","jd","jdWords","jdNgrams","jdCandidates","g","some","isSkillLike","term","indexOf","Math","max","weightedMatch","maxWeight","matches","normTerm","weight","present","includes","boost","rawScore","finalScore","round","min","penalty","penalized","Date","toISOString","feedback","fb","map","m","downloadReport","el","document","getElementById","win","open","style","write","innerHTML","close","focus","print","styles","app","children","hero","heroTitle","fileName","_jsxFileName","lineNumber","columnNumber","heroText","container","row","cardBlock","accept","onChange","onDragOver","onDrop","dropzone","placeholder","value","largeTextarea","marginTop","button","onClick","marginLeft","id","results","grid","smallCard","textAlign","fontSize","fontWeight","color","className","f","marginBottom","whiteSpace","margin","_c","background","minHeight","fontFamily","paddingBottom","padding","opacity","maxWidth","display","gap","alignItems","flexWrap","flex","minWidth","borderRadius","boxShadow","border","width","cursor","gridTemplateColumns","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/Dynamic Resume Analyzer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\n\r\n/*\r\n  Professional single-file React app (no external libs)\r\n  - Parses uploaded .txt resumes (drag/drop or file input)\r\n  - Detects sections using robust heading regex and slices content\r\n  - Extracts skills, education, experience entries when possible\r\n  - JD-aware ATS scoring with weighting, n-gram matching, stopword filtering\r\n  - Real-time (debounced) analysis, UI controls, download/print report\r\n  - All logic contained here — ready to drop into a React project\r\n*/\r\n\r\nconst SECTION = {\r\n  education: /(^(education|academic\\s+background|qualifications|education:)$)/im,\r\n  skills: /(^(skills|technical\\s+skills|key\\s+skills|skills:)$)/im,\r\n  experience: /(^(experience|work\\s+experience|professional\\s+experience|employment:)$)/im,\r\n  projects: /(^(projects|personal\\s+projects|project:)$)/im,\r\n  certifications: /(^(certifications|licenses|certified:)$)/im,\r\n  contact: /(^(contact|contact\\s+information|email|phone|linkedin|github:)$)/im,\r\n};\r\n\r\nconst STOPWORDS = new Set([\r\n  \"a\",\"an\",\"the\",\"and\",\"or\",\"of\",\"in\",\"on\",\"for\",\"to\",\"with\",\"by\",\"is\",\"are\",\"be\",\"as\",\"at\",\"from\",\"that\",\"this\",\"these\",\"those\",\"it\",\"its\",\"which\",\"will\",\"we\",\"you\",\"your\",\"i\",\"my\",\"me\",\r\n]);\r\n\r\nfunction normalize(text){\r\n  return text\r\n    .replace(/[“”«»\"'`]/g, ' ')\r\n    .replace(/[^\\w\\s\\-]/g, ' ')\r\n    .replace(/\\s+/g, ' ')\r\n    .trim()\r\n    .toLowerCase();\r\n}\r\n\r\nfunction wordsOnly(text){\r\n  return normalize(text).split(/\\s+/).filter(Boolean);\r\n}\r\n\r\nfunction generateNgrams(words, maxN=3){\r\n  const ngrams = new Set();\r\n  for(let n=1;n<=maxN;n++){\r\n    for(let i=0;i<=words.length-n;i++){\r\n      const gram = words.slice(i,i+n).join(' ');\r\n      // drop ngrams made only of stopwords\r\n      const parts = gram.split(' ');\r\n      if(parts.every(p=>STOPWORDS.has(p))) continue;\r\n      ngrams.add(gram);\r\n    }\r\n  }\r\n  return Array.from(ngrams);\r\n}\r\n\r\nfunction extractSectionsByHeadings(text){\r\n  // Split by lines and look for headings that match SECTION keys\r\n  const lines = text.split(/\\r?\\n/);\r\n  const indices = [];\r\n  for(let i=0;i<lines.length;i++){\r\n    const ln = lines[i].trim();\r\n    for(const [key, rx] of Object.entries(SECTION)){\r\n      if(rx.test(ln)){\r\n        indices.push({key, idx:i});\r\n      }\r\n    }\r\n  }\r\n  // If no explicit headings found, try headline-like lines (ALL CAPS or lines ending with ':')\r\n  if(indices.length === 0){\r\n    for(let i=0;i<lines.length;i++){\r\n      const ln = lines[i].trim();\r\n      if(!ln) continue;\r\n      if(/^[-\\s]*[A-Z0-9 \\-]{3,}$/.test(ln) || /:$/.test(ln)){\r\n        // crude heading candidate\r\n        // choose the best matching SECTION key by keyword inside\r\n        for(const [key, rx] of Object.entries(SECTION)){\r\n          if(new RegExp(key, 'i').test(ln)){\r\n            indices.push({key, idx:i});\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Build section content by slicing between indices\r\n  const out = {};\r\n  if(indices.length === 0){\r\n    // no headings: put everything in a fallback 'body'\r\n    out.body = text;\r\n    return out;\r\n  }\r\n  indices.sort((a,b)=>a.idx-b.idx);\r\n  for(let i=0;i<indices.length;i++){\r\n    const key = indices[i].key;\r\n    const start = indices[i].idx + 1; // content begins after heading line\r\n    const end = (i+1 < indices.length) ? indices[i+1].idx : lines.length;\r\n    const slice = lines.slice(start,end).join('\\n').trim();\r\n    out[key] = (out[key] ? out[key] + '\\n' : '') + (slice || '');\r\n  }\r\n  return out;\r\n}\r\n\r\nexport default function App(){\r\n  const [resumeText, setResumeText] = useState('');\r\n  const [jobDescription, setJobDescription] = useState('');\r\n  const [sections, setSections] = useState(null);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [atsScore, setAtsScore] = useState(null);\r\n  const [lastRun, setLastRun] = useState(null);\r\n\r\n  const debounceRef = useRef(null);\r\n\r\n  useEffect(()=>{\r\n    // run analysis when either resume or JD changes, debounced\r\n    if(debounceRef.current) clearTimeout(debounceRef.current);\r\n    debounceRef.current = setTimeout(()=>{\r\n      runAnalysis();\r\n    }, 400);\r\n    return ()=>clearTimeout(debounceRef.current);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[resumeText, jobDescription]);\r\n\r\n  function handleFile(file){\r\n    if(!file) return;\r\n    if(!/text\\//.test(file.type) && !file.name.endsWith('.txt') && !file.name.endsWith('.md')){\r\n      window.alert('Only plain text (.txt or .md) resumes supported');\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = (e)=> setResumeText(String(e.target.result));\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  function handleDrop(e){\r\n    e.preventDefault();\r\n    if(e.dataTransfer.files && e.dataTransfer.files[0]){\r\n      handleFile(e.dataTransfer.files[0]);\r\n    }\r\n  }\r\n\r\n  function runAnalysis(){\r\n    const raw = resumeText || '';\r\n    if(!raw.trim()){ setSections(null); setAnalysis(null); setAtsScore(null); return; }\r\n\r\n    const sec = extractSectionsByHeadings(raw);\r\n    setSections(sec);\r\n\r\n    // detect which common sections are present\r\n    const found = {};\r\n    const missing = [];\r\n    for(const key of Object.keys(SECTION)){\r\n      if(sec[key] && sec[key].trim()) found[key]=true;\r\n      else missing.push(key);\r\n    }\r\n\r\n    // build searchable texts for sections\r\n    const searchTexts = {};\r\n    for(const [k,v] of Object.entries(sec)){\r\n      searchTexts[k] = normalize(v || '');\r\n    }\r\n    const fullText = normalize(raw);\r\n\r\n    // Extract candidate keywords from JD\r\n    const jd = jobDescription || '';\r\n    const jdWords = wordsOnly(jd);\r\n    const jdNgrams = generateNgrams(jdWords, 3);\r\n\r\n    // Filter JD ngrams: remove trivial short stopword-only ones and those shorter than 2 chars\r\n    const jdCandidates = jdNgrams.filter(g=> g.split(' ').some(p=>p.length>1));\r\n\r\n    // Assign weights by type. We'll attempt to classify jd term as skill-like if it appears near 'skill' word in the JD or is short technical token\r\n    const isSkillLike = (term)=>{\r\n      // heuristic: contains - or . or + or is common tech token or contains java/python/js/c++ etc\r\n      if(/\\b(java|python|react|node|c\\+\\+|c#|typescript|sql|aws|docker|kubernetes|html|css|graphql|rest)\\b/i.test(term)) return true;\r\n      // contains slash or plus\r\n      if(/[\\+\\-\\/]/.test(term)) return true;\r\n      // multi-word with 'experience' nearby in JD\r\n      const idx = jd.toLowerCase().indexOf(term);\r\n      if(idx>=0){\r\n        const window = jd.toLowerCase().slice(Math.max(0, idx-30), idx+term.length+30);\r\n        if(/skill|skills|proficient|experience|knowledge/.test(window)) return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // Build scoring\r\n    let weightedMatch = 0;\r\n    let maxWeight = 0;\r\n    const matches = [];\r\n\r\n    for(const term of jdCandidates){\r\n      const normTerm = normalize(term);\r\n      // base weight\r\n      let weight = isSkillLike(normTerm) ? 3 : 1;\r\n      // if term appears to be a job title (contains engineer, developer, manager)\r\n      if(/\\b(engineer|developer|manager|lead|architect|intern)\\b/.test(normTerm)) weight = Math.max(weight,2);\r\n\r\n      maxWeight += weight;\r\n\r\n      // check presence in fullText or section-specific\r\n      let present = false;\r\n      if(fullText.includes(normTerm)) present = true;\r\n      else {\r\n        // try fuzzy: all words in term must be somewhere in text (order may differ)\r\n        const parts = normTerm.split(' ').filter(Boolean);\r\n        if(parts.every(p=> fullText.includes(p))) present = true;\r\n      }\r\n\r\n      if(present){\r\n        // boost if appears explicitly in skills section\r\n        let boost = 0;\r\n        if(searchTexts.skills && searchTexts.skills.includes(normTerm)) boost = 1;\r\n        if(searchTexts.experience && searchTexts.experience.includes(normTerm)) boost += 0.5;\r\n        weightedMatch += weight + boost;\r\n        matches.push({term, weight, boost});\r\n      }\r\n    }\r\n\r\n    // Avoid division by zero\r\n    const rawScore = maxWeight > 0 ? (weightedMatch / maxWeight) * 100 : 0;\r\n    const finalScore = Math.round(Math.min(100, rawScore));\r\n\r\n    // Additional heuristics: penalize if missing critical sections\r\n    let penalty = 0;\r\n    if(missing.includes('contact')) penalty += 10;\r\n    if(missing.includes('education')) penalty += 5;\r\n    if(missing.includes('skills')) penalty += 8;\r\n    const penalized = Math.max(0, finalScore - penalty);\r\n\r\n    setAnalysis({found, missing, matches, maxWeight, weightedMatch});\r\n    setAtsScore(penalized);\r\n    setLastRun(new Date().toISOString());\r\n  }\r\n\r\n  const feedback = useMemo(()=>{\r\n    if(!analysis) return [];\r\n    const fb = [];\r\n    if(analysis.missing && analysis.missing.length){\r\n      fb.push(`Missing sections: ${analysis.missing.join(', ')}.`);\r\n      if(analysis.missing.includes('skills')) fb.push('Add a dedicated Skills section with bullet list of technologies and tools.');\r\n      if(analysis.missing.includes('contact')) fb.push('Include contact info (email, phone, LinkedIn/GitHub).');\r\n    }\r\n    if(atsScore === null) fb.push('Paste a job description to compute ATS score.');\r\n    else if(atsScore < 40) fb.push('ATS score is low — add exact JD keywords (skills, tools, job titles) into your Skills and Experience bullets.');\r\n    else if(atsScore < 70) fb.push('Decent match. Optimize: move highest-value keywords into Skills and top bullets of Experience.');\r\n    else fb.push('Strong match — well aligned with the JD.');\r\n\r\n    if(analysis.matches && analysis.matches.length){\r\n      fb.push(`Matched terms (${analysis.matches.length}): ${analysis.matches.slice(0,12).map(m=>m.term).join(', ')}.`);\r\n    }\r\n    return fb;\r\n  }, [analysis, atsScore]);\r\n\r\n  function downloadReport(){\r\n    const el = document.getElementById('results-section');\r\n    if(!el) return window.alert('No results to print');\r\n\r\n    const win = window.open('', '_blank');\r\n    const style = `\r\n      body { font-family: Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial; padding: 24px; color:#0f172a }\r\n      h1,h2,h3{ color:#0f172a }\r\n      .card{ border:1px solid #e6eef8; padding:12px; margin:8px 0; border-radius:8px }\r\n    `;\r\n    win.document.write(`<html><head><title>Resume Analysis</title><style>${style}</style></head><body>${el.innerHTML}</body></html>`);\r\n    win.document.close();\r\n    win.focus();\r\n    win.print();\r\n  }\r\n\r\n  return (\r\n    <div style={styles.app}>\r\n      <header style={styles.hero}>\r\n        <h1 style={styles.heroTitle}>Resume Analyzer — Real-time, JD-aware (no external libs)</h1>\r\n        <p style={styles.heroText}>Drop a plain-text resume and paste a job description. Analysis runs automatically.</p>\r\n      </header>\r\n\r\n      <main style={styles.container}>\r\n        <section style={styles.row}>\r\n          <div style={styles.cardBlock}>\r\n            <h2>Upload / Paste Resume</h2>\r\n            <input type=\"file\" accept=\".txt,.md,text/*\" onChange={(e)=>handleFile(e.target.files[0])} />\r\n            <div onDragOver={(e)=>e.preventDefault()} onDrop={handleDrop} style={styles.dropzone}>Drag & drop .txt resume here</div>\r\n            <textarea placeholder=\"Or paste resume text here...\" value={resumeText} onChange={(e)=>setResumeText(e.target.value)} style={styles.largeTextarea} />\r\n          </div>\r\n\r\n          <div style={styles.cardBlock}>\r\n            <h2>Job Description</h2>\r\n            <textarea placeholder=\"Paste job description...\" value={jobDescription} onChange={(e)=>setJobDescription(e.target.value)} style={styles.largeTextarea} />\r\n\r\n            <div style={{marginTop:12}}>\r\n              <button style={styles.button} onClick={runAnalysis}>Force Analyze Now</button>\r\n              <button style={{...styles.button, marginLeft:8}} onClick={()=>{ setJobDescription(''); setAtsScore(null); }}>Clear JD</button>\r\n            </div>\r\n\r\n          </div>\r\n        </section>\r\n\r\n        {analysis && (\r\n          <section id=\"results-section\" style={styles.results}>\r\n            <h2>Analysis</h2>\r\n            <div style={styles.grid}>\r\n              <div style={styles.smallCard}>\r\n                <h3>Detected Sections</h3>\r\n                <ul>\r\n                  {Object.keys(analysis.found).map(k=> <li key={k}>{k}</li>)}\r\n                </ul>\r\n              </div>\r\n\r\n              <div style={styles.smallCard}>\r\n                <h3>Missing</h3>\r\n                <ul>\r\n                  {analysis.missing.map(m=> <li key={m}>{m}</li>)}\r\n                </ul>\r\n              </div>\r\n\r\n              <div style={{...styles.smallCard, textAlign:'center'}}>\r\n                <h3>ATS Score</h3>\r\n                <div style={{fontSize:36, fontWeight:700}}>{atsScore !== null ? `${atsScore}%` : '—'}</div>\r\n                <div style={{fontSize:12, color:'#475569'}}>Calculated at: {lastRun}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{marginTop:12}}>\r\n              <h3>Matched JD Terms</h3>\r\n              <div className=\"card\">\r\n                {analysis.matches && analysis.matches.length ? (\r\n                  <ul>\r\n                    {analysis.matches.map((m,i)=> <li key={i}>{m.term} (w:{m.weight}{m.boost?` +${m.boost}`:''})</li>)}\r\n                  </ul>\r\n                ) : <div>No explicit matches found.</div>}\r\n              </div>\r\n\r\n              <h3 style={{marginTop:12}}>Suggestions & Feedback</h3>\r\n              <div className=\"card\">\r\n                <ul>\r\n                  {feedback.map((f,i)=> <li key={i}>{f}</li>)}\r\n                </ul>\r\n              </div>\r\n\r\n              <div style={{marginTop:12}}>\r\n                <h3>Section Preview</h3>\r\n                <div className=\"card\">\r\n                  {sections ? Object.entries(sections).map(([k,v])=> (\r\n                    <div key={k} style={{marginBottom:8}}>\r\n                      <strong>{k}</strong>\r\n                      <pre style={{whiteSpace:'pre-wrap', margin:6}}>{v.slice(0,800)}</pre>\r\n                    </div>\r\n                  )) : <div>No sections parsed.</div>}\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{marginTop:12}}>\r\n                <button style={styles.button} onClick={downloadReport}>Print / Download Report</button>\r\n              </div>\r\n            </div>\r\n\r\n          </section>\r\n        )}\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  app: { background:'#f8fafc', minHeight:'100vh', fontFamily: 'system-ui, -apple-system, Roboto, ' + \"'Segoe UI'\", paddingBottom:60 },\r\n  hero: { background:'linear-gradient(135deg,#0f172a,#1e293b)', color:'white', padding:'28px 20px', textAlign:'center' },\r\n  heroTitle: { fontSize:20, margin:0 },\r\n  heroText: { opacity:0.9, marginTop:8 },\r\n  container: { maxWidth:1100, margin:'18px auto', padding:'0 12px' },\r\n  row: { display:'flex', gap:20, alignItems:'flex-start', flexWrap:'wrap' },\r\n  cardBlock: { flex:1, minWidth:320, background:'white', padding:16, borderRadius:10, boxShadow:'0 8px 20px rgba(2,6,23,0.06)' },\r\n  dropzone: { border:'2px dashed #cbd5e1', padding:12, borderRadius:8, marginTop:8, textAlign:'center', color:'#475569' },\r\n  largeTextarea: { width:'100%', minHeight:220, marginTop:8, padding:12, borderRadius:8, border:'1px solid #e6eef8', fontFamily:'monospace' },\r\n  button: { background:'#0f172a', color:'white', border:'none', padding:'8px 12px', borderRadius:8, cursor:'pointer' },\r\n  results: { background:'white', padding:16, marginTop:16, borderRadius:10, boxShadow:'0 6px 18px rgba(2,6,23,0.04)' },\r\n  grid: { display:'grid', gridTemplateColumns:'repeat(auto-fit,minmax(220px,1fr))', gap:12 },\r\n  smallCard: { padding:12, borderRadius:8, border:'1px solid #e6eef8', background:'#f8fafc' }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}