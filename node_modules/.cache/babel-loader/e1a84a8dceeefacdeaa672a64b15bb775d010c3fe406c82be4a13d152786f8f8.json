{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\SE-project\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RESPONSES = {\n  ats: \"ATS systems scan for keywords, formatting, and standard resume sections.\",\n  keywords: \"Use industry-specific keywords, action verbs, and quantify results.\",\n  format: \"Keep the format clean with headings, bullet points, and no graphics.\",\n  sections: \"Include: Contact, Summary, Experience, Skills, Education. Add Projects/Certifications if relevant.\",\n  default: \"I can help with ATS, keywords, formatting, and sections. Try asking me about them!\"\n};\nexport default function Chatbot({\n  onClose\n}) {\n  _s();\n  const [chat, setChat] = useState([{\n    type: \"bot\",\n    text: \"Hello! Iâ€™m your Resume Assistant ðŸ‘‹\"\n  }]);\n  const [msg, setMsg] = useState(\"\");\n  const send = () => {\n    if (!msg.trim()) return;\n    setChat(c => [...c, {\n      type: \"user\",\n      text: msg\n    }]);\n    const lower = msg.toLowerCase();\n    let reply = RESPONSES.default;\n    if (lower.includes(\"ats\")) reply = RESPONSES.ats;else if (lower.includes(\"keyword\")) reply = RESPONSES.keywords;else if (lower.includes(\"format\")) reply = RESPONSES.format;else if (lower.includes(\"section\")) reply = RESPONSES.sections;\n    setChat(c => [...c, {\n      type: \"user\",\n      text: msg\n    }, {\n      type: \"bot\",\n      text: reply\n    }]);\n    setMsg(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDD16 Resume Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chat.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${m.type}`,\n          children: m.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: msg,\n          onChange: e => setMsg(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && send(),\n          placeholder: \"Ask about ATS, keywords, format...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: send,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"NmyF2EH8/QrrArYF2ENnyrNtZDI=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RESPONSES","ats","keywords","format","sections","default","Chatbot","onClose","_s","chat","setChat","type","text","msg","setMsg","send","trim","c","lower","toLowerCase","reply","includes","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","map","m","i","value","onChange","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/SE-project/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst RESPONSES = {\r\n  ats: \"ATS systems scan for keywords, formatting, and standard resume sections.\",\r\n  keywords: \"Use industry-specific keywords, action verbs, and quantify results.\",\r\n  format: \"Keep the format clean with headings, bullet points, and no graphics.\",\r\n  sections: \"Include: Contact, Summary, Experience, Skills, Education. Add Projects/Certifications if relevant.\",\r\n  default: \"I can help with ATS, keywords, formatting, and sections. Try asking me about them!\",\r\n};\r\n\r\nexport default function Chatbot({ onClose }) {\r\n  const [chat, setChat] = useState([{ type: \"bot\", text: \"Hello! Iâ€™m your Resume Assistant ðŸ‘‹\" }]);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const send = () => {\r\n    if (!msg.trim()) return;\r\n    setChat((c) => [...c, { type: \"user\", text: msg }]);\r\n\r\n    const lower = msg.toLowerCase();\r\n    let reply = RESPONSES.default;\r\n    if (lower.includes(\"ats\")) reply = RESPONSES.ats;\r\n    else if (lower.includes(\"keyword\")) reply = RESPONSES.keywords;\r\n    else if (lower.includes(\"format\")) reply = RESPONSES.format;\r\n    else if (lower.includes(\"section\")) reply = RESPONSES.sections;\r\n\r\n    setChat((c) => [...c, { type: \"user\", text: msg }, { type: \"bot\", text: reply }]);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-overlay\" onClick={onClose}>\r\n      <div className=\"chatbot\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"chat-header\">\r\n          <h3>ðŸ¤– Resume Assistant</h3>\r\n          <button onClick={onClose}>âœ•</button>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {chat.map((m, i) => (\r\n            <div key={i} className={`chat-message ${m.type}`}>{m.text}</div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input-row\">\r\n          <input\r\n            value={msg}\r\n            onChange={(e) => setMsg(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && send()}\r\n            placeholder=\"Ask about ATS, keywords, format...\"\r\n          />\r\n          <button onClick={send}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG;EAChBC,GAAG,EAAE,0EAA0E;EAC/EC,QAAQ,EAAE,qEAAqE;EAC/EC,MAAM,EAAE,sEAAsE;EAC9EC,QAAQ,EAAE,oGAAoG;EAC9GC,OAAO,EAAE;AACX,CAAC;AAED,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC;IAAEc,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAsC,CAAC,CAAC,CAAC;EAChG,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMkB,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,EAAE;IACjBN,OAAO,CAAEO,CAAC,IAAK,CAAC,GAAGA,CAAC,EAAE;MAAEN,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAI,CAAC,CAAC,CAAC;IAEnD,MAAMK,KAAK,GAAGL,GAAG,CAACM,WAAW,CAAC,CAAC;IAC/B,IAAIC,KAAK,GAAGpB,SAAS,CAACK,OAAO;IAC7B,IAAIa,KAAK,CAACG,QAAQ,CAAC,KAAK,CAAC,EAAED,KAAK,GAAGpB,SAAS,CAACC,GAAG,CAAC,KAC5C,IAAIiB,KAAK,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAED,KAAK,GAAGpB,SAAS,CAACE,QAAQ,CAAC,KAC1D,IAAIgB,KAAK,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAED,KAAK,GAAGpB,SAAS,CAACG,MAAM,CAAC,KACvD,IAAIe,KAAK,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAED,KAAK,GAAGpB,SAAS,CAACI,QAAQ;IAE9DM,OAAO,CAAEO,CAAC,IAAK,CAAC,GAAGA,CAAC,EAAE;MAAEN,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAI,CAAC,EAAE;MAAEF,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAEQ;IAAM,CAAC,CAAC,CAAC;IACjFN,MAAM,CAAC,EAAE,CAAC;EACZ,CAAC;EAED,oBACEf,OAAA;IAAKuB,SAAS,EAAC,iBAAiB;IAACC,OAAO,EAAEhB,OAAQ;IAAAiB,QAAA,eAChDzB,OAAA;MAAKuB,SAAS,EAAC,SAAS;MAACC,OAAO,EAAGE,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAF,QAAA,gBAC3DzB,OAAA;QAAKuB,SAAS,EAAC,aAAa;QAAAE,QAAA,gBAC1BzB,OAAA;UAAAyB,QAAA,EAAI;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5B/B,OAAA;UAAQwB,OAAO,EAAEhB,OAAQ;UAAAiB,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACN/B,OAAA;QAAKuB,SAAS,EAAC,eAAe;QAAAE,QAAA,EAC3Bf,IAAI,CAACsB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACblC,OAAA;UAAauB,SAAS,EAAE,gBAAgBU,CAAC,CAACrB,IAAI,EAAG;UAAAa,QAAA,EAAEQ,CAAC,CAACpB;QAAI,GAA/CqB,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoD,CAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN/B,OAAA;QAAKuB,SAAS,EAAC,gBAAgB;QAAAE,QAAA,gBAC7BzB,OAAA;UACEmC,KAAK,EAAErB,GAAI;UACXsB,QAAQ,EAAGV,CAAC,IAAKX,MAAM,CAACW,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;UACxCG,SAAS,EAAGZ,CAAC,IAAKA,CAAC,CAACa,GAAG,KAAK,OAAO,IAAIvB,IAAI,CAAC,CAAE;UAC9CwB,WAAW,EAAC;QAAoC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACF/B,OAAA;UAAQwB,OAAO,EAAER,IAAK;UAAAS,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA3CuBF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}