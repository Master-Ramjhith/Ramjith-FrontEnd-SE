{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\Dynamic_Resume_Analyzer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\n// Regex patterns for common resume sections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECTION_PATTERNS = {\n  education: /(education|academic background|qualifications)/i,\n  skills: /(skills|technical skills|key skills)/i,\n  experience: /(experience|work history|employment)/i,\n  projects: /(projects|personal projects|portfolio)/i,\n  certifications: /(certifications|licenses)/i,\n  contact: /(contact|email|phone|linkedin|github)/i\n};\nexport default function App() {\n  _s();\n  const [resumeText, setResumeText] = useState(\"\");\n  const [analysis, setAnalysis] = useState(null);\n  const analyzeResume = () => {\n    let foundSections = {};\n    let missingSections = [];\n    Object.entries(SECTION_PATTERNS).forEach(([section, regex]) => {\n      if (regex.test(resumeText)) {\n        foundSections[section] = true;\n      } else {\n        missingSections.push(section);\n      }\n    });\n    setAnalysis({\n      foundSections,\n      missingSections\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Dynamic Resume Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl p-4\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full h-48 p-3 border rounded-md\",\n          placeholder: \"Paste your resume text here...\",\n          value: resumeText,\n          onChange: e => setResumeText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-4\",\n          onClick: analyzeResume,\n          children: \"Analyze Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: \"Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc ml-6 text-green-700\",\n            children: Object.keys(analysis.foundSections).map(section => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [section, \" \\u2705\"]\n            }, section, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc ml-6 text-red-600 mt-3\",\n            children: analysis.missingSections.map(section => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [section, \" \\u274C\"]\n            }, section, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o6uFlnt+n+/k/LVX4xxVJmSLJJw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","CardContent","Button","jsxDEV","_jsxDEV","SECTION_PATTERNS","education","skills","experience","projects","certifications","contact","App","_s","resumeText","setResumeText","analysis","setAnalysis","analyzeResume","foundSections","missingSections","Object","entries","forEach","section","regex","test","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","keys","map","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/Dynamic_Resume_Analyzer/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\n// Regex patterns for common resume sections\r\nconst SECTION_PATTERNS = {\r\n  education: /(education|academic background|qualifications)/i,\r\n  skills: /(skills|technical skills|key skills)/i,\r\n  experience: /(experience|work history|employment)/i,\r\n  projects: /(projects|personal projects|portfolio)/i,\r\n  certifications: /(certifications|licenses)/i,\r\n  contact: /(contact|email|phone|linkedin|github)/i,\r\n};\r\n\r\nexport default function App() {\r\n  const [resumeText, setResumeText] = useState(\"\");\r\n  const [analysis, setAnalysis] = useState(null);\r\n\r\n  const analyzeResume = () => {\r\n    let foundSections = {};\r\n    let missingSections = [];\r\n\r\n    Object.entries(SECTION_PATTERNS).forEach(([section, regex]) => {\r\n      if (regex.test(resumeText)) {\r\n        foundSections[section] = true;\r\n      } else {\r\n        missingSections.push(section);\r\n      }\r\n    });\r\n\r\n    setAnalysis({ foundSections, missingSections });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Dynamic Resume Analyzer</h1>\r\n\r\n      <Card className=\"w-full max-w-2xl p-4\">\r\n        <CardContent>\r\n          <textarea\r\n            className=\"w-full h-48 p-3 border rounded-md\"\r\n            placeholder=\"Paste your resume text here...\"\r\n            value={resumeText}\r\n            onChange={(e) => setResumeText(e.target.value)}\r\n          />\r\n\r\n          <Button className=\"mt-4\" onClick={analyzeResume}>\r\n            Analyze Resume\r\n          </Button>\r\n\r\n          {analysis && (\r\n            <div className=\"mt-6\">\r\n              <h2 className=\"text-xl font-semibold mb-2\">Analysis Results</h2>\r\n              <ul className=\"list-disc ml-6 text-green-700\">\r\n                {Object.keys(analysis.foundSections).map((section) => (\r\n                  <li key={section}>{section} ✅</li>\r\n                ))}\r\n              </ul>\r\n              <ul className=\"list-disc ml-6 text-red-600 mt-3\">\r\n                {analysis.missingSections.map((section) => (\r\n                  <li key={section}>{section} ❌</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}