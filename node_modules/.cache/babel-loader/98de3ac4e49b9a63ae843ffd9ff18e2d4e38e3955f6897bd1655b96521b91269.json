{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\SE-project\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RESPONSES = {\n  greeting: \"Hello! I'm your Resume Assistant. How can I help?\",\n  ats: \"ATS systems scan for keywords, formatting, and standard sections.\",\n  keywords: \"Use industry-specific keywords, action verbs, and quantify results.\",\n  format: \"Keep it clean, simple, with headings, bullet points, and no graphics.\",\n  sections: \"Must-have: Contact, Summary, Experience, Skills, Education. Optional: Projects, Certifications.\",\n  default: \"I can help with ATS, keywords, formatting, and section advice. Ask away!\"\n};\nexport default function Chatbot({\n  onClose\n}) {\n  _s();\n  const [chat, setChat] = useState([{\n    type: \"bot\",\n    text: RESPONSES.greeting\n  }]);\n  const [msg, setMsg] = useState(\"\");\n  const send = text => {\n    if (!text.trim()) return;\n    setChat(c => [...c, {\n      type: \"user\",\n      text\n    }]);\n    const lower = text.toLowerCase();\n    let reply = RESPONSES.default;\n    if (lower.includes(\"ats\")) reply = RESPONSES.ats;else if (lower.includes(\"keyword\")) reply = RESPONSES.keywords;else if (lower.includes(\"format\")) reply = RESPONSES.format;else if (lower.includes(\"section\")) reply = RESPONSES.sections;else if (lower.includes(\"hello\") || lower.includes(\"hi\")) reply = RESPONSES.greeting;\n    setChat(c => [...c, {\n      type: \"user\",\n      text\n    }, {\n      type: \"bot\",\n      text: reply\n    }]);\n    setMsg(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDD16 Resume Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chat.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${m.type === \"user\" ? \"user\" : \"bot\"}`,\n          children: m.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: msg,\n          onChange: e => setMsg(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && send(msg),\n          placeholder: \"Ask me...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => send(msg),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"q6jhfybfLw95khGuno1g0mSBm+Q=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RESPONSES","greeting","ats","keywords","format","sections","default","Chatbot","onClose","_s","chat","setChat","type","text","msg","setMsg","send","trim","c","lower","toLowerCase","reply","includes","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","map","m","i","value","onChange","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/SE-project/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst RESPONSES = {\r\n  greeting: \"Hello! I'm your Resume Assistant. How can I help?\",\r\n  ats: \"ATS systems scan for keywords, formatting, and standard sections.\",\r\n  keywords:\r\n    \"Use industry-specific keywords, action verbs, and quantify results.\",\r\n  format:\r\n    \"Keep it clean, simple, with headings, bullet points, and no graphics.\",\r\n  sections:\r\n    \"Must-have: Contact, Summary, Experience, Skills, Education. Optional: Projects, Certifications.\",\r\n  default:\r\n    \"I can help with ATS, keywords, formatting, and section advice. Ask away!\",\r\n};\r\n\r\nexport default function Chatbot({ onClose }) {\r\n  const [chat, setChat] = useState([\r\n    { type: \"bot\", text: RESPONSES.greeting },\r\n  ]);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const send = (text) => {\r\n    if (!text.trim()) return;\r\n    setChat((c) => [...c, { type: \"user\", text }]);\r\n    const lower = text.toLowerCase();\r\n    let reply = RESPONSES.default;\r\n    if (lower.includes(\"ats\")) reply = RESPONSES.ats;\r\n    else if (lower.includes(\"keyword\")) reply = RESPONSES.keywords;\r\n    else if (lower.includes(\"format\")) reply = RESPONSES.format;\r\n    else if (lower.includes(\"section\")) reply = RESPONSES.sections;\r\n    else if (lower.includes(\"hello\") || lower.includes(\"hi\"))\r\n      reply = RESPONSES.greeting;\r\n    setChat((c) => [...c, { type: \"user\", text }, { type: \"bot\", text: reply }]);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-overlay\" onClick={onClose}>\r\n      <div className=\"chatbot\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"chat-header\">\r\n          <h3>ðŸ¤– Resume Assistant</h3>\r\n          <button onClick={onClose}>âœ•</button>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {chat.map((m, i) => (\r\n            <div\r\n              key={i}\r\n              className={`chat-message ${m.type === \"user\" ? \"user\" : \"bot\"}`}\r\n            >\r\n              {m.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input-row\">\r\n          <input\r\n            value={msg}\r\n            onChange={(e) => setMsg(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && send(msg)}\r\n            placeholder=\"Ask me...\"\r\n          />\r\n          <button onClick={() => send(msg)}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}