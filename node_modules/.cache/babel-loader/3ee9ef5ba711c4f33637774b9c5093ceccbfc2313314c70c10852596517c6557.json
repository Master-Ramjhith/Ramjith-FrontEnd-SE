{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\Ram\\\\PESU 5th sem Project\\\\SE project\\\\src\\\\ResumeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState, useCallback } from \"react\";\n\n// Section definitions for parsing (Core Logic Task 1)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SECTIONS = {\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\n  summary: /\\b(summary|objective|profile)\\b/i,\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\n  skills: /\\b(skills|technical skills|competencies|technologies)\\b/i,\n  education: /\\b(education|degree|university|college)\\b/i,\n  projects: /\\b(projects?|portfolio)\\b/i,\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i\n};\n\n// Template definitions (US-007)\nconst TEMPLATES = {\n  modern: {\n    name: \"Modern Professional\",\n    className: \"theme-modern\",\n    fontStack: \"ui-sans-serif, system-ui, Segoe UI, Arial\"\n  },\n  minimal: {\n    name: \"Minimal Clean\",\n    className: \"theme-minimal\",\n    fontStack: \"Arial, Helvetica, sans-serif\"\n  },\n  creative: {\n    name: \"Creative Bold\",\n    className: \"theme-creative\",\n    fontStack: \"Helvetica, Arial, sans-serif\"\n  }\n};\n\n// Common weak words for weak word check (Feedback Generation Task)\nconst WEAK_WORDS = [\"responsible for\", \"managed\", \"worked on\", \"assisted\", \"duties included\"];\n\n// Stopwords for keyword extraction\nconst STOPWORDS = new Set([\"and\", \"the\", \"with\", \"from\", \"that\", \"this\", \"your\", \"their\", \"our\", \"for\", \"into\", \"able\", \"will\", \"shall\", \"must\", \"have\", \"has\", \"had\", \"are\", \"was\", \"were\", \"you\", \"they\", \"them\", \"over\", \"under\", \"about\", \"above\", \"below\", \"not\", \"only\", \"but\", \"also\", \"more\", \"than\", \"such\", \"etc\", \"using\", \"use\", \"used\", \"strong\", \"good\", \"great\", \"work\", \"role\", \"team\", \"skills\", \"requirements\", \"responsibilities\", \"job\", \"description\", \"looking\", \"plus\", \"preferred\", \"required\", \"experience\", \"years\", \"year\", \"developer\", \"engineer\", \"data\"]);\n\n// Utility functions\nfunction extractKeywords(text) {\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.]/i).map(w => w.trim()).filter(w => w.length > 2 && !STOPWORDS.has(w)))];\n}\nfunction firstNonEmptyLine(s) {\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\n}\nfunction escapeHTML(s) {\n  return s.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n}\n\n// Function to convert plain text sections into structured HTML for preview (US-008)\nfunction plainToHTML(resumeText) {\n  const lines = (resumeText || \"\").split(/\\r?\\n/);\n  return lines.map(line => {\n    const trimmed = line.trim();\n    if (!trimmed) return \"\";\n    // Check if the line is a section heading\n    const isHeading = Object.values(SECTIONS).some(r => r.test(trimmed));\n    // Check if the line is a bullet point\n    const isBullet = trimmed.match(/^[-*‚Ä¢\\d.].*$/);\n\n    // Simplistic HTML generation:\n    if (isHeading) return `<h2 class=\"section-heading\">${escapeHTML(trimmed)}</h2>`;\n    if (isBullet) return `<ul><li>${escapeHTML(trimmed.replace(/^[-*‚Ä¢\\d.]\\s*/, ''))}</li></ul>`;\n    return `<p>${escapeHTML(trimmed)}</p>`;\n  }).join(\"\\n\");\n}\n\n// Core ATS scoring logic (Core Logic Task 2)\nfunction calculateATSScore(resumeText, jobDescription) {\n  const found = {};\n  const missing = [];\n  const resumeLower = resumeText.toLowerCase();\n\n  // 1. Completeness (40% Weight)\n  const coreSections = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\n  Object.entries(SECTIONS).forEach(([k, rgx]) => {\n    const isFound = rgx.test(resumeLower);\n    if (isFound) found[k] = true;else if (coreSections.includes(k)) missing.push(k);\n  });\n  const coreFoundCount = coreSections.length - missing.length;\n  const structureScore = Math.round(coreFoundCount / coreSections.length * 40);\n\n  // 2. Keywords (30% Weight)\n  const jdKeys = extractKeywords(jobDescription);\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\n  const keywordScore = Math.round(keywordMatchRatio * 30);\n\n  // 3. Formatting (30% Weight) - Simple weak word check\n  let weakWordCount = 0;\n  WEAK_WORDS.forEach(word => {\n    const regex = new RegExp(`\\\\b${word}\\\\b`, 'g');\n    weakWordCount += [...resumeLower.matchAll(regex)].length;\n  });\n\n  // Penalize score for every 5 weak words (max penalty of 15 points)\n  const weakWordPenalty = Math.min(Math.floor(weakWordCount / 5) * 5, 15);\n  const formattingScore = Math.max(0, 30 - weakWordPenalty);\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore + formattingScore));\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\n  return {\n    found,\n    missing,\n    matched,\n    missingKeys,\n    atsScore,\n    uniqueJD: jdKeys.length,\n    structureScore,\n    keywordScore,\n    formattingScore,\n    weakWordCount,\n    weakWordPenalty\n  };\n}\nconst APPS_SCRIPT_URL = \"https://script.google.com/macros/s/AKfycbzTqKmb1sqsmGhh2g5MgBIw7JWtgYpEQ10cxZYIKFK0Kuitd6I_UYFKoUSoEIMDux1m/exec\";\nexport default function ResumeAnalyzer({\n  userEmail,\n  passwordHash\n}) {\n  _s();\n  const [resumeText, setResumeText] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\n  const [analysis, setAnalysis] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const previewRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // File handling (Data Handling Task 1)\n  const handleFile = file => {\n    setFileError(null);\n    if (!file) return;\n    if (file.size > 2 * 1024 * 1024) {\n      setFileError(\"File too large (Max 2MB).\");\n      setResumeText(\"\");\n      return;\n    }\n\n    // Dummy content for PDF files (as requested, since real PDF parsing is complex)\n    if (file.type === \"application/pdf\") {\n      setFileError(\"‚ö†Ô∏è PDF selected. Use .txt for accurate analysis. Dummy content loaded.\");\n      setResumeText(\"John Smith\\n(555) 123-4567 | john.smith@email.com | LinkedIn/johnsmith\\n\\nSummary\\nHighly motivated developer with experience in full-stack web technologies.\\n\\nExperience\\n- Spearheaded the development of a customer-facing portal using React and Tailwind CSS.\\n- Managed the migration of legacy systems to a new Firestore database, improving performance by 30%.\\n- Led Agile sprint planning and deployment cycles.\\n\\nSkills\\nReact, JavaScript, Tailwind CSS, Firebase, Firestore, Agile Methodology, SQL, Deployment.\\n\\nEducation\\nB.S. Computer Science, University of Technology\");\n      return;\n    }\n    if (file.type !== \"text/plain\") {\n      setFileError(\"Upload a .txt or .pdf file only. TXT recommended.\");\n      setResumeText(\"\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\n    reader.readAsText(file);\n  };\n\n  // Run ATS analysis whenever resume or JD text changes (Core Logic Task 2)\n  useEffect(() => {\n    if (!resumeText) {\n      setAnalysis(null);\n      return;\n    }\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\n  }, [resumeText, jobDescription]);\n\n  // Generate actionable feedback (US-006)\n  const feedback = useMemo(() => {\n    if (!analysis) return [];\n    const list = [];\n    const {\n      atsScore,\n      missing,\n      uniqueJD,\n      matched,\n      weakWordCount,\n      weakWordPenalty,\n      missingKeys\n    } = analysis;\n\n    // 1. Structure Feedback (US-004)\n    if (missing.length > 0) {\n      list.push(`‚ùå Structure Deficiency: Missing core sections: ${missing.join(\", \")}. (Impact: High)`);\n    } else {\n      list.push(`‚úÖ Structure Complete: All standard sections found.`);\n    }\n\n    // 2. Keyword Feedback\n    const matchPct = uniqueJD ? Math.round(matched.length / uniqueJD * 100) : 100;\n    if (uniqueJD === 0) {\n      list.push(`üîé No JD provided. Cannot calculate keyword alignment.`);\n    } else if (matchPct < 40) {\n      list.push(`üî¥ Low Keyword Match (${matchPct}%): Major tailoring needed. Missing: ${missingKeys.slice(0, 3).join(', ')}... (Impact: High)`);\n    } else if (matchPct < 70) {\n      list.push(`üü° Moderate Match (${matchPct}%): Add missing terms for better ATS score. (Impact: Medium)`);\n    } else {\n      list.push(`üü¢ Strong Match (${matchPct}%): Excellent keyword alignment.`);\n    }\n\n    // 3. Formatting/Vocabulary Feedback\n    if (weakWordCount > 0) {\n      list.push(`‚ö†Ô∏è Vocabulary: Used weak verbs ${weakWordCount} times. Lost ${weakWordPenalty} points. Replace 'responsible for' with 'Spearheaded' or 'Drove'. (Impact: Medium)`);\n    } else {\n      list.push(`üìà Vocabulary: Strong action verbs detected.`);\n    }\n\n    // 4. Final Score\n    list.push(`üìä Final ATS Score: ${atsScore}%. Target 80%+ for top performance.`);\n    return list;\n  }, [analysis]);\n\n  // Candidate Name for preview header\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\n  // HTML body for preview\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\n\n  // Dynamic PDF library loading (Security & Performance Task 2)\n  const loadLibraries = useCallback(() => {\n    return new Promise(resolve => {\n      if (window.jsPDF && window.html2canvas) return resolve();\n      const jsPDFScript = document.createElement(\"script\");\n      jsPDFScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\";\n      jsPDFScript.onload = () => {\n        const html2canvasScript = document.createElement(\"script\");\n        html2canvasScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\";\n        html2canvasScript.onload = resolve;\n        document.body.appendChild(html2canvasScript);\n      };\n      document.body.appendChild(jsPDFScript);\n    });\n  }, []);\n\n  // PDF Download and Upload to Google Drive (Data Handling Task 3, US-010)\n  const downloadPDF = async () => {\n    if (!previewRef.current || !userEmail || !passwordHash) {\n      alert(\"Login and a valid resume text are required to export.\");\n      return;\n    }\n    setIsUploading(true);\n    await loadLibraries();\n    const node = previewRef.current;\n    const originalClass = node.className;\n    const originalFont = node.style.fontFamily;\n\n    // Apply full template styles for high-quality export\n    node.className = `resume-sheet ${TEMPLATES[selectedTemplate].className}`;\n    node.style.fontFamily = TEMPLATES[selectedTemplate].fontStack;\n    try {\n      const canvas = await window.html2canvas(node, {\n        scale: 3,\n        backgroundColor: \"#fff\",\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new window.jsPDF(\"p\", \"pt\", \"a4\");\n      const pageWidth = pdf.internal.pageSize.getWidth();\n      const pageHeight = pdf.internal.pageSize.getHeight();\n      const imgHeight = canvas.height * pageWidth / canvas.width;\n\n      // Handle multi-page PDF generation\n      let y = 0,\n        remainingHeight = imgHeight;\n      while (remainingHeight > 0) {\n        pdf.addImage(imgData, \"PNG\", 0, -y, pageWidth, imgHeight);\n        remainingHeight -= pageHeight;\n        y += pageHeight;\n        if (remainingHeight > 0) pdf.addPage();\n      }\n      const fileName = `${candidateName.replace(/\\s/g, \"_\")}_Resume.pdf`;\n\n      // Convert PDF Blob to Base64 for Google Apps Script upload\n      const base64PDF = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result.split(\",\")[1]);\n        reader.onerror = reject;\n        reader.readAsDataURL(pdf.output(\"blob\"));\n      });\n\n      // Perform upload to Google Apps Script backend\n      const payload = new URLSearchParams({\n        action: \"store\",\n        email: userEmail,\n        passwordHash,\n        // Secure hash used for authorization\n        fileName,\n        resumeFile: base64PDF\n      });\n      const res = await fetch(APPS_SCRIPT_URL, {\n        method: \"POST\",\n        body: payload\n      });\n      const json = await res.json();\n      if (json.status === \"success\") {\n        alert(`‚úÖ Resume uploaded successfully to Google Drive! Link: ${json.link}`);\n      } else {\n        alert(`‚ùå Upload failed: ${json.message}`);\n      }\n    } catch (err) {\n      alert(`‚ö†Ô∏è PDF Generation or Upload Error: ${err.message}. Check console for details.`);\n      console.error(err);\n    } finally {\n      setIsUploading(false);\n      // Revert styles after canvas generation\n      node.className = originalClass;\n      node.style.fontFamily = originalFont;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83D\\uDCC4 Resume Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resume-dropzone\",\n            onDrop: e => {\n              e.preventDefault();\n              e.stopPropagation();\n              if (e.dataTransfer.files.length > 0) handleFile(e.dataTransfer.files[0]);\n            },\n            onDragOver: e => {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"dropzone-text\",\n              children: \"Drag & Drop or Select a File (.txt, .pdf)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \".txt,application/pdf\",\n              style: {\n                display: \"none\"\n              },\n              onChange: e => {\n                var _e$target$files;\n                return handleFile((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn select-file-btn\",\n              onClick: () => fileInputRef.current.click(),\n              children: \"Select File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), fileError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hint file-error\",\n              children: fileError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-input jd-input mt-1\",\n            placeholder: \"Paste your resume content here (or PDF text).\",\n            value: resumeText,\n            onChange: e => setResumeText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83D\\uDCDD Job Description (For Keyword Scoring)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-input jd-input\",\n            placeholder: \"Paste Job Description here...\",\n            value: jobDescription,\n            onChange: e => setJobDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint\",\n            children: \"The JD is used to determine how many relevant keywords are in your resume (30% of your score).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), resumeText && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83C\\uDFA8 Choose Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-grid\",\n            children: Object.entries(TEMPLATES).map(([key, t]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `template-card ${selectedTemplate === key ? \"selected\" : \"\"}`,\n              onClick: () => setSelectedTemplate(key),\n              title: t.name,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `template-swatch ${t.className}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"template-name\",\n                children: t.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint mt-1\",\n            children: \"Recommendation: The **Modern Professional** template is usually best for ATS readability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: [\"\\uD83D\\uDCCA ATS Analysis (Score: \", analysis.atsScore, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-ring\",\n              style: {\n                \"--pct\": `${analysis.atsScore}%`,\n                \"--ring-color\": analysis.atsScore >= 70 ? 'var(--ok)' : analysis.atsScore >= 40 ? 'var(--warn)' : 'var(--bad)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-num\",\n                children: analysis.atsScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-label\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-points\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Actionable Suggestions (US-006)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"feedback-list\",\n                children: feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  dangerouslySetInnerHTML: {\n                    __html: f\n                  }\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 47\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn primary\",\n              onClick: downloadPDF,\n              disabled: isUploading,\n              children: isUploading ? 'Uploading to Drive...' : 'üìÑ Download & Upload PDF'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: previewRef,\n          className: `resume-sheet ${TEMPLATES[selectedTemplate].className}`,\n          style: {\n            fontFamily: TEMPLATES[selectedTemplate].fontStack\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sheet-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: candidateName.slice(0, 1).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"headings\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"name\",\n                children: candidateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tagline\",\n                children: \"Professional Resume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sheet-body\",\n            dangerouslySetInnerHTML: {\n              __html: htmlBody\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeAnalyzer, \"lAdhETKRmfptxGCPjbO0eUKVlVM=\");\n_c = ResumeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"ResumeAnalyzer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","SECTIONS","contact","summary","experience","skills","education","projects","certifications","TEMPLATES","modern","name","className","fontStack","minimal","creative","WEAK_WORDS","STOPWORDS","Set","extractKeywords","text","toLowerCase","split","map","w","trim","filter","length","has","firstNonEmptyLine","s","x","find","escapeHTML","replaceAll","plainToHTML","resumeText","lines","line","trimmed","isHeading","Object","values","some","r","test","isBullet","match","replace","join","calculateATSScore","jobDescription","found","missing","resumeLower","coreSections","entries","forEach","k","rgx","isFound","includes","push","coreFoundCount","structureScore","Math","round","jdKeys","matched","keywordMatchRatio","keywordScore","weakWordCount","word","regex","RegExp","matchAll","weakWordPenalty","min","floor","formattingScore","max","atsScore","missingKeys","uniqueJD","APPS_SCRIPT_URL","ResumeAnalyzer","userEmail","passwordHash","_s","setResumeText","setJobDescription","selectedTemplate","setSelectedTemplate","analysis","setAnalysis","fileError","setFileError","isUploading","setIsUploading","previewRef","fileInputRef","handleFile","file","size","type","reader","FileReader","onload","e","String","target","result","readAsText","feedback","list","matchPct","slice","candidateName","htmlBody","loadLibraries","Promise","resolve","window","jsPDF","html2canvas","jsPDFScript","document","createElement","src","html2canvasScript","body","appendChild","downloadPDF","current","alert","node","originalClass","originalFont","style","fontFamily","canvas","scale","backgroundColor","useCORS","imgData","toDataURL","pdf","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","imgHeight","height","width","y","remainingHeight","addImage","addPage","fileName","base64PDF","reject","onloadend","onerror","readAsDataURL","output","payload","URLSearchParams","action","email","resumeFile","res","fetch","method","json","status","link","message","err","console","error","children","_jsxFileName","lineNumber","columnNumber","onDrop","preventDefault","stopPropagation","dataTransfer","files","onDragOver","ref","accept","display","onChange","_e$target$files","onClick","click","placeholder","value","key","t","title","f","i","dangerouslySetInnerHTML","__html","disabled","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/Ram/PESU 5th sem Project/SE project/src/ResumeAnalyzer.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState, useCallback } from \"react\";\r\n\r\n// Section definitions for parsing (Core Logic Task 1)\r\nconst SECTIONS = {\r\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\r\n  summary: /\\b(summary|objective|profile)\\b/i,\r\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\r\n  skills: /\\b(skills|technical skills|competencies|technologies)\\b/i,\r\n  education: /\\b(education|degree|university|college)\\b/i,\r\n  projects: /\\b(projects?|portfolio)\\b/i,\r\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i,\r\n};\r\n\r\n// Template definitions (US-007)\r\nconst TEMPLATES = {\r\n  modern: { name: \"Modern Professional\", className: \"theme-modern\", fontStack: \"ui-sans-serif, system-ui, Segoe UI, Arial\" },\r\n  minimal: { name: \"Minimal Clean\", className: \"theme-minimal\", fontStack: \"Arial, Helvetica, sans-serif\" },\r\n  creative: { name: \"Creative Bold\", className: \"theme-creative\", fontStack: \"Helvetica, Arial, sans-serif\" },\r\n};\r\n\r\n// Common weak words for weak word check (Feedback Generation Task)\r\nconst WEAK_WORDS = [\"responsible for\", \"managed\", \"worked on\", \"assisted\", \"duties included\"];\r\n\r\n// Stopwords for keyword extraction\r\nconst STOPWORDS = new Set([\r\n  \"and\",\"the\",\"with\",\"from\",\"that\",\"this\",\"your\",\"their\",\"our\",\"for\",\"into\",\"able\",\"will\",\"shall\",\"must\",\"have\",\"has\",\"had\",\r\n  \"are\",\"was\",\"were\",\"you\",\"they\",\"them\",\"over\",\"under\",\"about\",\"above\",\"below\",\"not\",\"only\",\"but\",\"also\",\"more\",\"than\",\r\n  \"such\",\"etc\",\"using\",\"use\",\"used\",\"strong\",\"good\",\"great\",\"work\",\"role\",\"team\",\"skills\",\"requirements\",\"responsibilities\",\r\n  \"job\",\"description\",\"looking\",\"plus\",\"preferred\",\"required\",\"experience\",\"years\",\"year\",\"developer\",\"engineer\",\"data\"\r\n]);\r\n\r\n// Utility functions\r\nfunction extractKeywords(text) {\r\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.]/i)\r\n    .map(w => w.trim())\r\n    .filter(w => w.length > 2 && !STOPWORDS.has(w))\r\n  )];\r\n}\r\n\r\nfunction firstNonEmptyLine(s) {\r\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\r\n}\r\n\r\nfunction escapeHTML(s) {\r\n  return s.replaceAll(\"&\",\"&amp;\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\");\r\n}\r\n\r\n// Function to convert plain text sections into structured HTML for preview (US-008)\r\nfunction plainToHTML(resumeText) {\r\n  const lines = (resumeText || \"\").split(/\\r?\\n/);\r\n  return lines.map(line => {\r\n    const trimmed = line.trim();\r\n    if (!trimmed) return \"\";\r\n    // Check if the line is a section heading\r\n    const isHeading = Object.values(SECTIONS).some(r => r.test(trimmed));\r\n    // Check if the line is a bullet point\r\n    const isBullet = trimmed.match(/^[-*‚Ä¢\\d.].*$/);\r\n    \r\n    // Simplistic HTML generation:\r\n    if (isHeading) return `<h2 class=\"section-heading\">${escapeHTML(trimmed)}</h2>`;\r\n    if (isBullet) return `<ul><li>${escapeHTML(trimmed.replace(/^[-*‚Ä¢\\d.]\\s*/, ''))}</li></ul>`;\r\n    return `<p>${escapeHTML(trimmed)}</p>`;\r\n  }).join(\"\\n\");\r\n}\r\n\r\n// Core ATS scoring logic (Core Logic Task 2)\r\nfunction calculateATSScore(resumeText, jobDescription) {\r\n  const found = {};\r\n  const missing = [];\r\n  const resumeLower = resumeText.toLowerCase();\r\n\r\n  // 1. Completeness (40% Weight)\r\n  const coreSections = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\r\n  Object.entries(SECTIONS).forEach(([k, rgx]) => {\r\n    const isFound = rgx.test(resumeLower);\r\n    if (isFound) found[k] = true;\r\n    else if (coreSections.includes(k)) missing.push(k);\r\n  });\r\n  \r\n  const coreFoundCount = coreSections.length - missing.length;\r\n  const structureScore = Math.round((coreFoundCount / coreSections.length) * 40);\r\n\r\n  // 2. Keywords (30% Weight)\r\n  const jdKeys = extractKeywords(jobDescription);\r\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\r\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\r\n  const keywordScore = Math.round(keywordMatchRatio * 30);\r\n\r\n  // 3. Formatting (30% Weight) - Simple weak word check\r\n  let weakWordCount = 0;\r\n  WEAK_WORDS.forEach(word => {\r\n    const regex = new RegExp(`\\\\b${word}\\\\b`, 'g');\r\n    weakWordCount += [...resumeLower.matchAll(regex)].length;\r\n  });\r\n  \r\n  // Penalize score for every 5 weak words (max penalty of 15 points)\r\n  const weakWordPenalty = Math.min(Math.floor(weakWordCount / 5) * 5, 15); \r\n  const formattingScore = Math.max(0, 30 - weakWordPenalty);\r\n\r\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore + formattingScore));\r\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\r\n\r\n  return { \r\n    found, missing, matched, missingKeys, \r\n    atsScore, uniqueJD: jdKeys.length,\r\n    structureScore, keywordScore, formattingScore,\r\n    weakWordCount, weakWordPenalty,\r\n  };\r\n}\r\n\r\nconst APPS_SCRIPT_URL = \"https://script.google.com/macros/s/AKfycbzTqKmb1sqsmGhh2g5MgBIw7JWtgYpEQ10cxZYIKFK0Kuitd6I_UYFKoUSoEIMDux1m/exec\";\r\n\r\n\r\nexport default function ResumeAnalyzer({ userEmail, passwordHash }) {\r\n  const [resumeText, setResumeText] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [fileError, setFileError] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const previewRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // File handling (Data Handling Task 1)\r\n  const handleFile = (file) => {\r\n    setFileError(null);\r\n    if (!file) return;\r\n\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      setFileError(\"File too large (Max 2MB).\");\r\n      setResumeText(\"\");\r\n      return;\r\n    }\r\n\r\n    // Dummy content for PDF files (as requested, since real PDF parsing is complex)\r\n    if (file.type === \"application/pdf\") {\r\n      setFileError(\"‚ö†Ô∏è PDF selected. Use .txt for accurate analysis. Dummy content loaded.\");\r\n      setResumeText(\"John Smith\\n(555) 123-4567 | john.smith@email.com | LinkedIn/johnsmith\\n\\nSummary\\nHighly motivated developer with experience in full-stack web technologies.\\n\\nExperience\\n- Spearheaded the development of a customer-facing portal using React and Tailwind CSS.\\n- Managed the migration of legacy systems to a new Firestore database, improving performance by 30%.\\n- Led Agile sprint planning and deployment cycles.\\n\\nSkills\\nReact, JavaScript, Tailwind CSS, Firebase, Firestore, Agile Methodology, SQL, Deployment.\\n\\nEducation\\nB.S. Computer Science, University of Technology\");\r\n      return;\r\n    }\r\n\r\n    if (file.type !== \"text/plain\") {\r\n      setFileError(\"Upload a .txt or .pdf file only. TXT recommended.\");\r\n      setResumeText(\"\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Run ATS analysis whenever resume or JD text changes (Core Logic Task 2)\r\n  useEffect(() => {\r\n    if (!resumeText) { setAnalysis(null); return; }\r\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\r\n  }, [resumeText, jobDescription]);\r\n\r\n  // Generate actionable feedback (US-006)\r\n  const feedback = useMemo(() => {\r\n    if (!analysis) return [];\r\n    const list = [];\r\n    const { atsScore, missing, uniqueJD, matched, weakWordCount, weakWordPenalty, missingKeys } = analysis;\r\n\r\n    // 1. Structure Feedback (US-004)\r\n    if (missing.length > 0) {\r\n      list.push(`‚ùå Structure Deficiency: Missing core sections: ${missing.join(\", \")}. (Impact: High)`);\r\n    } else {\r\n      list.push(`‚úÖ Structure Complete: All standard sections found.`);\r\n    }\r\n    \r\n    // 2. Keyword Feedback\r\n    const matchPct = uniqueJD ? Math.round((matched.length / uniqueJD) * 100) : 100;\r\n    if (uniqueJD === 0) {\r\n      list.push(`üîé No JD provided. Cannot calculate keyword alignment.`);\r\n    } else if (matchPct < 40) {\r\n      list.push(`üî¥ Low Keyword Match (${matchPct}%): Major tailoring needed. Missing: ${missingKeys.slice(0, 3).join(', ')}... (Impact: High)`);\r\n    } else if (matchPct < 70) {\r\n      list.push(`üü° Moderate Match (${matchPct}%): Add missing terms for better ATS score. (Impact: Medium)`);\r\n    } else {\r\n      list.push(`üü¢ Strong Match (${matchPct}%): Excellent keyword alignment.`);\r\n    }\r\n    \r\n    // 3. Formatting/Vocabulary Feedback\r\n    if (weakWordCount > 0) {\r\n        list.push(`‚ö†Ô∏è Vocabulary: Used weak verbs ${weakWordCount} times. Lost ${weakWordPenalty} points. Replace 'responsible for' with 'Spearheaded' or 'Drove'. (Impact: Medium)`);\r\n    } else {\r\n        list.push(`üìà Vocabulary: Strong action verbs detected.`);\r\n    }\r\n\r\n    // 4. Final Score\r\n    list.push(`üìä Final ATS Score: ${atsScore}%. Target 80%+ for top performance.`);\r\n\r\n    return list;\r\n  }, [analysis]);\r\n\r\n  // Candidate Name for preview header\r\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\r\n  // HTML body for preview\r\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\r\n\r\n  // Dynamic PDF library loading (Security & Performance Task 2)\r\n  const loadLibraries = useCallback(() => {\r\n    return new Promise((resolve) => {\r\n      if (window.jsPDF && window.html2canvas) return resolve();\r\n      \r\n      const jsPDFScript = document.createElement(\"script\");\r\n      jsPDFScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\";\r\n      jsPDFScript.onload = () => {\r\n        const html2canvasScript = document.createElement(\"script\");\r\n        html2canvasScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\";\r\n        html2canvasScript.onload = resolve;\r\n        document.body.appendChild(html2canvasScript);\r\n      };\r\n      document.body.appendChild(jsPDFScript);\r\n    });\r\n  }, []);\r\n\r\n  // PDF Download and Upload to Google Drive (Data Handling Task 3, US-010)\r\n  const downloadPDF = async () => {\r\n    if (!previewRef.current || !userEmail || !passwordHash) {\r\n      alert(\"Login and a valid resume text are required to export.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    await loadLibraries(); \r\n\r\n    const node = previewRef.current;\r\n    const originalClass = node.className;\r\n    const originalFont = node.style.fontFamily;\r\n    \r\n    // Apply full template styles for high-quality export\r\n    node.className = `resume-sheet ${TEMPLATES[selectedTemplate].className}`;\r\n    node.style.fontFamily = TEMPLATES[selectedTemplate].fontStack;\r\n\r\n    try {\r\n      const canvas = await window.html2canvas(node, { scale: 3, backgroundColor: \"#fff\", useCORS: true });\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n\r\n      const pdf = new window.jsPDF(\"p\", \"pt\", \"a4\");\r\n      const pageWidth = pdf.internal.pageSize.getWidth();\r\n      const pageHeight = pdf.internal.pageSize.getHeight();\r\n      const imgHeight = (canvas.height * pageWidth) / canvas.width;\r\n\r\n      // Handle multi-page PDF generation\r\n      let y = 0, remainingHeight = imgHeight;\r\n      while (remainingHeight > 0) {\r\n        pdf.addImage(imgData, \"PNG\", 0, -y, pageWidth, imgHeight);\r\n        remainingHeight -= pageHeight;\r\n        y += pageHeight;\r\n        if (remainingHeight > 0) pdf.addPage();\r\n      }\r\n\r\n      const fileName = `${candidateName.replace(/\\s/g, \"_\")}_Resume.pdf`;\r\n\r\n      // Convert PDF Blob to Base64 for Google Apps Script upload\r\n      const base64PDF = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result.split(\",\")[1]);\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(pdf.output(\"blob\"));\r\n      });\r\n      \r\n      // Perform upload to Google Apps Script backend\r\n      const payload = new URLSearchParams({\r\n        action: \"store\",\r\n        email: userEmail,\r\n        passwordHash, // Secure hash used for authorization\r\n        fileName,\r\n        resumeFile: base64PDF,\r\n      });\r\n\r\n      const res = await fetch(APPS_SCRIPT_URL, { \r\n        method: \"POST\", \r\n        body: payload \r\n      });\r\n      const json = await res.json();\r\n\r\n      if (json.status === \"success\") {\r\n        alert(`‚úÖ Resume uploaded successfully to Google Drive! Link: ${json.link}`);\r\n      } else {\r\n        alert(`‚ùå Upload failed: ${json.message}`);\r\n      }\r\n\r\n    } catch (err) {\r\n      alert(`‚ö†Ô∏è PDF Generation or Upload Error: ${err.message}. Check console for details.`);\r\n      console.error(err);\r\n    } finally {\r\n      setIsUploading(false);\r\n      // Revert styles after canvas generation\r\n      node.className = originalClass;\r\n      node.style.fontFamily = originalFont;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <div className=\"grid-2\">\r\n          {/* Resume Upload Card (US-001) */}\r\n          <div className=\"card\">\r\n            <h2 className=\"section-title\">üìÑ Resume Upload</h2>\r\n            <div className=\"resume-dropzone\"\r\n              onDrop={e => { e.preventDefault(); e.stopPropagation(); if (e.dataTransfer.files.length > 0) handleFile(e.dataTransfer.files[0]); }}\r\n              onDragOver={e => { e.preventDefault(); e.stopPropagation(); }}\r\n            >\r\n              <p className=\"dropzone-text\">Drag & Drop or Select a File (.txt, .pdf)</p>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\".txt,application/pdf\"\r\n                style={{ display: \"none\" }}\r\n                onChange={e => handleFile(e.target.files?.[0])}\r\n              />\r\n              <button className=\"btn select-file-btn\" onClick={() => fileInputRef.current.click()}>Select File</button>\r\n              {fileError && <p className=\"hint file-error\">{fileError}</p>}\r\n            </div>\r\n            <textarea className=\"text-input jd-input mt-1\" \r\n              placeholder=\"Paste your resume content here (or PDF text).\" \r\n              value={resumeText} \r\n              onChange={e => setResumeText(e.target.value)} \r\n            />\r\n          </div>\r\n\r\n          {/* Job Description Card */}\r\n          <div className=\"card\">\r\n            <h2 className=\"section-title\">üìù Job Description (For Keyword Scoring)</h2>\r\n            <textarea className=\"text-input jd-input\" placeholder=\"Paste Job Description here...\" value={jobDescription} onChange={e => setJobDescription(e.target.value)} />\r\n            <p className=\"hint\">The JD is used to determine how many relevant keywords are in your resume (30% of your score).</p>\r\n          </div>\r\n        </div>\r\n\r\n        {resumeText && (\r\n          <>\r\n            {/* Template Selection Card (US-007, US-009) */}\r\n            <div className=\"card\">\r\n              <h2 className=\"section-title\">üé® Choose Template</h2>\r\n              <div className=\"template-grid\">\r\n                {Object.entries(TEMPLATES).map(([key, t]) => (\r\n                  <button key={key} type=\"button\" className={`template-card ${selectedTemplate === key ? \"selected\" : \"\"}`} onClick={() => setSelectedTemplate(key)} title={t.name}>\r\n                    <div className={`template-swatch ${t.className}`}></div>\r\n                    <div className=\"template-name\">{t.name}</div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <p className=\"hint mt-1\">Recommendation: The **Modern Professional** template is usually best for ATS readability.</p>\r\n            </div>\r\n\r\n            {/* ATS Analysis Card (US-003, US-006) */}\r\n            {analysis && (\r\n              <div className=\"card\">\r\n                <h2 className=\"section-title\">üìä ATS Analysis (Score: {analysis.atsScore}%)</h2>\r\n                <div className=\"score-row\">\r\n                  <div className=\"score-ring\" style={{ \"--pct\": `${analysis.atsScore}%`, \"--ring-color\": analysis.atsScore >= 70 ? 'var(--ok)' : analysis.atsScore >= 40 ? 'var(--warn)' : 'var(--bad)' }}>\r\n                    <div className=\"score-num\">{analysis.atsScore}</div>\r\n                    <div className=\"score-label\">Score</div>\r\n                  </div>\r\n                  <div className=\"analysis-points\">\r\n                    <h3>Actionable Suggestions (US-006)</h3>\r\n                    <ul className=\"feedback-list\">\r\n                      {feedback.map((f, i) => <li key={i} dangerouslySetInnerHTML={{ __html: f }} />)}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <button className=\"btn primary\" onClick={downloadPDF} disabled={isUploading}>\r\n                    {isUploading ? 'Uploading to Drive...' : 'üìÑ Download & Upload PDF'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Resume Preview Sheet (US-008) */}\r\n            <div ref={previewRef} className={`resume-sheet ${TEMPLATES[selectedTemplate].className}`} style={{ fontFamily: TEMPLATES[selectedTemplate].fontStack }}>\r\n              <div className=\"sheet-header\">\r\n                <div className=\"avatar\">{candidateName.slice(0, 1).toUpperCase()}</div>\r\n                <div className=\"headings\">\r\n                  <h1 className=\"name\">{candidateName}</h1>\r\n                  <div className=\"tagline\">Professional Resume</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sheet-body\" dangerouslySetInnerHTML={{ __html: htmlBody }} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}