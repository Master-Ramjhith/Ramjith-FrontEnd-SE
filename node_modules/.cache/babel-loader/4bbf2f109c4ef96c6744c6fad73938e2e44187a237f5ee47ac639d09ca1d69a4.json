{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\SE-project\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RESPONSES = {\n  greeting: \"Hello! Iâ€™m your Resume Assistant ðŸ‘‹\",\n  ats: \"ATS scans for keywords, clean structure, and standard headings. Tailor to the JD.\",\n  keywords: \"Pick high-signal JD terms, use action verbs, and quantify results (%, $, time).\",\n  format: \"Keep it simple: headings, bullets, consistent dates, no tables/graphics.\",\n  sections: \"Must-have: Contact, Summary, Experience, Skills, Education. Add Projects/Certs if relevant.\",\n  default: \"Ask me about ATS, keywords, formatting, or sections.\"\n};\nexport default function Chatbot({\n  onClose\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: RESPONSES.greeting\n  }]);\n  const [input, setInput] = useState(\"\");\n  const replyFor = text => {\n    const t = text.toLowerCase();\n    if (t.includes(\"ats\")) return RESPONSES.ats;\n    if (t.includes(\"keyword\")) return RESPONSES.keywords;\n    if (t.includes(\"format\")) return RESPONSES.format;\n    if (t.includes(\"section\")) return RESPONSES.sections;\n    if (t.includes(\"hello\") || t.includes(\"hi\")) return RESPONSES.greeting;\n    return RESPONSES.default;\n  };\n  const send = () => {\n    const text = input.trim();\n    if (!text) return;\n    const next = [...messages, {\n      type: \"user\",\n      text\n    }, {\n      type: \"bot\",\n      text: replyFor(text)\n    }];\n    setMessages(next);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDD16 Resume Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x\",\n          onClick: onClose,\n          \"aria-label\": \"Close\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${m.type}`,\n          children: m.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && send(),\n          placeholder: \"Ask about ATS, keywords, format\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: send,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"wJsp9OvJOiD/ChGsjN7/FoGxXTI=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RESPONSES","greeting","ats","keywords","format","sections","default","Chatbot","onClose","_s","messages","setMessages","type","text","input","setInput","replyFor","t","toLowerCase","includes","send","trim","next","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","map","m","i","value","onChange","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/SE-project/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst RESPONSES = {\r\n  greeting: \"Hello! Iâ€™m your Resume Assistant ðŸ‘‹\",\r\n  ats: \"ATS scans for keywords, clean structure, and standard headings. Tailor to the JD.\",\r\n  keywords: \"Pick high-signal JD terms, use action verbs, and quantify results (%, $, time).\",\r\n  format: \"Keep it simple: headings, bullets, consistent dates, no tables/graphics.\",\r\n  sections: \"Must-have: Contact, Summary, Experience, Skills, Education. Add Projects/Certs if relevant.\",\r\n  default: \"Ask me about ATS, keywords, formatting, or sections.\",\r\n};\r\n\r\nexport default function Chatbot({ onClose }) {\r\n  const [messages, setMessages] = useState([{ type: \"bot\", text: RESPONSES.greeting }]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const replyFor = (text) => {\r\n    const t = text.toLowerCase();\r\n    if (t.includes(\"ats\")) return RESPONSES.ats;\r\n    if (t.includes(\"keyword\")) return RESPONSES.keywords;\r\n    if (t.includes(\"format\")) return RESPONSES.format;\r\n    if (t.includes(\"section\")) return RESPONSES.sections;\r\n    if (t.includes(\"hello\") || t.includes(\"hi\")) return RESPONSES.greeting;\r\n    return RESPONSES.default;\r\n  };\r\n\r\n  const send = () => {\r\n    const text = input.trim();\r\n    if (!text) return;\r\n    const next = [...messages, { type: \"user\", text }, { type: \"bot\", text: replyFor(text) }];\r\n    setMessages(next);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-overlay\" onClick={onClose}>\r\n      <div className=\"chatbot\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"chat-header\">\r\n          <h3>ðŸ¤– Resume Assistant</h3>\r\n          <button className=\"x\" onClick={onClose} aria-label=\"Close\">âœ•</button>\r\n        </div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map((m, i) => (\r\n            <div key={i} className={`chat-message ${m.type}`}>{m.text}</div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"chat-input-row\">\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && send()}\r\n            placeholder=\"Ask about ATS, keywords, formatâ€¦\"\r\n          />\r\n          <button onClick={send}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}