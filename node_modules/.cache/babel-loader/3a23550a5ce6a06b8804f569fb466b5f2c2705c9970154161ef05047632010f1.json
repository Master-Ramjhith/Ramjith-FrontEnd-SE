{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\SE-project\\\\src\\\\ResumeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\n// DRA-F-002: Regex patterns for common sections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECTIONS = {\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\n  summary: /\\b(summary|objective|profile)\\b/i,\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\n  skills: /\\b(skills|technical skills|competencies|technologies)\\b/i,\n  education: /\\b(education|degree|university|college)\\b/i,\n  projects: /\\b(projects?|portfolio)\\b/i,\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i\n};\nconst TEMPLATES = {\n  modern: {\n    name: \"Modern Professional\",\n    className: \"theme-modern\",\n    fontStack: \"ui-sans-serif, system-ui, Segoe UI, Arial\"\n  },\n  minimal: {\n    name: \"Minimal Clean\",\n    className: \"theme-minimal\",\n    fontStack: \"Arial, Helvetica, sans-serif\"\n  },\n  creative: {\n    name: \"Creative Bold\",\n    className: \"theme-creative\",\n    fontStack: \"Helvetica, Arial, sans-serif\"\n  }\n};\nconst STOPWORDS = new Set([\"and\", \"the\", \"with\", \"from\", \"that\", \"this\", \"your\", \"their\", \"our\", \"for\", \"into\", \"able\", \"will\", \"shall\", \"must\", \"have\", \"has\", \"had\", \"are\", \"was\", \"were\", \"you\", \"they\", \"them\", \"over\", \"under\", \"about\", \"above\", \"below\", \"not\", \"only\", \"but\", \"also\", \"more\", \"than\", \"such\", \"etc\", \"using\", \"use\", \"used\", \"strong\", \"good\", \"great\", \"work\", \"role\", \"team\", \"skills\", \"requirements\", \"responsibilities\", \"job\", \"description\", \"looking\", \"plus\", \"preferred\", \"required\", \"experience\", \"years\", \"year\", \"developer\", \"engineer\", \"data\"]);\nfunction extractKeywords(text) {\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.]/i).map(w => w.trim()).filter(w => w.length > 2 && !STOPWORDS.has(w)))];\n}\nfunction firstNonEmptyLine(s) {\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\n}\nfunction plainToHTML(resumeText) {\n  const lines = (resumeText || \"\").split(/\\r?\\n/);\n  return lines.map(line => {\n    const trimmed = line.trim();\n    if (!trimmed) return \"\";\n    // Simplified heuristic: if line matches a section or starts with a bullet/dash, treat as structure\n    const isHeading = Object.values(SECTIONS).some(r => r.test(trimmed));\n    const isBullet = trimmed.match(/^[\\-\\*\\‚Ä¢\\d\\.].*$/);\n    if (isHeading) return `<h2>${escapeHTML(trimmed)}</h2>`;\n    // If it looks like a bullet, wrap in <li> inside a dummy <ul> for structure visualization\n    if (isBullet) return `<ul><li>${escapeHTML(trimmed.replace(/^[\\-\\*\\‚Ä¢\\d\\.]\\s*/, ''))}</li></ul>`;\n    return `<p>${escapeHTML(trimmed)}</p>`;\n  }).join(\"\\n\");\n}\nfunction escapeHTML(s) {\n  return s.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n}\n\n// DRA-F-011: ATS Scoring Logic\nfunction calculateATSScore(resumeText, jobDescription) {\n  const found = {};\n  const missing = [];\n  Object.entries(SECTIONS).forEach(([k, rgx]) => {\n    if (rgx.test(resumeText)) found[k] = true;else missing.push(k);\n  });\n  const jdKeys = extractKeywords(jobDescription);\n  const resumeLower = resumeText.toLowerCase();\n\n  // Matched keywords are those from JD that appear in the resume\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\n\n  // Keyword score: Max 40 points\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\n  const keywordScore = Math.round(keywordMatchRatio * 40);\n\n  // Structure/Completeness Score: Max 60 points. Deduct 15 points for each core missing section.\n  const coreSections = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\n  const coreMissingCount = coreSections.filter(k => missing.includes(k)).length;\n  const structureScore = Math.max(0, 60 - coreMissingCount * 12); // Max deduction 60 points (5*12)\n\n  // Final Score: clamp between 0 and 100\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore));\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\n  return {\n    found,\n    missing,\n    matched,\n    missingKeys,\n    atsScore,\n    uniqueJD: jdKeys.length\n  };\n}\nexport default function ResumeAnalyzer() {\n  _s();\n  var _analysis$matched, _analysis$matched2, _analysis$missingKeys, _analysis$missingKeys2;\n  const [resumeText, setResumeText] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\n  const [analysis, setAnalysis] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const previewRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // DRA-F-001: Handle file upload (TXT and simulated PDF)\n  const handleFile = file => {\n    setFileError(null);\n    if (!file) return;\n    if (file.size > 2 * 1024 * 1024) {\n      // 2MB limit\n      setFileError(\"File too large (Max 2MB).\");\n      setResumeText(\"\");\n      return;\n    }\n    if (file.type === \"application/pdf\") {\n      // DRA-F-001: PDF handling simulation\n      setFileError(\"‚ö†Ô∏è PDF Uploaded. For best results, please convert to plain text (.txt) first. We will use a dummy placeholder content for analysis.\");\n      setResumeText(\"Candidate Name\\n\\nContact Information\\n\\nSummary\\n\\nExperience\\n\\nSkills: React, JavaScript, Python\\n\\nEducation\"); // Dummy content for PDF\n      return;\n    }\n    if (file.type !== \"text/plain\") {\n      setFileError(\"Upload a .txt or .pdf file only. PDF recommended as TXT for accurate parsing.\");\n      setResumeText(\"\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\n    reader.readAsText(file);\n  };\n\n  // Effect to recalculate ATS score and analysis when inputs change\n  useEffect(() => {\n    if (!resumeText) {\n      setAnalysis(null);\n      return;\n    }\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\n  }, [resumeText, jobDescription]);\n\n  // DRA-F-013: Generate feedback based on analysis\n  const feedback = useMemo(() => {\n    if (!analysis) return [];\n    const list = [];\n\n    // Structure feedback\n    if (analysis.missing.length) {\n      list.push(`‚ùå Missing core sections: ${analysis.missing.join(\", \")}`);\n    } else {\n      list.push(`‚úÖ All standard sections found and structured.`);\n    }\n\n    // Keyword feedback\n    const matchPct = analysis.uniqueJD ? Math.round(analysis.matched.length / analysis.uniqueJD * 100) : 100;\n    if (matchPct < 50) {\n      list.push(`‚ö†Ô∏è Keyword Gap: Only ${matchPct}% of JD keywords found. Focus on tailoring.`);\n    } else if (matchPct < 75) {\n      list.push(`üìà Good Keyword Match (${matchPct}%). Try integrating the top missing terms.`);\n    } else {\n      list.push(`‚≠ê Excellent Keyword Match (${matchPct}%). Strong ATS alignment.`);\n    }\n\n    // Final score summary\n    list.push(`ATS Score: ${analysis.atsScore}%. Review your formatting and content detail.`);\n    return list;\n  }, [analysis]);\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\n\n  // DRA-F-040, DRA-F-041: Download PDF\n  const downloadPDF = async () => {\n    if (!previewRef.current) return;\n    const node = previewRef.current;\n\n    // Apply temporary styles for capture\n    const originalClass = node.className;\n    node.className = `resume-sheet ${selectedTemplate}`;\n    node.style.fontFamily = TEMPLATES[selectedTemplate].fontStack;\n\n    // Use a higher scale for a crisper PDF output\n    const canvas = await html2canvas(node, {\n      scale: 3,\n      backgroundColor: \"#fff\",\n      useCORS: true\n    });\n    const img = canvas.toDataURL(\"image/png\");\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n\n    // Calculate page dimensions for multi-page handling\n    const pageW = pdf.internal.pageSize.getWidth();\n    const pageH = pdf.internal.pageSize.getHeight();\n    const imgH = canvas.height * pageW / canvas.width;\n    let y = 0;\n    let remaining = imgH;\n    while (remaining > 0) {\n      // Add the image, slicing it based on the remaining height\n      pdf.addImage(img, \"PNG\", 0, -y, pageW, imgH);\n      remaining -= pageH;\n      y += pageH;\n      if (remaining > 0) pdf.addPage();\n    }\n    pdf.save(`${candidateName.replace(/\\s/g, '_')}_Resume_ATS.pdf`);\n\n    // Restore original class/style\n    node.className = originalClass;\n    node.style.fontFamily = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\uD83D\\uDCC4 Resume Upload (DRA-F-001)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resume-dropzone\",\n          onDrop: e => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.dataTransfer.files.length > 0) handleFile(e.dataTransfer.files[0]);\n          },\n          onDragOver: e => {\n            e.preventDefault();\n            e.stopPropagation();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-text\",\n            children: \"Drag & Drop or Select a File (.txt, .pdf)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            id: \"resume-file-input\",\n            type: \"file\",\n            accept: \".txt,application/pdf\",\n            style: {\n              display: \"none\"\n            },\n            onChange: e => {\n              var _e$target$files;\n              return handleFile((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn select-file-btn\",\n            onClick: () => fileInputRef.current.click(),\n            children: \"Select File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), fileError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint file-error\",\n            children: fileError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\uD83D\\uDCDD Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input jd-input\",\n          placeholder: \"Paste JD here to analyze keyword match...\",\n          value: jobDescription,\n          onChange: e => setJobDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), resumeText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83C\\uDFA8 Choose Template (DRA-F-020)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-grid\",\n        children: Object.entries(TEMPLATES).map(([key, t]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `template-card ${selectedTemplate === key ? \"selected\" : \"\"}`,\n          onClick: () => setSelectedTemplate(key),\n          title: t.name,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `template-swatch ${t.className}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-name\",\n            children: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: [\"\\uD83D\\uDCCA ATS Analysis (Score: \", analysis.atsScore, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-ring\",\n          style: {\n            \"--pct\": `${analysis.atsScore}%`,\n            \"--ring-color\": analysis.atsScore >= 75 ? 'var(--ok)' : analysis.atsScore >= 50 ? 'var(--warn)' : 'var(--bad)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-num\",\n            children: analysis.atsScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-label\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-points\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Improvement Suggestions (DRA-F-013)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"feedback-list\",\n            children: feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: f\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 66\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chips-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chips-title\",\n              children: [\"Keywords (\", (_analysis$matched = analysis.matched) === null || _analysis$matched === void 0 ? void 0 : _analysis$matched.length, \"/\", analysis.uniqueJD, \" found)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chips\",\n              children: [(_analysis$matched2 = analysis.matched) === null || _analysis$matched2 === void 0 ? void 0 : _analysis$matched2.slice(0, 10).map(k => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chip ok\",\n                children: k\n              }, k, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 57\n              }, this)), (_analysis$missingKeys = analysis.missingKeys) === null || _analysis$missingKeys === void 0 ? void 0 : _analysis$missingKeys.slice(0, 10).map(k => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chip warn\",\n                children: k\n              }, k, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 61\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), ((_analysis$missingKeys2 = analysis.missingKeys) === null || _analysis$missingKeys2 === void 0 ? void 0 : _analysis$missingKeys2.length) > 10 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hint\",\n              children: [\"...\", analysis.missingKeys.length - 10, \" more missing keywords.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: downloadPDF,\n          title: \"Download Resume with Applied Template\",\n          children: \"\\uD83D\\uDCC4 Download PDF (DRA-F-040)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), resumeText && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: previewRef,\n      className: `resume-sheet ${TEMPLATES[selectedTemplate].className}`,\n      style: {\n        fontFamily: TEMPLATES[selectedTemplate].fontStack\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sheet-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: candidateName.slice(0, 1).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headings\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"name\",\n            children: candidateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tagline\",\n            children: \"Professional Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sheet-body\",\n        dangerouslySetInnerHTML: {\n          __html: htmlBody\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeAnalyzer, \"j19dOzu+X4XxUEiM/b4BOOeL1z0=\");\n_c = ResumeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"ResumeAnalyzer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsPDF","html2canvas","jsxDEV","_jsxDEV","SECTIONS","contact","summary","experience","skills","education","projects","certifications","TEMPLATES","modern","name","className","fontStack","minimal","creative","STOPWORDS","Set","extractKeywords","text","toLowerCase","split","map","w","trim","filter","length","has","firstNonEmptyLine","s","x","find","plainToHTML","resumeText","lines","line","trimmed","isHeading","Object","values","some","r","test","isBullet","match","escapeHTML","replace","join","replaceAll","calculateATSScore","jobDescription","found","missing","entries","forEach","k","rgx","push","jdKeys","resumeLower","matched","includes","keywordMatchRatio","keywordScore","Math","round","coreSections","coreMissingCount","structureScore","max","atsScore","min","missingKeys","uniqueJD","ResumeAnalyzer","_s","_analysis$matched","_analysis$matched2","_analysis$missingKeys","_analysis$missingKeys2","setResumeText","setJobDescription","selectedTemplate","setSelectedTemplate","analysis","setAnalysis","fileError","setFileError","previewRef","fileInputRef","handleFile","file","size","type","reader","FileReader","onload","e","String","target","result","readAsText","feedback","list","matchPct","candidateName","htmlBody","downloadPDF","current","node","originalClass","style","fontFamily","canvas","scale","backgroundColor","useCORS","img","toDataURL","pdf","pageW","internal","pageSize","getWidth","pageH","getHeight","imgH","height","width","y","remaining","addImage","addPage","save","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","preventDefault","stopPropagation","dataTransfer","files","onDragOver","ref","id","accept","display","onChange","_e$target$files","onClick","click","placeholder","value","key","t","title","f","i","slice","toUpperCase","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/SE-project/src/ResumeAnalyzer.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\n// DRA-F-002: Regex patterns for common sections\r\nconst SECTIONS = {\r\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\r\n  summary: /\\b(summary|objective|profile)\\b/i,\r\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\r\n  skills: /\\b(skills|technical skills|competencies|technologies)\\b/i,\r\n  education: /\\b(education|degree|university|college)\\b/i,\r\n  projects: /\\b(projects?|portfolio)\\b/i,\r\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i,\r\n};\r\n\r\nconst TEMPLATES = {\r\n  modern: { name: \"Modern Professional\", className: \"theme-modern\", fontStack: \"ui-sans-serif, system-ui, Segoe UI, Arial\" },\r\n  minimal: { name: \"Minimal Clean\", className: \"theme-minimal\", fontStack: \"Arial, Helvetica, sans-serif\" },\r\n  creative: { name: \"Creative Bold\", className: \"theme-creative\", fontStack: \"Helvetica, Arial, sans-serif\" },\r\n};\r\n\r\nconst STOPWORDS = new Set([\"and\",\"the\",\"with\",\"from\",\"that\",\"this\",\"your\",\"their\",\"our\",\"for\",\"into\",\"able\",\"will\",\"shall\",\"must\",\"have\",\"has\",\"had\",\"are\",\"was\",\"were\",\"you\",\"they\",\"them\",\"over\",\"under\",\"about\",\"above\",\"below\",\"not\",\"only\",\"but\",\"also\",\"more\",\"than\",\"such\",\"etc\",\"using\",\"use\",\"used\",\"strong\",\"good\",\"great\",\"work\",\"role\",\"team\",\"skills\",\"requirements\",\"responsibilities\",\"job\",\"description\",\"looking\",\"plus\",\"preferred\",\"required\",\"experience\",\"years\",\"year\",\"developer\",\"engineer\",\"data\"]);\r\n\r\nfunction extractKeywords(text) { return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.]/i).map(w=>w.trim()).filter(w=>w.length>2 && !STOPWORDS.has(w)))]; }\r\nfunction firstNonEmptyLine(s) { return (s||\"\").split(/\\r?\\n/).map(x=>x.trim()).find(x=>x.length>0)||\"Candidate Name\"; }\r\nfunction plainToHTML(resumeText) { \r\n  const lines = (resumeText||\"\").split(/\\r?\\n/);\r\n  return lines.map(line=>{\r\n    const trimmed=line.trim(); if(!trimmed) return \"\";\r\n    // Simplified heuristic: if line matches a section or starts with a bullet/dash, treat as structure\r\n    const isHeading = Object.values(SECTIONS).some(r=>r.test(trimmed));\r\n    const isBullet = trimmed.match(/^[\\-\\*\\‚Ä¢\\d\\.].*$/);\r\n    \r\n    if(isHeading) return `<h2>${escapeHTML(trimmed)}</h2>`;\r\n    // If it looks like a bullet, wrap in <li> inside a dummy <ul> for structure visualization\r\n    if(isBullet) return `<ul><li>${escapeHTML(trimmed.replace(/^[\\-\\*\\‚Ä¢\\d\\.]\\s*/, ''))}</li></ul>`;\r\n    \r\n    return `<p>${escapeHTML(trimmed)}</p>`;\r\n  }).join(\"\\n\");\r\n}\r\nfunction escapeHTML(s) { return s.replaceAll(\"&\",\"&amp;\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\"); }\r\n\r\n\r\n// DRA-F-011: ATS Scoring Logic\r\nfunction calculateATSScore(resumeText, jobDescription) {\r\n  const found = {};\r\n  const missing = [];\r\n  Object.entries(SECTIONS).forEach(([k, rgx]) => {\r\n    if (rgx.test(resumeText)) found[k] = true;\r\n    else missing.push(k);\r\n  });\r\n\r\n  const jdKeys = extractKeywords(jobDescription);\r\n  const resumeLower = resumeText.toLowerCase();\r\n  \r\n  // Matched keywords are those from JD that appear in the resume\r\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\r\n  \r\n  // Keyword score: Max 40 points\r\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\r\n  const keywordScore = Math.round(keywordMatchRatio * 40);\r\n\r\n  // Structure/Completeness Score: Max 60 points. Deduct 15 points for each core missing section.\r\n  const coreSections = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\r\n  const coreMissingCount = coreSections.filter(k => missing.includes(k)).length;\r\n  \r\n  const structureScore = Math.max(0, 60 - coreMissingCount * 12); // Max deduction 60 points (5*12)\r\n\r\n  // Final Score: clamp between 0 and 100\r\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore));\r\n\r\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\r\n\r\n  return { found, missing, matched, missingKeys, atsScore, uniqueJD: jdKeys.length };\r\n}\r\n\r\n\r\nexport default function ResumeAnalyzer() {\r\n  const [resumeText,setResumeText] = useState(\"\");\r\n  const [jobDescription,setJobDescription] = useState(\"\");\r\n  const [selectedTemplate,setSelectedTemplate] = useState(\"modern\");\r\n  const [analysis,setAnalysis] = useState(null);\r\n  const [fileError, setFileError] = useState(null);\r\n  const previewRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // DRA-F-001: Handle file upload (TXT and simulated PDF)\r\n  const handleFile = (file)=>{\r\n    setFileError(null);\r\n    if(!file) return;\r\n    if(file.size > 2 * 1024 * 1024) { // 2MB limit\r\n      setFileError(\"File too large (Max 2MB).\");\r\n      setResumeText(\"\");\r\n      return;\r\n    }\r\n\r\n    if(file.type === \"application/pdf\") {\r\n      // DRA-F-001: PDF handling simulation\r\n      setFileError(\"‚ö†Ô∏è PDF Uploaded. For best results, please convert to plain text (.txt) first. We will use a dummy placeholder content for analysis.\");\r\n      setResumeText(\"Candidate Name\\n\\nContact Information\\n\\nSummary\\n\\nExperience\\n\\nSkills: React, JavaScript, Python\\n\\nEducation\"); // Dummy content for PDF\r\n      return;\r\n    }\r\n    \r\n    if(file.type!==\"text/plain\"){ \r\n      setFileError(\"Upload a .txt or .pdf file only. PDF recommended as TXT for accurate parsing.\");\r\n      setResumeText(\"\");\r\n      return; \r\n    }\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = e=>setResumeText(String(e.target.result||\"\"));\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  // Effect to recalculate ATS score and analysis when inputs change\r\n  useEffect(() => {\r\n    if (!resumeText) { setAnalysis(null); return; }\r\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\r\n  }, [resumeText, jobDescription]);\r\n\r\n\r\n  // DRA-F-013: Generate feedback based on analysis\r\n  const feedback = useMemo(()=>{\r\n    if(!analysis) return [];\r\n    const list=[];\r\n    \r\n    // Structure feedback\r\n    if(analysis.missing.length) {\r\n      list.push(`‚ùå Missing core sections: ${analysis.missing.join(\", \")}`);\r\n    } else {\r\n      list.push(`‚úÖ All standard sections found and structured.`);\r\n    }\r\n    \r\n    // Keyword feedback\r\n    const matchPct = analysis.uniqueJD ? Math.round((analysis.matched.length / analysis.uniqueJD) * 100) : 100;\r\n    if(matchPct < 50) {\r\n      list.push(`‚ö†Ô∏è Keyword Gap: Only ${matchPct}% of JD keywords found. Focus on tailoring.`);\r\n    } else if (matchPct < 75) {\r\n      list.push(`üìà Good Keyword Match (${matchPct}%). Try integrating the top missing terms.`);\r\n    } else {\r\n      list.push(`‚≠ê Excellent Keyword Match (${matchPct}%). Strong ATS alignment.`);\r\n    }\r\n\r\n    // Final score summary\r\n    list.push(`ATS Score: ${analysis.atsScore}%. Review your formatting and content detail.`);\r\n    \r\n    return list;\r\n  },[analysis]);\r\n\r\n  const candidateName=useMemo(()=>firstNonEmptyLine(resumeText),[resumeText]);\r\n  const htmlBody=useMemo(()=>plainToHTML(resumeText),[resumeText]);\r\n\r\n  // DRA-F-040, DRA-F-041: Download PDF\r\n  const downloadPDF = async () => {\r\n    if (!previewRef.current) return;\r\n    const node = previewRef.current;\r\n    \r\n    // Apply temporary styles for capture\r\n    const originalClass = node.className;\r\n    node.className = `resume-sheet ${selectedTemplate}`;\r\n    node.style.fontFamily = TEMPLATES[selectedTemplate].fontStack;\r\n\r\n    // Use a higher scale for a crisper PDF output\r\n    const canvas = await html2canvas(node, { scale: 3, backgroundColor: \"#fff\", useCORS: true });\r\n    const img = canvas.toDataURL(\"image/png\");\r\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\r\n    \r\n    // Calculate page dimensions for multi-page handling\r\n    const pageW = pdf.internal.pageSize.getWidth();\r\n    const pageH = pdf.internal.pageSize.getHeight();\r\n    const imgH = (canvas.height * pageW) / canvas.width;\r\n    let y = 0;\r\n    let remaining = imgH;\r\n\r\n    while (remaining > 0) {\r\n      // Add the image, slicing it based on the remaining height\r\n      pdf.addImage(img, \"PNG\", 0, -y, pageW, imgH);\r\n      remaining -= pageH;\r\n      y += pageH;\r\n      if (remaining > 0) pdf.addPage();\r\n    }\r\n\r\n    pdf.save(`${candidateName.replace(/\\s/g, '_')}_Resume_ATS.pdf`);\r\n\r\n    // Restore original class/style\r\n    node.className = originalClass;\r\n    node.style.fontFamily = '';\r\n  };\r\n\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"grid-2\">\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">üìÑ Resume Upload (DRA-F-001)</h2>\r\n          <div className=\"resume-dropzone\"\r\n            onDrop={e=>{e.preventDefault(); e.stopPropagation(); if(e.dataTransfer.files.length>0) handleFile(e.dataTransfer.files[0]);}}\r\n            onDragOver={e=>{e.preventDefault(); e.stopPropagation();}}\r\n          >\r\n            <p className=\"dropzone-text\">Drag & Drop or Select a File (.txt, .pdf)</p>\r\n            <input \r\n              ref={fileInputRef}\r\n              id=\"resume-file-input\" \r\n              type=\"file\" \r\n              accept=\".txt,application/pdf\" \r\n              style={{display:\"none\"}} \r\n              onChange={e=>handleFile(e.target.files?.[0])}\r\n            />\r\n            {/* Added Select File Button */}\r\n            <button className=\"btn select-file-btn\" onClick={()=>fileInputRef.current.click()}>\r\n                Select File\r\n            </button>\r\n            {fileError && <p className=\"hint file-error\">{fileError}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">üìù Job Description</h2>\r\n          <textarea className=\"text-input jd-input\" placeholder=\"Paste JD here to analyze keyword match...\" value={jobDescription} onChange={e=>setJobDescription(e.target.value)} />\r\n        </div>\r\n      </div>\r\n\r\n      {resumeText && (\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">üé® Choose Template (DRA-F-020)</h2>\r\n          <div className=\"template-grid\">\r\n            {Object.entries(TEMPLATES).map(([key,t])=>(\r\n              <button key={key} type=\"button\" className={`template-card ${selectedTemplate===key?\"selected\":\"\"}`} onClick={()=>setSelectedTemplate(key)} title={t.name}>\r\n                <div className={`template-swatch ${t.className}`}></div>\r\n                <div className=\"template-name\">{t.name}</div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {analysis && (\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">üìä ATS Analysis (Score: {analysis.atsScore}%)</h2>\r\n          <div className=\"score-row\">\r\n            {/* Fixed Score Ring CSS using the --pct variable */}\r\n            <div className=\"score-ring\" style={{ \"--pct\": `${analysis.atsScore}%`, \"--ring-color\": analysis.atsScore >= 75 ? 'var(--ok)' : analysis.atsScore >= 50 ? 'var(--warn)' : 'var(--bad)' }}>\r\n              <div className=\"score-num\">{analysis.atsScore}</div>\r\n              <div className=\"score-label\">Score</div>\r\n            </div>\r\n\r\n            <div className=\"analysis-points\">\r\n              <h3>Improvement Suggestions (DRA-F-013)</h3>\r\n              <ul className=\"feedback-list\">{feedback.map((f,i)=><li key={i}>{f}</li>)}</ul>\r\n              \r\n              <div className=\"chips-container\">\r\n                <p className=\"chips-title\">Keywords ({analysis.matched?.length}/{analysis.uniqueJD} found)</p>\r\n                <div className=\"chips\">\r\n                  {analysis.matched?.slice(0,10).map(k=><span key={k} className=\"chip ok\">{k}</span>)}\r\n                  {analysis.missingKeys?.slice(0,10).map(k=><span key={k} className=\"chip warn\">{k}</span>)}\r\n                </div>\r\n                {analysis.missingKeys?.length > 10 && <p className=\"hint\">...{analysis.missingKeys.length - 10} more missing keywords.</p>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"actions\">\r\n            <button className=\"btn primary\" onClick={downloadPDF} title=\"Download Resume with Applied Template\">üìÑ Download PDF (DRA-F-040)</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Resume Preview */}\r\n      {resumeText && (\r\n        <div ref={previewRef} className={`resume-sheet ${TEMPLATES[selectedTemplate].className}`} style={{ fontFamily:TEMPLATES[selectedTemplate].fontStack }}>\r\n          <div className=\"sheet-header\">\r\n            <div className=\"avatar\">{candidateName.slice(0,1).toUpperCase()}</div>\r\n            <div className=\"headings\">\r\n              <h1 className=\"name\">{candidateName}</h1>\r\n              <div className=\"tagline\">Professional Resume</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sheet-body\" dangerouslySetInnerHTML={{__html: htmlBody}} />\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}