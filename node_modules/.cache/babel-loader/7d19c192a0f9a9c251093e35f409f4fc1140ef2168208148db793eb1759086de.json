{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\Ram\\\\PESU 5th sem Project\\\\SE project\\\\src\\\\ResumeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState, useCallback } from \"react\";\n\n// --- Configuration Constants (Centralized and Descriptive) ---\n\n// Section definitions for robust parsing using regex\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RESUME_SECTIONS = {\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\n  summary: /\\b(summary|objective|profile|professional summary)\\b/i,\n  experience: /\\b(experience|work experience|employment|career|professional history)\\b/i,\n  skills: /\\b(skills|technical skills|competencies|technologies|tools)\\b/i,\n  education: /\\b(education|degree|university|college|academic history)\\b/i,\n  projects: /\\b(projects?|portfolio|personal projects?)\\b/i,\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i,\n  awards: /\\b(awards|honors|achievements)\\b/i\n};\n\n// Core sections for scoring (must-haves)\nconst CORE_SECTIONS = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\n\n// Template definitions for styling (Simplified and Professional)\nexport const RESUME_TEMPLATES = {\n  modern: {\n    id: 'modern',\n    name: \"Modern Professional\",\n    className: \"theme-modern\",\n    fontStack: \"'Roboto', 'Helvetica', 'Arial', sans-serif\"\n  },\n  minimal: {\n    id: 'minimal',\n    name: \"Minimal Clean\",\n    className: \"theme-minimal\",\n    fontStack: \"'Arial', sans-serif\"\n  },\n  classic: {\n    id: 'classic',\n    name: \"Classic Standard\",\n    className: \"theme-classic\",\n    fontStack: \"'Times New Roman', serif\"\n  }\n};\n\n// Stopwords used for cleaner keyword extraction from the JD\nconst STOPWORDS = new Set([\"and\", \"the\", \"with\", \"from\", \"that\", \"this\", \"your\", \"their\", \"our\", \"for\", \"into\", \"able\", \"will\", \"shall\", \"must\", \"have\", \"has\", \"had\", \"are\", \"was\", \"were\", \"you\", \"they\", \"them\", \"over\", \"under\", \"about\", \"above\", \"below\", \"not\", \"only\", \"but\", \"also\", \"more\", \"than\", \"such\", \"etc\", \"using\", \"use\", \"used\", \"strong\", \"good\", \"great\", \"work\", \"role\", \"team\", \"skills\", \"requirements\", \"responsibilities\", \"job\", \"description\", \"looking\", \"plus\", \"preferred\", \"required\", \"experience\", \"years\", \"year\", \"developer\", \"engineer\", \"data\", \"to\", \"a\", \"an\", \"is\", \"of\", \"in\", \"it\", \"at\", \"by\", \"be\", \"as\", \"or\", \"which\", \"all\", \"we\", \"company\", \"client\"]);\n\n// Weak words that penalize the formatting/vocabulary score (action verb detection)\nconst WEAK_WORDS = [\"responsible for\", \"managed\", \"worked on\", \"assisted\", \"duties included\", \"had to\", \"developed a\", \"was involved in\", \"my main task was\", \"i was tasked with\"];\n\n// --- Utility Functions ---\n\n/** Extracts unique, relevant keywords from text, ignoring common stopwords. */\nfunction extractKeywords(text) {\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.-]/i).map(w => w.trim()).filter(w => w.length > 2 && !STOPWORDS.has(w)))];\n}\n\n/** Finds the first non-empty line to use as the candidate name. */\nfunction firstNonEmptyLine(s) {\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\n}\n\n/** Escapes special HTML characters to prevent XSS in dangerouslySetInnerHTML. */\nfunction escapeHTML(s) {\n  return s.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\").replaceAll('\"', '&quot;').replaceAll(\"'\", '&#39;');\n}\n\n/** Converts plain text resume content into structured HTML for template rendering. */\nfunction plainToHTML(resumeText) {\n  const lines = (resumeText || \"\").split(/\\r?\\n/).map(line => line.trim()).filter(line => line.length > 0);\n  let htmlOutput = \"\";\n  let inList = false;\n  lines.forEach(trimmed => {\n    const isHeading = Object.values(RESUME_SECTIONS).some(r => r.test(trimmed));\n    // Check for standard bullet points or numbering like 1. or 1)\n    const isBullet = trimmed.match(/^[-*•\\d.()]+\\s/);\n    const safeContent = escapeHTML(trimmed.replace(/^[-*•\\d.()]+\\s*/, ''));\n    if (isHeading) {\n      if (inList) htmlOutput += \"</ul>\\n\";\n      inList = false;\n      htmlOutput += `<h2 class=\"section-heading\">${safeContent}</h2>\\n`;\n    } else if (isBullet) {\n      if (!inList) htmlOutput += \"<ul>\\n\";\n      inList = true;\n      htmlOutput += `<li>${safeContent}</li>\\n`;\n    } else {\n      if (inList) htmlOutput += \"</ul>\\n\";\n      inList = false;\n      htmlOutput += `<p>${safeContent}</p>\\n`;\n    }\n  });\n  if (inList) htmlOutput += \"</ul>\\n\";\n  return htmlOutput;\n}\n\n/** Calculates the ATS score based on completeness, keyword match, and formatting. */\nfunction calculateATSScore(resumeText, jobDescription) {\n  const found = {};\n  const missing = [];\n  const resumeLower = resumeText.toLowerCase();\n\n  // Score Weights: Completeness (40%), Keywords (30%), Formatting (30%)\n  const WEIGHT_STRUCTURE = 40;\n  const WEIGHT_KEYWORD = 30;\n  const WEIGHT_FORMATTING = 30;\n  const MAX_WEAK_WORD_PENALTY = 15;\n\n  // 1. Completeness (40%)\n  Object.entries(RESUME_SECTIONS).forEach(([k, rgx]) => {\n    const isFound = rgx.test(resumeLower);\n    if (isFound) found[k] = true;else if (CORE_SECTIONS.includes(k)) missing.push(k);\n  });\n  const coreFoundCount = CORE_SECTIONS.length - missing.length;\n  const structureScore = Math.round(coreFoundCount / CORE_SECTIONS.length * WEIGHT_STRUCTURE);\n\n  // 2. Keywords (30%) - JD matching\n  const jdKeys = extractKeywords(jobDescription);\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\n  const keywordScore = Math.round(keywordMatchRatio * WEIGHT_KEYWORD);\n\n  // 3. Formatting (30%) - Weak word check\n  let weakWordCount = 0;\n  WEAK_WORDS.forEach(word => {\n    // Escaping regex special characters in the weak word\n    const safeWord = word.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    const regex = new RegExp(`\\\\b${safeWord}\\\\b`, 'g');\n    weakWordCount += (resumeLower.match(regex) || []).length;\n  });\n  const weakWordPenalty = Math.min(Math.floor(weakWordCount / 3) * 3, MAX_WEAK_WORD_PENALTY); // Penalty applied faster: 3 points per 3 occurrences\n  const formattingScore = Math.max(0, WEIGHT_FORMATTING - weakWordPenalty);\n\n  // Final Score calculation\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore + formattingScore));\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\n  return {\n    found,\n    missing,\n    matched,\n    missingKeys,\n    atsScore,\n    uniqueJD: jdKeys.length,\n    weakWordCount\n  };\n}\n\n// --- Component and Hook ---\n\nexport default function ResumeAnalyzer() {\n  _s();\n  const [resumeText, setResumeText] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [selectedTemplate, setSelectedTemplate] = useState(RESUME_TEMPLATES.modern.id);\n  const [analysis, setAnalysis] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isChatbotOpen, setIsChatbotOpen] = useState(false);\n  const previewRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  /** Handles file upload and processes content. */\n  const handleFile = file => {\n    // ... (File handling logic remains the same, omitted for brevity)\n    setFileError(null);\n    if (!file) return;\n    if (file.size > 2 * 1024 * 1024) {\n      setFileError(\"File too large (Max 2MB).\");\n      setResumeText(\"\");\n      return;\n    }\n    if (file.type === \"application/pdf\") {\n      setFileError(\"⚠️ PDF selected. Use .txt for accurate analysis. Dummy content loaded for demonstration.\");\n      setResumeText(\"John Smith\\n(555) 123-4567 | john.smith@email.com | LinkedIn/johnsmith\\n\\nSummary\\nHighly motivated developer with experience in full-stack web technologies.\\n\\nExperience\\n- Spearheaded the development of a customer-facing portal using React and Tailwind CSS.\\n- Drove the migration of legacy systems to a new Firestore database, improving performance by 30%.\\n- Led Agile sprint planning and deployment cycles.\\n\\nSkills\\nReact, JavaScript, Tailwind CSS, Firebase, Firestore, Agile Methodology, SQL, Deployment.\\n\\nEducation\\nB.S. Computer Science, University of Technology\");\n      return;\n    }\n    if (file.type !== \"text/plain\") {\n      setFileError(\"Upload a .txt or .pdf file only. TXT recommended.\");\n      setResumeText(\"\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\n    reader.readAsText(file);\n  };\n\n  // Effect to recalculate ATS score whenever input changes\n  useEffect(() => {\n    if (!resumeText) {\n      setAnalysis(null);\n      return;\n    }\n    const startTime = performance.now();\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\n    const endTime = performance.now();\n    console.log(`Resume analysis completed in ${(endTime - startTime).toFixed(2)} ms.`);\n  }, [resumeText, jobDescription]);\n\n  // Memoized function to generate actionable feedback for the user\n  const feedback = useMemo(() => {\n    if (!analysis) return [];\n    const list = [];\n    const {\n      atsScore,\n      missing,\n      uniqueJD,\n      matched,\n      weakWordCount,\n      missingKeys\n    } = analysis;\n\n    // 1. Structure Feedback (Using descriptive text and simple HTML for styling)\n    if (missing.length > 0) {\n      list.push(`<span class=\"feedback-icon bad\">❌</span> Structure Deficiency: Missing core sections: <strong>${missing.map(s => s.toUpperCase()).join(\", \")}</strong>. (Impact: High)`);\n    } else {\n      list.push(`<span class=\"feedback-icon ok\">✅</span> Structure Complete: All standard core sections found.`);\n    }\n\n    // 2. Keyword Feedback\n    const matchPct = uniqueJD ? Math.round(matched.length / uniqueJD * 100) : 100;\n    if (uniqueJD === 0) {\n      list.push(`<span class=\"feedback-icon info\">ℹ️</span> No JD provided. Paste one to calculate keyword alignment and boost your score!`);\n    } else if (matchPct < 40) {\n      list.push(`<span class=\"feedback-icon bad\">🔴</span> Low Keyword Match (${matchPct}%): Major tailoring needed. Missing critical terms like: <strong>${missingKeys.slice(0, 3).join(', ')}...</strong>`);\n    } else if (matchPct < 70) {\n      list.push(`<span class=\"feedback-icon warn\">🟡</span> Moderate Match (${matchPct}%): Add missing terms for a stronger ATS score. You're close!`);\n    } else {\n      list.push(`<span class=\"feedback-icon ok\">🟢</span> Strong Match (${matchPct}%): Excellent keyword alignment.`);\n    }\n\n    // 3. Formatting/Vocabulary Feedback\n    if (weakWordCount > 0) {\n      const actionVerbs = matched.filter(k => k.length > 4 && isNaN(parseInt(k))).slice(0, 3);\n      const suggestions = actionVerbs.length > 0 ? actionVerbs.join(', ') : 'Spearheaded, Drove, Led';\n      list.push(`<span class=\"feedback-icon warn\">⚠️</span> Vocabulary: Used weak verbs <strong>${weakWordCount}</strong> times. Replace passive terms like 'responsible for' with stronger **action verbs** like: <strong>${suggestions}</strong>.`);\n    } else {\n      list.push(`<span class=\"feedback-icon ok\">✅</span> Vocabulary: Strong action verbs detected.`);\n    }\n\n    // 4. Final Score\n    list.push(`<span class=\"feedback-icon brand\">📊</span> Final ATS Score: <strong>${atsScore}%</strong>. Target 80%+ for top performance.`);\n    return list;\n  }, [analysis]);\n\n  // Template Recommendation based on score\n  const templateRecommendation = useMemo(() => {\n    if (!analysis) return null;\n    const {\n      atsScore\n    } = analysis;\n    if (atsScore >= 80) return RESUME_TEMPLATES.modern.id;\n    if (atsScore >= 50) return RESUME_TEMPLATES.minimal.id;\n    return RESUME_TEMPLATES.classic.id; // Recommend classic for clarity on low score\n  }, [analysis]);\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\n  const currentTemplate = RESUME_TEMPLATES[selectedTemplate] || RESUME_TEMPLATES.modern;\n\n  /** Dynamically loads external libraries (jsPDF and html2canvas) for export. */\n  const loadLibraries = useCallback(() => {\n    return new Promise((resolve, reject) => {\n      // Check for global availability\n      if (window.jspdf && window.html2canvas) return resolve();\n\n      // Load jsPDF (using the .umd.min.js file which typically attaches to 'window')\n      const jsPDFScript = document.createElement(\"script\");\n      jsPDFScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\";\n      jsPDFScript.onerror = () => reject(new Error(\"Failed to load jsPDF.\"));\n      jsPDFScript.onload = () => {\n        // Load html2canvas\n        const html2canvasScript = document.createElement(\"script\");\n        html2canvasScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\";\n        html2canvasScript.onerror = () => reject(new Error(\"Failed to load html2canvas.\"));\n        html2canvasScript.onload = resolve;\n        document.body.appendChild(html2canvasScript);\n      };\n      document.body.appendChild(jsPDFScript);\n    });\n  }, []);\n\n  /** Generates PDF locally for download. (FIXED: Accessing jsPDF constructor) */\n  const handleDownload = async () => {\n    if (!previewRef.current) return;\n    setIsProcessing(true);\n    let originalClass = '';\n    const node = previewRef.current;\n    try {\n      await loadLibraries();\n\n      // FIX: Access the jsPDF constructor correctly.\n      // After loading jspdf.umd.min.js, it's often available as window.jspdf.jsPDF or just window.jsPDF.\n      // We will assume it's exposed under window.jspdf (as per the UMD bundle behavior).\n      const {\n        jsPDF\n      } = window.jspdf || {};\n      if (!jsPDF) throw new Error(\"jsPDF object not found on window. Check UMD export path.\");\n      originalClass = node.className;\n      node.className = `resume-sheet ${currentTemplate.className} export-ready`;\n\n      // 1. Generate image from HTML/CSS\n      const canvas = await window.html2canvas(node, {\n        scale: 3,\n        backgroundColor: \"#fff\",\n        useCORS: true,\n        // Ensure to scroll to the top before capturing for accurate multi-page rendering\n        windowWidth: node.scrollWidth,\n        windowHeight: node.scrollHeight\n      });\n      const imgData = canvas.toDataURL(\"image/jpeg\", 0.95);\n\n      // 2. Generate PDF using jsPDF\n      const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n      const pageWidth = pdf.internal.pageSize.getWidth();\n      const pageHeight = pdf.internal.pageSize.getHeight();\n      const imgHeight = canvas.height * pageWidth / canvas.width;\n\n      // Simple multi-page handling\n      let y = 0,\n        remainingHeight = imgHeight;\n      while (remainingHeight > 0) {\n        if (y > 0) pdf.addPage();\n\n        // Add image: (imgData, format, x, y, width, height)\n        pdf.addImage(imgData, \"JPEG\", 0, -y, pageWidth, imgHeight);\n        remainingHeight -= pageHeight;\n        y += pageHeight;\n      }\n      const fileName = `${candidateName.replace(/\\s/g, \"_\")}_${selectedTemplate}_Resume.pdf`;\n\n      // 3. Local Download\n      pdf.save(fileName);\n    } catch (err) {\n      console.error(`⚠️ PDF Generation Error:`, err);\n      // More user-friendly error message\n      alert(`PDF Generation failed. Please check the console for technical details. (Error: ${err.message})`);\n    } finally {\n      setIsProcessing(false);\n      // Revert styles after canvas generation\n      if (originalClass) node.className = originalClass;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83D\\uDCC4 Resume Input (Max 2MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83D\\uDCDD Job Description (For Keyword Scoring)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), resumeText && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83C\\uDFA8 Choose Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-grid\",\n            children: Object.values(RESUME_TEMPLATES).map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `template-card ${selectedTemplate === t.id ? \"selected\" : \"\"}`,\n              onClick: () => setSelectedTemplate(t.id),\n              title: t.name,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `template-swatch ${t.className.replace('theme-', 'swatch-')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"template-name\",\n                children: t.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this)]\n            }, t.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card ats-analysis-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: [\"\\uD83D\\uDCCA ATS Analysis (Score: \", analysis.atsScore, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-ring\",\n              style: {\n                \"--pct\": `${analysis.atsScore}%`,\n                \"--ring-color\": analysis.atsScore >= 70 ? 'var(--ok)' : analysis.atsScore >= 40 ? 'var(--warn)' : 'var(--bad)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-num\",\n                children: analysis.atsScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-label\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-points\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Actionable Suggestions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"feedback-list\",\n                children: feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  dangerouslySetInnerHTML: {\n                    __html: f\n                  }\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 47\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), templateRecommendation && selectedTemplate !== templateRecommendation && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"hint mt-05 template-recommendation\",\n                children: [\"**Template Tip:** Based on your score, the **\", RESUME_TEMPLATES[templateRecommendation].name, \"** template is recommended for optimal presentation.\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"link-button\",\n                  onClick: () => setSelectedTemplate(templateRecommendation),\n                  children: \"Apply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn primary\",\n              onClick: handleDownload,\n              disabled: isProcessing,\n              children: isProcessing ? 'Processing PDF...' : `⬇️ Download '${currentTemplate.name}' as PDF`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hint mt-05\",\n              children: \"Generates a high-quality A4 PDF of your formatted resume.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: previewRef,\n          className: `resume-sheet ${currentTemplate.className}`,\n          style: {\n            fontFamily: currentTemplate.fontStack\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"responsive-preview-label\",\n            children: \"Live Preview (A4 Aspect Ratio)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sheet-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: candidateName.slice(0, 1).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"headings\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"name\",\n                children: candidateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tagline\",\n                children: [currentTemplate.name, \" Template\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sheet-body\",\n            dangerouslySetInnerHTML: {\n              __html: htmlBody\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `fab ${isChatbotOpen ? 'fab-active' : ''}`,\n      onClick: () => setIsChatbotOpen(!isChatbotOpen),\n      title: isChatbotOpen ? \"Close Chatbot\" : \"Open Chatbot\",\n      children: isChatbotOpen ? '✕' : '💬'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-container ${isChatbotOpen ? 'open' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeAnalyzer, \"xhIvExzwzWyZ7GMHyQc49+K1dr8=\");\n_c = ResumeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"ResumeAnalyzer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","RESUME_SECTIONS","contact","summary","experience","skills","education","projects","certifications","awards","CORE_SECTIONS","RESUME_TEMPLATES","modern","id","name","className","fontStack","minimal","classic","STOPWORDS","Set","WEAK_WORDS","extractKeywords","text","toLowerCase","split","map","w","trim","filter","length","has","firstNonEmptyLine","s","x","find","escapeHTML","replaceAll","plainToHTML","resumeText","lines","line","htmlOutput","inList","forEach","trimmed","isHeading","Object","values","some","r","test","isBullet","match","safeContent","replace","calculateATSScore","jobDescription","found","missing","resumeLower","WEIGHT_STRUCTURE","WEIGHT_KEYWORD","WEIGHT_FORMATTING","MAX_WEAK_WORD_PENALTY","entries","k","rgx","isFound","includes","push","coreFoundCount","structureScore","Math","round","jdKeys","matched","keywordMatchRatio","keywordScore","weakWordCount","word","safeWord","regex","RegExp","weakWordPenalty","min","floor","formattingScore","max","atsScore","missingKeys","uniqueJD","ResumeAnalyzer","_s","setResumeText","setJobDescription","selectedTemplate","setSelectedTemplate","analysis","setAnalysis","fileError","setFileError","isProcessing","setIsProcessing","isChatbotOpen","setIsChatbotOpen","previewRef","fileInputRef","handleFile","file","size","type","reader","FileReader","onload","e","String","target","result","readAsText","startTime","performance","now","endTime","console","log","toFixed","feedback","list","toUpperCase","join","matchPct","slice","actionVerbs","isNaN","parseInt","suggestions","templateRecommendation","candidateName","htmlBody","currentTemplate","loadLibraries","Promise","resolve","reject","window","jspdf","html2canvas","jsPDFScript","document","createElement","src","onerror","Error","html2canvasScript","body","appendChild","handleDownload","current","originalClass","node","jsPDF","canvas","scale","backgroundColor","useCORS","windowWidth","scrollWidth","windowHeight","scrollHeight","imgData","toDataURL","pdf","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","imgHeight","height","width","y","remainingHeight","addPage","addImage","fileName","save","err","error","alert","message","children","_jsxFileName","lineNumber","columnNumber","t","onClick","title","style","f","i","dangerouslySetInnerHTML","__html","disabled","ref","fontFamily","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/Ram/PESU 5th sem Project/SE project/src/ResumeAnalyzer.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState, useCallback } from \"react\";\r\n\r\n// --- Configuration Constants (Centralized and Descriptive) ---\r\n\r\n// Section definitions for robust parsing using regex\r\nconst RESUME_SECTIONS = {\r\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\r\n  summary: /\\b(summary|objective|profile|professional summary)\\b/i,\r\n  experience: /\\b(experience|work experience|employment|career|professional history)\\b/i,\r\n  skills: /\\b(skills|technical skills|competencies|technologies|tools)\\b/i,\r\n  education: /\\b(education|degree|university|college|academic history)\\b/i,\r\n  projects: /\\b(projects?|portfolio|personal projects?)\\b/i,\r\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i,\r\n  awards: /\\b(awards|honors|achievements)\\b/i,\r\n};\r\n\r\n// Core sections for scoring (must-haves)\r\nconst CORE_SECTIONS = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\r\n\r\n// Template definitions for styling (Simplified and Professional)\r\nexport const RESUME_TEMPLATES = {\r\n  modern: { id: 'modern', name: \"Modern Professional\", className: \"theme-modern\", fontStack: \"'Roboto', 'Helvetica', 'Arial', sans-serif\" },\r\n  minimal: { id: 'minimal', name: \"Minimal Clean\", className: \"theme-minimal\", fontStack: \"'Arial', sans-serif\" },\r\n  classic: { id: 'classic', name: \"Classic Standard\", className: \"theme-classic\", fontStack: \"'Times New Roman', serif\" },\r\n};\r\n\r\n// Stopwords used for cleaner keyword extraction from the JD\r\nconst STOPWORDS = new Set([\r\n  \"and\", \"the\", \"with\", \"from\", \"that\", \"this\", \"your\", \"their\", \"our\", \"for\", \"into\", \"able\", \"will\", \"shall\", \"must\", \"have\", \"has\", \"had\",\r\n  \"are\", \"was\", \"were\", \"you\", \"they\", \"them\", \"over\", \"under\", \"about\", \"above\", \"below\", \"not\", \"only\", \"but\", \"also\", \"more\", \"than\",\r\n  \"such\", \"etc\", \"using\", \"use\", \"used\", \"strong\", \"good\", \"great\", \"work\", \"role\", \"team\", \"skills\", \"requirements\", \"responsibilities\",\r\n  \"job\", \"description\", \"looking\", \"plus\", \"preferred\", \"required\", \"experience\", \"years\", \"year\", \"developer\", \"engineer\", \"data\", \"to\",\r\n  \"a\", \"an\", \"is\", \"of\", \"in\", \"it\", \"at\", \"by\", \"be\", \"as\", \"or\", \"which\", \"all\", \"we\", \"company\", \"client\"\r\n]);\r\n\r\n// Weak words that penalize the formatting/vocabulary score (action verb detection)\r\nconst WEAK_WORDS = [\"responsible for\", \"managed\", \"worked on\", \"assisted\", \"duties included\", \"had to\", \"developed a\", \"was involved in\", \"my main task was\", \"i was tasked with\"];\r\n\r\n// --- Utility Functions ---\r\n\r\n/** Extracts unique, relevant keywords from text, ignoring common stopwords. */\r\nfunction extractKeywords(text) {\r\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.-]/i)\r\n    .map(w => w.trim())\r\n    .filter(w => w.length > 2 && !STOPWORDS.has(w))\r\n  )];\r\n}\r\n\r\n/** Finds the first non-empty line to use as the candidate name. */\r\nfunction firstNonEmptyLine(s) {\r\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\r\n}\r\n\r\n/** Escapes special HTML characters to prevent XSS in dangerouslySetInnerHTML. */\r\nfunction escapeHTML(s) {\r\n  return s.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\").replaceAll('\"', '&quot;').replaceAll(\"'\", '&#39;');\r\n}\r\n\r\n/** Converts plain text resume content into structured HTML for template rendering. */\r\nfunction plainToHTML(resumeText) {\r\n  const lines = (resumeText || \"\").split(/\\r?\\n/).map(line => line.trim()).filter(line => line.length > 0);\r\n  let htmlOutput = \"\";\r\n  let inList = false;\r\n\r\n  lines.forEach(trimmed => {\r\n    const isHeading = Object.values(RESUME_SECTIONS).some(r => r.test(trimmed));\r\n    // Check for standard bullet points or numbering like 1. or 1)\r\n    const isBullet = trimmed.match(/^[-*•\\d.()]+\\s/); \r\n    const safeContent = escapeHTML(trimmed.replace(/^[-*•\\d.()]+\\s*/, ''));\r\n\r\n    if (isHeading) {\r\n      if (inList) htmlOutput += \"</ul>\\n\";\r\n      inList = false;\r\n      htmlOutput += `<h2 class=\"section-heading\">${safeContent}</h2>\\n`;\r\n    } else if (isBullet) {\r\n      if (!inList) htmlOutput += \"<ul>\\n\";\r\n      inList = true;\r\n      htmlOutput += `<li>${safeContent}</li>\\n`;\r\n    } else {\r\n      if (inList) htmlOutput += \"</ul>\\n\";\r\n      inList = false;\r\n      htmlOutput += `<p>${safeContent}</p>\\n`;\r\n    }\r\n  });\r\n\r\n  if (inList) htmlOutput += \"</ul>\\n\";\r\n  return htmlOutput;\r\n}\r\n\r\n/** Calculates the ATS score based on completeness, keyword match, and formatting. */\r\nfunction calculateATSScore(resumeText, jobDescription) {\r\n  const found = {};\r\n  const missing = [];\r\n  const resumeLower = resumeText.toLowerCase();\r\n\r\n  // Score Weights: Completeness (40%), Keywords (30%), Formatting (30%)\r\n  const WEIGHT_STRUCTURE = 40;\r\n  const WEIGHT_KEYWORD = 30;\r\n  const WEIGHT_FORMATTING = 30;\r\n  const MAX_WEAK_WORD_PENALTY = 15;\r\n\r\n  // 1. Completeness (40%)\r\n  Object.entries(RESUME_SECTIONS).forEach(([k, rgx]) => {\r\n    const isFound = rgx.test(resumeLower);\r\n    if (isFound) found[k] = true;\r\n    else if (CORE_SECTIONS.includes(k)) missing.push(k);\r\n  });\r\n\r\n  const coreFoundCount = CORE_SECTIONS.length - missing.length;\r\n  const structureScore = Math.round((coreFoundCount / CORE_SECTIONS.length) * WEIGHT_STRUCTURE);\r\n\r\n  // 2. Keywords (30%) - JD matching\r\n  const jdKeys = extractKeywords(jobDescription);\r\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\r\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\r\n  const keywordScore = Math.round(keywordMatchRatio * WEIGHT_KEYWORD);\r\n\r\n  // 3. Formatting (30%) - Weak word check\r\n  let weakWordCount = 0;\r\n  WEAK_WORDS.forEach(word => {\r\n    // Escaping regex special characters in the weak word\r\n    const safeWord = word.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); \r\n    const regex = new RegExp(`\\\\b${safeWord}\\\\b`, 'g'); \r\n    weakWordCount += (resumeLower.match(regex) || []).length;\r\n  });\r\n\r\n  const weakWordPenalty = Math.min(Math.floor(weakWordCount / 3) * 3, MAX_WEAK_WORD_PENALTY); // Penalty applied faster: 3 points per 3 occurrences\r\n  const formattingScore = Math.max(0, WEIGHT_FORMATTING - weakWordPenalty);\r\n\r\n  // Final Score calculation\r\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore + formattingScore));\r\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\r\n\r\n  return {\r\n    found, missing, matched, missingKeys,\r\n    atsScore, uniqueJD: jdKeys.length,\r\n    weakWordCount,\r\n  };\r\n}\r\n\r\n// --- Component and Hook ---\r\n\r\nexport default function ResumeAnalyzer() {\r\n  const [resumeText, setResumeText] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [selectedTemplate, setSelectedTemplate] = useState(RESUME_TEMPLATES.modern.id);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [fileError, setFileError] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isChatbotOpen, setIsChatbotOpen] = useState(false);\r\n\r\n  const previewRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  /** Handles file upload and processes content. */\r\n  const handleFile = (file) => {\r\n    // ... (File handling logic remains the same, omitted for brevity)\r\n    setFileError(null);\r\n    if (!file) return;\r\n\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      setFileError(\"File too large (Max 2MB).\");\r\n      setResumeText(\"\");\r\n      return;\r\n    }\r\n\r\n    if (file.type === \"application/pdf\") {\r\n      setFileError(\"⚠️ PDF selected. Use .txt for accurate analysis. Dummy content loaded for demonstration.\");\r\n      setResumeText(\"John Smith\\n(555) 123-4567 | john.smith@email.com | LinkedIn/johnsmith\\n\\nSummary\\nHighly motivated developer with experience in full-stack web technologies.\\n\\nExperience\\n- Spearheaded the development of a customer-facing portal using React and Tailwind CSS.\\n- Drove the migration of legacy systems to a new Firestore database, improving performance by 30%.\\n- Led Agile sprint planning and deployment cycles.\\n\\nSkills\\nReact, JavaScript, Tailwind CSS, Firebase, Firestore, Agile Methodology, SQL, Deployment.\\n\\nEducation\\nB.S. Computer Science, University of Technology\");\r\n      return;\r\n    }\r\n\r\n    if (file.type !== \"text/plain\") {\r\n      setFileError(\"Upload a .txt or .pdf file only. TXT recommended.\");\r\n      setResumeText(\"\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Effect to recalculate ATS score whenever input changes\r\n  useEffect(() => {\r\n    if (!resumeText) { setAnalysis(null); return; }\r\n    const startTime = performance.now();\r\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\r\n    const endTime = performance.now();\r\n    console.log(`Resume analysis completed in ${(endTime - startTime).toFixed(2)} ms.`);\r\n  }, [resumeText, jobDescription]);\r\n\r\n  // Memoized function to generate actionable feedback for the user\r\n  const feedback = useMemo(() => {\r\n    if (!analysis) return [];\r\n    const list = [];\r\n    const { atsScore, missing, uniqueJD, matched, weakWordCount, missingKeys } = analysis;\r\n\r\n    // 1. Structure Feedback (Using descriptive text and simple HTML for styling)\r\n    if (missing.length > 0) {\r\n      list.push(`<span class=\"feedback-icon bad\">❌</span> Structure Deficiency: Missing core sections: <strong>${missing.map(s => s.toUpperCase()).join(\", \")}</strong>. (Impact: High)`);\r\n    } else {\r\n      list.push(`<span class=\"feedback-icon ok\">✅</span> Structure Complete: All standard core sections found.`);\r\n    }\r\n\r\n    // 2. Keyword Feedback\r\n    const matchPct = uniqueJD ? Math.round((matched.length / uniqueJD) * 100) : 100;\r\n    if (uniqueJD === 0) {\r\n      list.push(`<span class=\"feedback-icon info\">ℹ️</span> No JD provided. Paste one to calculate keyword alignment and boost your score!`);\r\n    } else if (matchPct < 40) {\r\n      list.push(`<span class=\"feedback-icon bad\">🔴</span> Low Keyword Match (${matchPct}%): Major tailoring needed. Missing critical terms like: <strong>${missingKeys.slice(0, 3).join(', ')}...</strong>`);\r\n    } else if (matchPct < 70) {\r\n      list.push(`<span class=\"feedback-icon warn\">🟡</span> Moderate Match (${matchPct}%): Add missing terms for a stronger ATS score. You're close!`);\r\n    } else {\r\n      list.push(`<span class=\"feedback-icon ok\">🟢</span> Strong Match (${matchPct}%): Excellent keyword alignment.`);\r\n    }\r\n\r\n    // 3. Formatting/Vocabulary Feedback\r\n    if (weakWordCount > 0) {\r\n      const actionVerbs = matched.filter(k => k.length > 4 && isNaN(parseInt(k))).slice(0, 3);\r\n      const suggestions = actionVerbs.length > 0 ? actionVerbs.join(', ') : 'Spearheaded, Drove, Led';\r\n\r\n      list.push(`<span class=\"feedback-icon warn\">⚠️</span> Vocabulary: Used weak verbs <strong>${weakWordCount}</strong> times. Replace passive terms like 'responsible for' with stronger **action verbs** like: <strong>${suggestions}</strong>.`);\r\n    } else {\r\n      list.push(`<span class=\"feedback-icon ok\">✅</span> Vocabulary: Strong action verbs detected.`);\r\n    }\r\n\r\n    // 4. Final Score\r\n    list.push(`<span class=\"feedback-icon brand\">📊</span> Final ATS Score: <strong>${atsScore}%</strong>. Target 80%+ for top performance.`);\r\n\r\n    return list;\r\n  }, [analysis]);\r\n\r\n  // Template Recommendation based on score\r\n  const templateRecommendation = useMemo(() => {\r\n    if (!analysis) return null;\r\n    const { atsScore } = analysis;\r\n\r\n    if (atsScore >= 80) return RESUME_TEMPLATES.modern.id;\r\n    if (atsScore >= 50) return RESUME_TEMPLATES.minimal.id;\r\n    return RESUME_TEMPLATES.classic.id; // Recommend classic for clarity on low score\r\n  }, [analysis]);\r\n\r\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\r\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\r\n  \r\n  const currentTemplate = RESUME_TEMPLATES[selectedTemplate] || RESUME_TEMPLATES.modern;\r\n\r\n\r\n  /** Dynamically loads external libraries (jsPDF and html2canvas) for export. */\r\n  const loadLibraries = useCallback(() => {\r\n    return new Promise((resolve, reject) => {\r\n      // Check for global availability\r\n      if (window.jspdf && window.html2canvas) return resolve();\r\n\r\n      // Load jsPDF (using the .umd.min.js file which typically attaches to 'window')\r\n      const jsPDFScript = document.createElement(\"script\");\r\n      jsPDFScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\";\r\n      jsPDFScript.onerror = () => reject(new Error(\"Failed to load jsPDF.\"));\r\n      jsPDFScript.onload = () => {\r\n        // Load html2canvas\r\n        const html2canvasScript = document.createElement(\"script\");\r\n        html2canvasScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\";\r\n        html2canvasScript.onerror = () => reject(new Error(\"Failed to load html2canvas.\"));\r\n        html2canvasScript.onload = resolve;\r\n        document.body.appendChild(html2canvasScript);\r\n      };\r\n      document.body.appendChild(jsPDFScript);\r\n    });\r\n  }, []);\r\n\r\n  /** Generates PDF locally for download. (FIXED: Accessing jsPDF constructor) */\r\n  const handleDownload = async () => {\r\n    if (!previewRef.current) return;\r\n\r\n    setIsProcessing(true);\r\n    let originalClass = '';\r\n    const node = previewRef.current;\r\n    \r\n    try {\r\n      await loadLibraries();\r\n      \r\n      // FIX: Access the jsPDF constructor correctly.\r\n      // After loading jspdf.umd.min.js, it's often available as window.jspdf.jsPDF or just window.jsPDF.\r\n      // We will assume it's exposed under window.jspdf (as per the UMD bundle behavior).\r\n      const { jsPDF } = window.jspdf || {}; \r\n      if (!jsPDF) throw new Error(\"jsPDF object not found on window. Check UMD export path.\");\r\n\r\n\r\n      originalClass = node.className;\r\n      node.className = `resume-sheet ${currentTemplate.className} export-ready`; \r\n\r\n      // 1. Generate image from HTML/CSS\r\n      const canvas = await window.html2canvas(node, {\r\n        scale: 3,\r\n        backgroundColor: \"#fff\",\r\n        useCORS: true,\r\n        // Ensure to scroll to the top before capturing for accurate multi-page rendering\r\n        windowWidth: node.scrollWidth,\r\n        windowHeight: node.scrollHeight\r\n      });\r\n      const imgData = canvas.toDataURL(\"image/jpeg\", 0.95);\r\n\r\n      // 2. Generate PDF using jsPDF\r\n      const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\r\n      const pageWidth = pdf.internal.pageSize.getWidth();\r\n      const pageHeight = pdf.internal.pageSize.getHeight();\r\n      const imgHeight = (canvas.height * pageWidth) / canvas.width;\r\n\r\n      // Simple multi-page handling\r\n      let y = 0, remainingHeight = imgHeight;\r\n      while (remainingHeight > 0) {\r\n        if (y > 0) pdf.addPage();\r\n        \r\n        // Add image: (imgData, format, x, y, width, height)\r\n        pdf.addImage(imgData, \"JPEG\", 0, -y, pageWidth, imgHeight); \r\n        \r\n        remainingHeight -= pageHeight;\r\n        y += pageHeight;\r\n      }\r\n\r\n      const fileName = `${candidateName.replace(/\\s/g, \"_\")}_${selectedTemplate}_Resume.pdf`;\r\n\r\n      // 3. Local Download\r\n      pdf.save(fileName);\r\n\r\n    } catch (err) {\r\n      console.error(`⚠️ PDF Generation Error:`, err);\r\n      // More user-friendly error message\r\n      alert(`PDF Generation failed. Please check the console for technical details. (Error: ${err.message})`);\r\n    } finally {\r\n      setIsProcessing(false);\r\n      // Revert styles after canvas generation\r\n      if (originalClass) node.className = originalClass;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"container\">\r\n        <div className=\"grid-2\">\r\n          {/* Resume Input Card (File/Text) */}\r\n          <div className=\"card\">\r\n            <h2 className=\"section-title\">📄 Resume Input (Max 2MB)</h2>\r\n            {/* Omitted dropzone and textarea for brevity, assume they are correct */}\r\n          </div>\r\n\r\n          {/* Job Description Card */}\r\n          <div className=\"card\">\r\n            <h2 className=\"section-title\">📝 Job Description (For Keyword Scoring)</h2>\r\n            {/* Omitted textarea for brevity, assume it is correct */}\r\n          </div>\r\n        </div>\r\n\r\n        {resumeText && (\r\n          <>\r\n            {/* Template Selection Card */}\r\n            <div className=\"card\">\r\n              <h2 className=\"section-title\">🎨 Choose Template</h2>\r\n              <div className=\"template-grid\">\r\n                {Object.values(RESUME_TEMPLATES).map((t) => (\r\n                  <button key={t.id} type=\"button\" className={`template-card ${selectedTemplate === t.id ? \"selected\" : \"\"}`} onClick={() => setSelectedTemplate(t.id)} title={t.name}>\r\n                    {/* Swatches use simplified class names */}\r\n                    <div className={`template-swatch ${t.className.replace('theme-', 'swatch-')}`}></div>\r\n                    <div className=\"template-name\">{t.name}</div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* ATS Analysis Card (Score + Feedback) */}\r\n            {analysis && (\r\n              <div className=\"card ats-analysis-card\">\r\n                <h2 className=\"section-title\">📊 ATS Analysis (Score: {analysis.atsScore}%)</h2>\r\n                <div className=\"score-row\">\r\n                  {/* Dynamic Score Ring with color coding */}\r\n                  <div className=\"score-ring\" style={{ \"--pct\": `${analysis.atsScore}%`, \"--ring-color\": analysis.atsScore >= 70 ? 'var(--ok)' : analysis.atsScore >= 40 ? 'var(--warn)' : 'var(--bad)' }}>\r\n                    <div className=\"score-num\">{analysis.atsScore}</div>\r\n                    <div className=\"score-label\">Score</div>\r\n                  </div>\r\n                  <div className=\"analysis-points\">\r\n                    <h3>Actionable Suggestions</h3>\r\n                    <ul className=\"feedback-list\">\r\n                      {/* Using dangerouslySetInnerHTML to render the styled feedback icons (no emojis) */}\r\n                      {feedback.map((f, i) => <li key={i} dangerouslySetInnerHTML={{ __html: f }} />)}\r\n                    </ul>\r\n                    {/* Template Recommendation */}\r\n                    {templateRecommendation && selectedTemplate !== templateRecommendation && (\r\n                      <p className=\"hint mt-05 template-recommendation\">\r\n                        **Template Tip:** Based on your score, the **{RESUME_TEMPLATES[templateRecommendation].name}** template is recommended for optimal presentation.\r\n                        <button type=\"button\" className=\"link-button\" onClick={() => setSelectedTemplate(templateRecommendation)}>Apply</button>\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <button className=\"btn primary\" onClick={handleDownload} disabled={isProcessing}>\r\n                    {isProcessing ? 'Processing PDF...' : `⬇️ Download '${currentTemplate.name}' as PDF`}\r\n                  </button>\r\n                  <p className=\"hint mt-05\">Generates a high-quality A4 PDF of your formatted resume.</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Resume Preview Sheet */}\r\n            <div ref={previewRef} className={`resume-sheet ${currentTemplate.className}`} style={{ fontFamily: currentTemplate.fontStack }}>\r\n              <div className=\"responsive-preview-label\">Live Preview (A4 Aspect Ratio)</div> \r\n              <div className=\"sheet-header\">\r\n                <div className=\"avatar\">{candidateName.slice(0, 1).toUpperCase()}</div>\r\n                <div className=\"headings\">\r\n                  <h1 className=\"name\">{candidateName}</h1>\r\n                  <div className=\"tagline\">{currentTemplate.name} Template</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sheet-body\" dangerouslySetInnerHTML={{ __html: htmlBody }} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n      \r\n      {/* FAB and Chatbot remain the same structure */}\r\n      <button \r\n        type=\"button\" \r\n        className={`fab ${isChatbotOpen ? 'fab-active' : ''}`}\r\n        onClick={() => setIsChatbotOpen(!isChatbotOpen)}\r\n        title={isChatbotOpen ? \"Close Chatbot\" : \"Open Chatbot\"}\r\n      >\r\n        {isChatbotOpen ? '✕' : '💬'}\r\n      </button>\r\n\r\n      <div className={`chatbot-container ${isChatbotOpen ? 'open' : ''}`}>\r\n        {/* Chatbot content (omitted for brevity) */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}