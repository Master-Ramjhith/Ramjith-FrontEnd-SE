{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\Ram\\\\PESU 5th sem Project\\\\SE project\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RESPONSES = {\n  greeting: \"Hello! Iâ€™m your Resume Assistant ðŸ‘‹ How can I help you improve your ATS score?\",\n  ats: \"ATS scans for keywords, clean structure, and standard headings. Tailor your resume to the JD to beat it.\",\n  keywords: \"Pick high-signal JD terms, use action verbs, and quantify results (%, $, time).\",\n  format: \"Keep it simple: standard fonts, headings, bullets, consistent dates, no tables/graphics.\",\n  sections: \"Must-have sections for high ATS: Contact, Summary, Experience, Skills, Education. Add Projects/Certs if relevant.\",\n  default: \"I can help with general advice on ATS, keywords, formatting, or required sections.\"\n};\nexport default function Chatbot({\n  onClose\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: RESPONSES.greeting\n  }]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const replyFor = useCallback(text => {\n    const t = text.toLowerCase();\n    // Simulate context-aware response for score/suggestions (US-013) - Currently static.\n    if (t.includes(\"score\") || t.includes(\"suggestions\")) return \"To get a *detailed* breakdown and context-aware suggestions, you need to first upload your resume and run the analysis on the main page. I can then pull that data!\";\n    if (t.includes(\"ats\")) return RESPONSES.ats;\n    if (t.includes(\"keyword\")) return RESPONSES.keywords;\n    if (t.includes(\"format\")) return RESPONSES.format;\n    if (t.includes(\"section\")) return RESPONSES.sections;\n    if (t.includes(\"hello\") || t.includes(\"hi\")) return RESPONSES.greeting;\n    return RESPONSES.default;\n  }, []);\n  const send = () => {\n    const text = input.trim();\n    if (!text) return;\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      text\n    }]);\n    setInput(\"\");\n\n    // Simulate AI response delay (US-014 - Performance)\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: replyFor(text)\n      }]);\n    }, 500); // 0.5s is faster than the required < 3s\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDD16 Resume Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x\",\n          onClick: onClose,\n          \"aria-label\": \"Close\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${m.type}`,\n          dangerouslySetInnerHTML: {\n            __html: m.text.replace(/\\*(.*?)\\*/g, '<strong>$1</strong>')\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && send(),\n          placeholder: \"Ask about ATS, keywords, format\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: send,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"N+iOGL4+YVezmRoB2DFNuns6ThE=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","RESPONSES","greeting","ats","keywords","format","sections","default","Chatbot","onClose","_s","messages","setMessages","type","text","input","setInput","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","replyFor","t","toLowerCase","includes","send","trim","prev","setTimeout","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","map","m","i","dangerouslySetInnerHTML","__html","replace","ref","autoFocus","value","onChange","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/Ram/PESU 5th sem Project/SE project/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nconst RESPONSES = {\r\n  greeting: \"Hello! Iâ€™m your Resume Assistant ðŸ‘‹ How can I help you improve your ATS score?\",\r\n  ats: \"ATS scans for keywords, clean structure, and standard headings. Tailor your resume to the JD to beat it.\",\r\n  keywords: \"Pick high-signal JD terms, use action verbs, and quantify results (%, $, time).\",\r\n  format: \"Keep it simple: standard fonts, headings, bullets, consistent dates, no tables/graphics.\",\r\n  sections: \"Must-have sections for high ATS: Contact, Summary, Experience, Skills, Education. Add Projects/Certs if relevant.\",\r\n  default: \"I can help with general advice on ATS, keywords, formatting, or required sections.\",\r\n};\r\n\r\nexport default function Chatbot({ onClose }) {\r\n  const [messages, setMessages] = useState([{ type: \"bot\", text: RESPONSES.greeting }]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll to bottom when messages update\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const replyFor = useCallback((text) => {\r\n    const t = text.toLowerCase();\r\n    // Simulate context-aware response for score/suggestions (US-013) - Currently static.\r\n    if (t.includes(\"score\") || t.includes(\"suggestions\")) return \"To get a *detailed* breakdown and context-aware suggestions, you need to first upload your resume and run the analysis on the main page. I can then pull that data!\";\r\n    \r\n    if (t.includes(\"ats\")) return RESPONSES.ats;\r\n    if (t.includes(\"keyword\")) return RESPONSES.keywords;\r\n    if (t.includes(\"format\")) return RESPONSES.format;\r\n    if (t.includes(\"section\")) return RESPONSES.sections;\r\n    if (t.includes(\"hello\") || t.includes(\"hi\")) return RESPONSES.greeting;\r\n    return RESPONSES.default;\r\n  }, []);\r\n\r\n  const send = () => {\r\n    const text = input.trim();\r\n    if (!text) return;\r\n    setMessages(prev => [...prev, { type: \"user\", text }]);\r\n    setInput(\"\");\r\n    \r\n    // Simulate AI response delay (US-014 - Performance)\r\n    setTimeout(() => {\r\n      setMessages(prev => [...prev, { type: \"bot\", text: replyFor(text) }]);\r\n    }, 500); // 0.5s is faster than the required < 3s\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-overlay\" onClick={onClose}>\r\n      <div className=\"chatbot\" onClick={(e) => e.stopPropagation()}>\r\n        {/* Header */}\r\n        <div className=\"chat-header\">\r\n          <h3>ðŸ¤– Resume Assistant</h3>\r\n          <button className=\"x\" onClick={onClose} aria-label=\"Close\">âœ•</button>\r\n        </div>\r\n\r\n        {/* Messages */}\r\n        <div className=\"chat-messages\">\r\n          {messages.map((m, i) => (\r\n            <div key={i} className={`chat-message ${m.type}`} dangerouslySetInnerHTML={{ __html: m.text.replace(/\\*(.*?)\\*/g, '<strong>$1</strong>') }} />\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Input */}\r\n        <div className=\"chat-input-row\">\r\n          <input\r\n            autoFocus\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && send()}\r\n            placeholder=\"Ask about ATS, keywords, formatâ€¦\"\r\n          />\r\n          <button onClick={send}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}