{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\SE-project\\\\src\\\\ResumeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECTIONS = {\n  education: /\\b(education|qualifications|degree|university|college)\\b/i,\n  skills: /\\b(skills|technical skills|key skills|competencies)\\b/i,\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\n  projects: /\\b(projects?|portfolio)\\b/i,\n  certifications: /\\b(certifications?|certificates?|licensed?)\\b/i,\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i\n};\nconst RESUME_TEMPLATES = {\n  modern: {\n    name: \"Modern Professional\",\n    font: \"Georgia, serif\",\n    headerBg: \"#2563eb\",\n    textColor: \"#1f2937\",\n    accent: \"#3b82f6\"\n  },\n  minimal: {\n    name: \"Minimal Clean\",\n    font: \"Arial, sans-serif\",\n    headerBg: \"#374151\",\n    textColor: \"#111827\",\n    accent: \"#6b7280\"\n  },\n  corporate: {\n    name: \"Corporate Elite\",\n    font: \"Times New Roman, serif\",\n    headerBg: \"#1f2937\",\n    textColor: \"#111827\",\n    accent: \"#4b5563\"\n  },\n  creative: {\n    name: \"Creative Bold\",\n    font: \"Helvetica, sans-serif\",\n    headerBg: \"#7c3aed\",\n    textColor: \"#1f2937\",\n    accent: \"#8b5cf6\"\n  }\n};\nexport default function ResumeAnalyzer() {\n  _s();\n  const [resumeText, setResumeText] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [analysis, setAnalysis] = useState(null);\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\n  const [showPreview, setShowPreview] = useState(false);\n  useEffect(() => {\n    if (!resumeText.trim() && !jobDescription.trim()) return;\n    const found = {};\n    const missing = [];\n    for (const [key, regex] of Object.entries(SECTIONS)) {\n      if (regex.test(resumeText)) found[key] = true;else missing.push(key);\n    }\n\n    // Keyword matching from Job Description\n    const jdWords = jobDescription.toLowerCase().split(/\\W+/).filter(w => w.length > 3);\n    const resumeWords = resumeText.toLowerCase();\n    let matchedKeywords = jdWords.filter(word => resumeWords.includes(word));\n    const atsScore = Math.max(0, 100 - missing.length * 15) + Math.min(20, matchedKeywords.length * 2);\n    setAnalysis({\n      found,\n      missing,\n      atsScore,\n      matchedKeywords\n    });\n  }, [resumeText, jobDescription]);\n  const feedback = useMemo(() => {\n    if (!analysis) return [];\n    const fb = [];\n    if (analysis.missing.length) fb.push(`Missing sections: ${analysis.missing.join(\", \")}`);\n    if (analysis.atsScore < 50) fb.push(\"❌ Low ATS score. Add missing sections immediately.\");else if (analysis.atsScore < 80) fb.push(\"⚠️ Good foundation, but can improve.\");else fb.push(\"✅ Excellent resume structure! ATS-friendly.\");\n    if (analysis.matchedKeywords.length) fb.push(`Matched job description keywords: ${analysis.matchedKeywords.join(\", \")}`);\n    return fb;\n  }, [analysis]);\n  const handleFile = file => {\n    if (!file) return;\n    if (file.type === \"text/plain\") {\n      const reader = new FileReader();\n      reader.onload = e => setResumeText(e.target.result);\n      reader.readAsText(file);\n    } else {\n      alert(\"Please upload a .txt file only\");\n    }\n  };\n  const downloadPDF = () => {\n    if (!resumeText.trim()) return;\n    setShowPreview(true);\n    setTimeout(() => {\n      window.print();\n    }, 300);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCC4 Upload Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        onChange: e => handleFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCDD Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        value: jobDescription,\n        onChange: e => setJobDescription(e.target.value),\n        placeholder: \"Paste job description here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), resumeText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83C\\uDFA8 Choose Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-grid\",\n        children: Object.entries(RESUME_TEMPLATES).map(([key, t]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `template-card ${selectedTemplate === key ? \"selected\" : \"\"}`,\n          onClick: () => setSelectedTemplate(key),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-preview\",\n            style: {\n              background: t.headerBg\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCCA Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ats-score\",\n        children: [\"ATS Score: \", analysis.atsScore, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: f\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-btn\",\n        onClick: downloadPDF,\n        children: \"\\uD83D\\uDCC4 Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), showPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-overlay\",\n      onClick: () => setShowPreview(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"resume-preview\",\n        className: \"preview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: `\n              @media print {\n                body * { visibility: hidden; }\n                #resume-preview, #resume-preview * { visibility: visible; }\n                #resume-preview { position: absolute; left: 0; top: 0; width: 100%; }\n              }\n            `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontFamily: RESUME_TEMPLATES[selectedTemplate].font,\n            color: RESUME_TEMPLATES[selectedTemplate].textColor\n          },\n          dangerouslySetInnerHTML: {\n            __html: resumeText.replace(/\\n/g, \"<br/>\")\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeAnalyzer, \"REwBMiBIl9VoqQTnok7vulGD2zo=\");\n_c = ResumeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"ResumeAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","SECTIONS","education","skills","experience","projects","certifications","contact","RESUME_TEMPLATES","modern","name","font","headerBg","textColor","accent","minimal","corporate","creative","ResumeAnalyzer","_s","resumeText","setResumeText","jobDescription","setJobDescription","analysis","setAnalysis","selectedTemplate","setSelectedTemplate","showPreview","setShowPreview","trim","found","missing","key","regex","Object","entries","test","push","jdWords","toLowerCase","split","filter","w","length","resumeWords","matchedKeywords","word","includes","atsScore","Math","max","min","feedback","fb","join","handleFile","file","type","reader","FileReader","onload","e","target","result","readAsText","alert","downloadPDF","setTimeout","window","print","children","className","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","files","rows","value","placeholder","map","t","onClick","style","background","f","i","id","fontFamily","color","dangerouslySetInnerHTML","__html","replace","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/SE-project/src/ResumeAnalyzer.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nconst SECTIONS = {\r\n  education: /\\b(education|qualifications|degree|university|college)\\b/i,\r\n  skills: /\\b(skills|technical skills|key skills|competencies)\\b/i,\r\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\r\n  projects: /\\b(projects?|portfolio)\\b/i,\r\n  certifications: /\\b(certifications?|certificates?|licensed?)\\b/i,\r\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\r\n};\r\n\r\nconst RESUME_TEMPLATES = {\r\n  modern: {\r\n    name: \"Modern Professional\",\r\n    font: \"Georgia, serif\",\r\n    headerBg: \"#2563eb\",\r\n    textColor: \"#1f2937\",\r\n    accent: \"#3b82f6\",\r\n  },\r\n  minimal: {\r\n    name: \"Minimal Clean\",\r\n    font: \"Arial, sans-serif\",\r\n    headerBg: \"#374151\",\r\n    textColor: \"#111827\",\r\n    accent: \"#6b7280\",\r\n  },\r\n  corporate: {\r\n    name: \"Corporate Elite\",\r\n    font: \"Times New Roman, serif\",\r\n    headerBg: \"#1f2937\",\r\n    textColor: \"#111827\",\r\n    accent: \"#4b5563\",\r\n  },\r\n  creative: {\r\n    name: \"Creative Bold\",\r\n    font: \"Helvetica, sans-serif\",\r\n    headerBg: \"#7c3aed\",\r\n    textColor: \"#1f2937\",\r\n    accent: \"#8b5cf6\",\r\n  },\r\n};\r\n\r\nexport default function ResumeAnalyzer() {\r\n  const [resumeText, setResumeText] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\r\n  const [showPreview, setShowPreview] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!resumeText.trim() && !jobDescription.trim()) return;\r\n\r\n    const found = {};\r\n    const missing = [];\r\n    for (const [key, regex] of Object.entries(SECTIONS)) {\r\n      if (regex.test(resumeText)) found[key] = true;\r\n      else missing.push(key);\r\n    }\r\n\r\n    // Keyword matching from Job Description\r\n    const jdWords = jobDescription\r\n      .toLowerCase()\r\n      .split(/\\W+/)\r\n      .filter((w) => w.length > 3);\r\n    const resumeWords = resumeText.toLowerCase();\r\n    let matchedKeywords = jdWords.filter((word) =>\r\n      resumeWords.includes(word)\r\n    );\r\n\r\n    const atsScore =\r\n      Math.max(0, 100 - missing.length * 15) +\r\n      Math.min(20, matchedKeywords.length * 2);\r\n\r\n    setAnalysis({ found, missing, atsScore, matchedKeywords });\r\n  }, [resumeText, jobDescription]);\r\n\r\n  const feedback = useMemo(() => {\r\n    if (!analysis) return [];\r\n    const fb = [];\r\n    if (analysis.missing.length)\r\n      fb.push(`Missing sections: ${analysis.missing.join(\", \")}`);\r\n    if (analysis.atsScore < 50)\r\n      fb.push(\"❌ Low ATS score. Add missing sections immediately.\");\r\n    else if (analysis.atsScore < 80)\r\n      fb.push(\"⚠️ Good foundation, but can improve.\");\r\n    else fb.push(\"✅ Excellent resume structure! ATS-friendly.\");\r\n    if (analysis.matchedKeywords.length)\r\n      fb.push(\r\n        `Matched job description keywords: ${analysis.matchedKeywords.join(\r\n          \", \"\r\n        )}`\r\n      );\r\n    return fb;\r\n  }, [analysis]);\r\n\r\n  const handleFile = (file) => {\r\n    if (!file) return;\r\n    if (file.type === \"text/plain\") {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => setResumeText(e.target.result);\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert(\"Please upload a .txt file only\");\r\n    }\r\n  };\r\n\r\n  const downloadPDF = () => {\r\n    if (!resumeText.trim()) return;\r\n    setShowPreview(true);\r\n    setTimeout(() => {\r\n      window.print();\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {/* Upload */}\r\n      <div className=\"card\">\r\n        <h2 className=\"section-title\">📄 Upload Resume</h2>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".txt\"\r\n          onChange={(e) => handleFile(e.target.files[0])}\r\n        />\r\n      </div>\r\n\r\n      {/* Job Description */}\r\n      <div className=\"card\">\r\n        <h2 className=\"section-title\">📝 Job Description</h2>\r\n        <textarea\r\n          rows=\"5\"\r\n          value={jobDescription}\r\n          onChange={(e) => setJobDescription(e.target.value)}\r\n          placeholder=\"Paste job description here...\"\r\n        />\r\n      </div>\r\n\r\n      {/* Templates */}\r\n      {resumeText && (\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">🎨 Choose Template</h2>\r\n          <div className=\"template-grid\">\r\n            {Object.entries(RESUME_TEMPLATES).map(([key, t]) => (\r\n              <div\r\n                key={key}\r\n                className={`template-card ${\r\n                  selectedTemplate === key ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => setSelectedTemplate(key)}\r\n              >\r\n                <div\r\n                  className=\"template-preview\"\r\n                  style={{ background: t.headerBg }}\r\n                />\r\n                <h3>{t.name}</h3>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Results */}\r\n      {analysis && (\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">📊 Analysis</h2>\r\n          <p className=\"ats-score\">ATS Score: {analysis.atsScore}%</p>\r\n          <ul>\r\n            {feedback.map((f, i) => (\r\n              <li key={i}>{f}</li>\r\n            ))}\r\n          </ul>\r\n          <button className=\"primary-btn\" onClick={downloadPDF}>\r\n            📄 Download PDF\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Preview */}\r\n      {showPreview && (\r\n        <div className=\"preview-overlay\" onClick={() => setShowPreview(false)}>\r\n          <div id=\"resume-preview\" className=\"preview-card\">\r\n            <style>{`\r\n              @media print {\r\n                body * { visibility: hidden; }\r\n                #resume-preview, #resume-preview * { visibility: visible; }\r\n                #resume-preview { position: absolute; left: 0; top: 0; width: 100%; }\r\n              }\r\n            `}</style>\r\n            <div\r\n              style={{\r\n                fontFamily: RESUME_TEMPLATES[selectedTemplate].font,\r\n                color: RESUME_TEMPLATES[selectedTemplate].textColor,\r\n              }}\r\n              dangerouslySetInnerHTML={{\r\n                __html: resumeText.replace(/\\n/g, \"<br/>\"),\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}