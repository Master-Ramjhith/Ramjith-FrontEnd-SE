{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\PESU 5th sem Project\\\\SE project\\\\src\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n/**\r\n * Dummy Authentication Component for Login/Register.\r\n * @param {object} props - Component props.\r\n * @param {function} props.onLogin - Callback function to execute upon successful dummy login.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth({\n  onLogin\n}) {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Toggle between Login and Register views\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Dummy authentication logic: simply checks if fields are non-empty.\n    // In a real application, this would involve API calls.\n    if (email.trim() && password.trim()) {\n      alert(isLogin ? \"Dummy Login Successful!\" : \"Dummy Registration Successful!\");\n      // Simulate successful authentication and call the onLogin handler.\n      onLogin(email);\n    } else {\n      alert(\"Please enter both email and password.\");\n    }\n  };\n  const formTitle = isLogin ? \"Login\" : \"Register\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title center\",\n        children: [formTitle, \" to use Resume Analyzer\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          type: \"password\",\n          placeholder: \"Password (DRA-SR-003: Strong required)\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn primary full-width\",\n          children: formTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switch-auth center\",\n        children: [isLogin ? \"Need an account?\" : \"Already have an account?\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"link-button\",\n          onClick: () => setIsLogin(!isLogin),\n          type: \"button\",\n          children: isLogin ? \"Register\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint center mt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Authentication required for data security (DRA-SR-003). All data is dummy/local for this frontend demo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n// Add necessary CSS for Auth.js to App.css (see section 4)\n_s(Auth, \"Ib64JThCBLKtLidZcqHq5aW9r6s=\");\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Auth","onLogin","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","trim","alert","formTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/PESU 5th sem Project/SE project/src/Auth.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n/**\r\n * Dummy Authentication Component for Login/Register.\r\n * @param {object} props - Component props.\r\n * @param {function} props.onLogin - Callback function to execute upon successful dummy login.\r\n */\r\nexport default function Auth({ onLogin }) {\r\n  const [isLogin, setIsLogin] = useState(true); // Toggle between Login and Register views\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Dummy authentication logic: simply checks if fields are non-empty.\r\n    // In a real application, this would involve API calls.\r\n    if (email.trim() && password.trim()) {\r\n      alert(isLogin ? \"Dummy Login Successful!\" : \"Dummy Registration Successful!\");\r\n      // Simulate successful authentication and call the onLogin handler.\r\n      onLogin(email); \r\n    } else {\r\n      alert(\"Please enter both email and password.\");\r\n    }\r\n  };\r\n\r\n  const formTitle = isLogin ? \"Login\" : \"Register\";\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"card auth-card\">\r\n        <h2 className=\"section-title center\">{formTitle} to use Resume Analyzer</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"text-input\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"text-input\"\r\n            type=\"password\"\r\n            placeholder=\"Password (DRA-SR-003: Strong required)\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"btn primary full-width\">\r\n            {formTitle}\r\n          </button>\r\n        </form>\r\n        <div className=\"switch-auth center\">\r\n          {isLogin ? \"Need an account?\" : \"Already have an account?\"}\r\n          <button className=\"link-button\" onClick={() => setIsLogin(!isLogin)} type=\"button\">\r\n            {isLogin ? \"Register\" : \"Login\"}\r\n          </button>\r\n        </div>\r\n        <p className=\"hint center mt-1\">\r\n          <small>\r\n            Authentication required for data security (DRA-SR-003). All data is dummy/local for this frontend demo.\r\n          </small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Add necessary CSS for Auth.js to App.css (see section 4)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}