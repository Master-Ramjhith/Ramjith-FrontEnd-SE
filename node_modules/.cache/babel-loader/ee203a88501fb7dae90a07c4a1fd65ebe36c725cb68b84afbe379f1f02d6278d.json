{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\SE-project\\\\src\\\\ResumeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\n/* ---------- config ---------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECTIONS = {\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\n  summary: /\\b(summary|objective|profile)\\b/i,\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\n  skills: /\\b(skills|technical skills|competencies)\\b/i,\n  education: /\\b(education|degree|university|college)\\b/i,\n  projects: /\\b(projects?|portfolio)\\b/i,\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i\n};\nconst TEMPLATES = {\n  modern: {\n    name: \"Modern Professional\",\n    className: \"theme-modern\",\n    fontStack: \"ui-sans-serif, system-ui, -apple-system, Segoe UI, Arial\"\n  },\n  minimal: {\n    name: \"Minimal Clean\",\n    className: \"theme-minimal\",\n    fontStack: \"Arial, Helvetica, sans-serif\"\n  },\n  creative: {\n    name: \"Creative Bold\",\n    className: \"theme-creative\",\n    fontStack: \"Helvetica, Arial, sans-serif\"\n  }\n};\n\n/* ---------- helpers ---------- */\nconst STOPWORDS = new Set([\"and\", \"the\", \"with\", \"from\", \"that\", \"this\", \"your\", \"their\", \"our\", \"for\", \"into\", \"able\", \"will\", \"shall\", \"must\", \"have\", \"has\", \"had\", \"are\", \"was\", \"were\", \"you\", \"they\", \"them\", \"over\", \"under\", \"about\", \"above\", \"below\", \"not\", \"only\", \"but\", \"also\", \"more\", \"than\", \"such\", \"etc\", \"using\", \"use\", \"used\", \"strong\", \"good\", \"great\", \"work\", \"role\", \"team\", \"skills\", \"requirements\", \"responsibilities\", \"job\", \"description\", \"looking\", \"plus\", \"preferred\", \"required\", \"experience\", \"years\", \"year\", \"developer\", \"engineer\", \"data\"]);\nfunction extractKeywords(text) {\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.]/i).map(w => w.trim()).filter(w => w.length > 2 && !STOPWORDS.has(w)))];\n}\nfunction firstNonEmptyLine(s) {\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\n}\nfunction plainToHTML(resumeText) {\n  // Upgrade common section headings to <h2>, keep other lines as <p>\n  const lines = (resumeText || \"\").split(/\\r?\\n/);\n  const out = [];\n  for (let raw of lines) {\n    const line = raw.trim();\n    if (!line) continue;\n    const isHeading = Object.values(SECTIONS).some(r => r.test(line));\n    if (isHeading) out.push(`<h2>${escapeHTML(line)}</h2>`);else out.push(`<p>${escapeHTML(line)}</p>`);\n  }\n  return out.join(\"\\n\");\n}\nfunction escapeHTML(s) {\n  return s.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n}\n\n/* ---------- component ---------- */\nexport default function ResumeAnalyzer() {\n  _s();\n  var _analysis$matched, _analysis$missingKeys2;\n  const [resumeText, setResumeText] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\n  const [analysis, setAnalysis] = useState(null);\n  const previewRef = useRef(null); // on-screen preview + PDF source\n\n  // compute analysis\n  useEffect(() => {\n    if (!resumeText && !jobDescription) {\n      setAnalysis(null);\n      return;\n    }\n\n    // structure: found/missing sections\n    const found = {};\n    const missing = [];\n    for (const [k, rgx] of Object.entries(SECTIONS)) {\n      if (rgx.test(resumeText)) found[k] = true;else missing.push(k);\n    }\n\n    // JD keyword coverage\n    const jdKeys = extractKeywords(jobDescription);\n    const resumeLower = resumeText.toLowerCase();\n    const matched = jdKeys.filter(k => resumeLower.includes(k));\n    const missingKeys = jdKeys.filter(k => !resumeLower.includes(k)).slice(0, 20);\n\n    // ATS scoring: structure (0..60) + keyword coverage (0..40)\n    const structureScore = Math.max(0, 60 - missing.length * 10);\n    const keywordCoverage = jdKeys.length ? matched.length / jdKeys.length : 0;\n    const keywordScore = Math.round(40 * keywordCoverage);\n    const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore));\n    setAnalysis({\n      found,\n      missing,\n      matched,\n      missingKeys,\n      atsScore,\n      uniqueJD: jdKeys.length\n    });\n  }, [resumeText, jobDescription]);\n\n  // user feedback\n  const feedback = useMemo(() => {\n    var _analysis$missingKeys;\n    if (!analysis) return [];\n    const list = [];\n    if (analysis.missing.length) list.push(`Missing sections: ${analysis.missing.join(\", \")}`);\n    list.push(analysis.atsScore >= 80 ? \"✅ Strong ATS alignment.\" : analysis.atsScore >= 60 ? \"⚠️ Decent, add more JD keywords.\" : \"❌ Weak ATS alignment. Fill core sections and include relevant JD terms.\");\n    if ((_analysis$missingKeys = analysis.missingKeys) !== null && _analysis$missingKeys !== void 0 && _analysis$missingKeys.length) list.push(`Top missing JD keywords: ${analysis.missingKeys.slice(0, 10).join(\", \")}`);\n    return list;\n  }, [analysis]);\n\n  /* ------- handlers ------- */\n  const handleFile = file => {\n    if (!file) return;\n    if (file.type !== \"text/plain\") {\n      alert(\"Upload a .txt file only\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\n    reader.readAsText(file);\n  };\n  const downloadPDF = async () => {\n    // capture the single preview node; add a subtle shadow blocker to avoid double rendering\n    const node = previewRef.current;\n    if (!node) return;\n\n    // Scroll to top to avoid clipped capture on small screens\n    window.scrollTo({\n      top: 0,\n      behavior: \"instant\"\n    });\n    const canvas = await html2canvas(node, {\n      scale: 2,\n      backgroundColor: \"#ffffff\",\n      useCORS: true\n    });\n    const img = canvas.toDataURL(\"image/png\");\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n    const pageW = pdf.internal.pageSize.getWidth();\n    const pageH = pdf.internal.pageSize.getHeight();\n    const imgW = pageW; // full width\n    const imgH = canvas.height * imgW / canvas.width;\n\n    // If longer than one page, add pages cleanly (still one copy)\n    let y = 0;\n    let remaining = imgH;\n    while (remaining > 0) {\n      pdf.addImage(img, \"PNG\", 0, -y, imgW, imgH);\n      remaining -= pageH;\n      y += pageH;\n      if (remaining > 0) pdf.addPage();\n    }\n    pdf.save(\"resume.pdf\");\n  };\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\uD83D\\uDCC4 Resume (paste or upload)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row gap-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: e => {\n              var _e$target$files;\n              return handleFile((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input resume-input\",\n          rows: 14,\n          placeholder: \"Paste your resume text here...\",\n          value: resumeText,\n          onChange: e => setResumeText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title center\",\n          children: \"\\uD83D\\uDCDD Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input jd-input center-text\",\n          placeholder: \"Paste JD here\\u2026\",\n          value: jobDescription,\n          onChange: e => setJobDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hint center\",\n          children: \"Fixed size \\u2022 scrolls \\u2022 centered text (per your request)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), resumeText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83C\\uDFA8 Choose Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-grid\",\n        children: Object.entries(TEMPLATES).map(([key, t]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `template-card ${selectedTemplate === key ? \"selected\" : \"\"}`,\n          onClick: () => setSelectedTemplate(key),\n          title: t.name,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `template-swatch ${t.className}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-name\",\n            children: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCCA ATS Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-ring\",\n          style: {\n            \"--pct\": `${analysis.atsScore}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-num\",\n            children: [analysis.atsScore, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-label\",\n            children: \"ATS score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-points\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: f\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chips\",\n            children: [(_analysis$matched = analysis.matched) === null || _analysis$matched === void 0 ? void 0 : _analysis$matched.slice(0, 20).map(k => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chip ok\",\n              children: k\n            }, k, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)), (_analysis$missingKeys2 = analysis.missingKeys) === null || _analysis$missingKeys2 === void 0 ? void 0 : _analysis$missingKeys2.slice(0, 10).map(k => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chip warn\",\n              children: k\n            }, k, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: downloadPDF,\n          children: \"\\uD83D\\uDCC4 Download PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), resumeText && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: previewRef,\n      className: `resume-sheet ${TEMPLATES[selectedTemplate].className}`,\n      style: {\n        fontFamily: TEMPLATES[selectedTemplate].fontStack\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sheet-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: candidateName.slice(0, 1).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headings\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"name\",\n            children: candidateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tagline\",\n            children: \"Professional Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sheet-body\",\n        dangerouslySetInnerHTML: {\n          __html: htmlBody\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeAnalyzer, \"gikntwXJnkuR60jQpjcADKpCVuQ=\");\n_c = ResumeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"ResumeAnalyzer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsPDF","html2canvas","jsxDEV","_jsxDEV","SECTIONS","contact","summary","experience","skills","education","projects","certifications","TEMPLATES","modern","name","className","fontStack","minimal","creative","STOPWORDS","Set","extractKeywords","text","toLowerCase","split","map","w","trim","filter","length","has","firstNonEmptyLine","s","x","find","plainToHTML","resumeText","lines","out","raw","line","isHeading","Object","values","some","r","test","push","escapeHTML","join","replaceAll","ResumeAnalyzer","_s","_analysis$matched","_analysis$missingKeys2","setResumeText","jobDescription","setJobDescription","selectedTemplate","setSelectedTemplate","analysis","setAnalysis","previewRef","found","missing","k","rgx","entries","jdKeys","resumeLower","matched","includes","missingKeys","slice","structureScore","Math","max","keywordCoverage","keywordScore","round","atsScore","min","uniqueJD","feedback","_analysis$missingKeys","list","handleFile","file","type","alert","reader","FileReader","onload","e","String","target","result","readAsText","downloadPDF","node","current","window","scrollTo","top","behavior","canvas","scale","backgroundColor","useCORS","img","toDataURL","pdf","pageW","internal","pageSize","getWidth","pageH","getHeight","imgW","imgH","height","width","y","remaining","addImage","addPage","save","candidateName","htmlBody","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","_e$target$files","files","rows","placeholder","value","key","t","onClick","title","style","f","i","ref","fontFamily","toUpperCase","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/SE-project/src/ResumeAnalyzer.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\n/* ---------- config ---------- */\r\nconst SECTIONS = {\r\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\r\n  summary: /\\b(summary|objective|profile)\\b/i,\r\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\r\n  skills: /\\b(skills|technical skills|competencies)\\b/i,\r\n  education: /\\b(education|degree|university|college)\\b/i,\r\n  projects: /\\b(projects?|portfolio)\\b/i,\r\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i,\r\n};\r\n\r\nconst TEMPLATES = {\r\n  modern: {\r\n    name: \"Modern Professional\",\r\n    className: \"theme-modern\",\r\n    fontStack: \"ui-sans-serif, system-ui, -apple-system, Segoe UI, Arial\",\r\n  },\r\n  minimal: {\r\n    name: \"Minimal Clean\",\r\n    className: \"theme-minimal\",\r\n    fontStack: \"Arial, Helvetica, sans-serif\",\r\n  },\r\n  creative: {\r\n    name: \"Creative Bold\",\r\n    className: \"theme-creative\",\r\n    fontStack: \"Helvetica, Arial, sans-serif\",\r\n  },\r\n};\r\n\r\n/* ---------- helpers ---------- */\r\nconst STOPWORDS = new Set([\r\n  \"and\",\"the\",\"with\",\"from\",\"that\",\"this\",\"your\",\"their\",\"our\",\"for\",\"into\",\"able\",\r\n  \"will\",\"shall\",\"must\",\"have\",\"has\",\"had\",\"are\",\"was\",\"were\",\"you\",\"they\",\"them\",\r\n  \"over\",\"under\",\"about\",\"above\",\"below\",\"not\",\"only\",\"but\",\"also\",\"more\",\"than\",\r\n  \"such\",\"etc\",\"using\",\"use\",\"used\",\"strong\",\"good\",\"great\",\"work\",\"role\",\"team\",\r\n  \"skills\",\"requirements\",\"responsibilities\",\"job\",\"description\",\"looking\",\"plus\",\r\n  \"preferred\",\"required\",\"experience\",\"years\",\"year\",\"developer\",\"engineer\",\"data\"\r\n]);\r\n\r\nfunction extractKeywords(text) {\r\n  return [...new Set(\r\n    text\r\n      .toLowerCase()\r\n      .split(/[^a-z0-9+#.]/i)\r\n      .map(w => w.trim())\r\n      .filter(w => w.length > 2 && !STOPWORDS.has(w))\r\n  )];\r\n}\r\n\r\nfunction firstNonEmptyLine(s) {\r\n  return (s || \"\")\r\n    .split(/\\r?\\n/)\r\n    .map(x => x.trim())\r\n    .find(x => x.length > 0) || \"Candidate Name\";\r\n}\r\n\r\nfunction plainToHTML(resumeText) {\r\n  // Upgrade common section headings to <h2>, keep other lines as <p>\r\n  const lines = (resumeText || \"\").split(/\\r?\\n/);\r\n  const out = [];\r\n  for (let raw of lines) {\r\n    const line = raw.trim();\r\n    if (!line) continue;\r\n    const isHeading = Object.values(SECTIONS).some(r => r.test(line));\r\n    if (isHeading) out.push(`<h2>${escapeHTML(line)}</h2>`);\r\n    else out.push(`<p>${escapeHTML(line)}</p>`);\r\n  }\r\n  return out.join(\"\\n\");\r\n}\r\nfunction escapeHTML(s) {\r\n  return s\r\n    .replaceAll(\"&\",\"&amp;\")\r\n    .replaceAll(\"<\",\"&lt;\")\r\n    .replaceAll(\">\",\"&gt;\");\r\n}\r\n\r\n/* ---------- component ---------- */\r\nexport default function ResumeAnalyzer() {\r\n  const [resumeText, setResumeText] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\r\n  const [analysis, setAnalysis] = useState(null);\r\n\r\n  const previewRef = useRef(null);   // on-screen preview + PDF source\r\n\r\n  // compute analysis\r\n  useEffect(() => {\r\n    if (!resumeText && !jobDescription) { setAnalysis(null); return; }\r\n\r\n    // structure: found/missing sections\r\n    const found = {};\r\n    const missing = [];\r\n    for (const [k, rgx] of Object.entries(SECTIONS)) {\r\n      if (rgx.test(resumeText)) found[k] = true;\r\n      else missing.push(k);\r\n    }\r\n\r\n    // JD keyword coverage\r\n    const jdKeys = extractKeywords(jobDescription);\r\n    const resumeLower = resumeText.toLowerCase();\r\n    const matched = jdKeys.filter(k => resumeLower.includes(k));\r\n    const missingKeys = jdKeys.filter(k => !resumeLower.includes(k)).slice(0, 20);\r\n\r\n    // ATS scoring: structure (0..60) + keyword coverage (0..40)\r\n    const structureScore = Math.max(0, 60 - missing.length * 10);\r\n    const keywordCoverage = jdKeys.length ? (matched.length / jdKeys.length) : 0;\r\n    const keywordScore = Math.round(40 * keywordCoverage);\r\n    const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore));\r\n\r\n    setAnalysis({\r\n      found, missing, matched, missingKeys, atsScore,\r\n      uniqueJD: jdKeys.length\r\n    });\r\n  }, [resumeText, jobDescription]);\r\n\r\n  // user feedback\r\n  const feedback = useMemo(() => {\r\n    if (!analysis) return [];\r\n    const list = [];\r\n    if (analysis.missing.length) list.push(`Missing sections: ${analysis.missing.join(\", \")}`);\r\n    list.push(\r\n      analysis.atsScore >= 80 ? \"✅ Strong ATS alignment.\"\r\n      : analysis.atsScore >= 60 ? \"⚠️ Decent, add more JD keywords.\"\r\n      : \"❌ Weak ATS alignment. Fill core sections and include relevant JD terms.\"\r\n    );\r\n    if (analysis.missingKeys?.length)\r\n      list.push(`Top missing JD keywords: ${analysis.missingKeys.slice(0,10).join(\", \")}`);\r\n    return list;\r\n  }, [analysis]);\r\n\r\n  /* ------- handlers ------- */\r\n  const handleFile = (file) => {\r\n    if (!file) return;\r\n    if (file.type !== \"text/plain\") { alert(\"Upload a .txt file only\"); return; }\r\n    const reader = new FileReader();\r\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const downloadPDF = async () => {\r\n    // capture the single preview node; add a subtle shadow blocker to avoid double rendering\r\n    const node = previewRef.current;\r\n    if (!node) return;\r\n\r\n    // Scroll to top to avoid clipped capture on small screens\r\n    window.scrollTo({ top: 0, behavior: \"instant\" });\r\n\r\n    const canvas = await html2canvas(node, {\r\n      scale: 2,\r\n      backgroundColor: \"#ffffff\",\r\n      useCORS: true\r\n    });\r\n\r\n    const img = canvas.toDataURL(\"image/png\");\r\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\r\n    const pageW = pdf.internal.pageSize.getWidth();\r\n    const pageH = pdf.internal.pageSize.getHeight();\r\n\r\n    const imgW = pageW; // full width\r\n    const imgH = (canvas.height * imgW) / canvas.width;\r\n\r\n    // If longer than one page, add pages cleanly (still one copy)\r\n    let y = 0;\r\n    let remaining = imgH;\r\n    while (remaining > 0) {\r\n      pdf.addImage(img, \"PNG\", 0, -y, imgW, imgH);\r\n      remaining -= pageH;\r\n      y += pageH;\r\n      if (remaining > 0) pdf.addPage();\r\n    }\r\n    pdf.save(\"resume.pdf\");\r\n  };\r\n\r\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\r\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\r\n\r\n  return (\r\n    <section>\r\n      {/* INPUTS */}\r\n      <div className=\"grid-2\">\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">📄 Resume (paste or upload)</h2>\r\n          <div className=\"row gap-sm\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".txt\"\r\n              onChange={(e) => handleFile(e.target.files?.[0])}\r\n            />\r\n          </div>\r\n          <textarea\r\n            className=\"text-input resume-input\"\r\n            rows={14}\r\n            placeholder=\"Paste your resume text here...\"\r\n            value={resumeText}\r\n            onChange={(e) => setResumeText(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title center\">📝 Job Description</h2>\r\n          <textarea\r\n            className=\"text-input jd-input center-text\"\r\n            placeholder=\"Paste JD here…\"\r\n            value={jobDescription}\r\n            onChange={(e) => setJobDescription(e.target.value)}\r\n          />\r\n          <p className=\"hint center\">Fixed size • scrolls • centered text (per your request)</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* TEMPLATES */}\r\n      {resumeText && (\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">🎨 Choose Template</h2>\r\n          <div className=\"template-grid\">\r\n            {Object.entries(TEMPLATES).map(([key, t]) => (\r\n              <button\r\n                key={key}\r\n                type=\"button\"\r\n                className={`template-card ${selectedTemplate === key ? \"selected\" : \"\"}`}\r\n                onClick={() => setSelectedTemplate(key)}\r\n                title={t.name}\r\n              >\r\n                <div className={`template-swatch ${t.className}`} />\r\n                <div className=\"template-name\">{t.name}</div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* ANALYSIS */}\r\n      {analysis && (\r\n        <div className=\"card\">\r\n          <h2 className=\"section-title\">📊 ATS Analysis</h2>\r\n\r\n          <div className=\"score-row\">\r\n            <div\r\n              className=\"score-ring\"\r\n              style={{ \"--pct\": `${analysis.atsScore}%` }}\r\n            >\r\n              <div className=\"score-num\">{analysis.atsScore}%</div>\r\n              <div className=\"score-label\">ATS score</div>\r\n            </div>\r\n\r\n            <div className=\"analysis-points\">\r\n              <ul>\r\n                {feedback.map((f, i) => <li key={i}>{f}</li>)}\r\n              </ul>\r\n              <div className=\"chips\">\r\n                {analysis.matched?.slice(0, 20).map((k) => (\r\n                  <span key={k} className=\"chip ok\">{k}</span>\r\n                ))}\r\n                {analysis.missingKeys?.slice(0, 10).map((k) => (\r\n                  <span key={k} className=\"chip warn\">{k}</span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"actions\">\r\n            <button className=\"btn primary\" onClick={downloadPDF}>📄 Download PDF</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* PREVIEW (this exact node is exported to PDF) */}\r\n      {resumeText && (\r\n        <div\r\n          ref={previewRef}\r\n          className={`resume-sheet ${TEMPLATES[selectedTemplate].className}`}\r\n          style={{ fontFamily: TEMPLATES[selectedTemplate].fontStack }}\r\n        >\r\n          <div className=\"sheet-header\">\r\n            <div className=\"avatar\">{candidateName.slice(0,1).toUpperCase()}</div>\r\n            <div className=\"headings\">\r\n              <h1 className=\"name\">{candidateName}</h1>\r\n              <div className=\"tagline\">Professional Resume</div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"sheet-body\"\r\n            dangerouslySetInnerHTML={{ __html: htmlBody }}\r\n          />\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,aAAa;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG;EACfC,OAAO,EAAE,oDAAoD;EAC7DC,OAAO,EAAE,kCAAkC;EAC3CC,UAAU,EAAE,qDAAqD;EACjEC,MAAM,EAAE,6CAA6C;EACrDC,SAAS,EAAE,4CAA4C;EACvDC,QAAQ,EAAE,4BAA4B;EACtCC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAE;IACNC,IAAI,EAAE,qBAAqB;IAC3BC,SAAS,EAAE,cAAc;IACzBC,SAAS,EAAE;EACb,CAAC;EACDC,OAAO,EAAE;IACPH,IAAI,EAAE,eAAe;IACrBC,SAAS,EAAE,eAAe;IAC1BC,SAAS,EAAE;EACb,CAAC;EACDE,QAAQ,EAAE;IACRJ,IAAI,EAAE,eAAe;IACrBC,SAAS,EAAE,gBAAgB;IAC3BC,SAAS,EAAE;EACb;AACF,CAAC;;AAED;AACA,MAAMG,SAAS,GAAG,IAAIC,GAAG,CAAC,CACxB,KAAK,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAChF,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAC/E,MAAM,EAAC,OAAO,EAAC,OAAO,EAAC,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAC9E,MAAM,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAC9E,QAAQ,EAAC,cAAc,EAAC,kBAAkB,EAAC,KAAK,EAAC,aAAa,EAAC,SAAS,EAAC,MAAM,EAC/E,WAAW,EAAC,UAAU,EAAC,YAAY,EAAC,OAAO,EAAC,MAAM,EAAC,WAAW,EAAC,UAAU,EAAC,MAAM,CACjF,CAAC;AAEF,SAASC,eAAeA,CAACC,IAAI,EAAE;EAC7B,OAAO,CAAC,GAAG,IAAIF,GAAG,CAChBE,IAAI,CACDC,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,eAAe,CAAC,CACtBC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAClBC,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACG,MAAM,GAAG,CAAC,IAAI,CAACV,SAAS,CAACW,GAAG,CAACJ,CAAC,CAAC,CAClD,CAAC,CAAC;AACJ;AAEA,SAASK,iBAAiBA,CAACC,CAAC,EAAE;EAC5B,OAAO,CAACA,CAAC,IAAI,EAAE,EACZR,KAAK,CAAC,OAAO,CAAC,CACdC,GAAG,CAACQ,CAAC,IAAIA,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC,CAClBO,IAAI,CAACD,CAAC,IAAIA,CAAC,CAACJ,MAAM,GAAG,CAAC,CAAC,IAAI,gBAAgB;AAChD;AAEA,SAASM,WAAWA,CAACC,UAAU,EAAE;EAC/B;EACA,MAAMC,KAAK,GAAG,CAACD,UAAU,IAAI,EAAE,EAAEZ,KAAK,CAAC,OAAO,CAAC;EAC/C,MAAMc,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,GAAG,IAAIF,KAAK,EAAE;IACrB,MAAMG,IAAI,GAAGD,GAAG,CAACZ,IAAI,CAAC,CAAC;IACvB,IAAI,CAACa,IAAI,EAAE;IACX,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACvC,QAAQ,CAAC,CAACwC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACN,IAAI,CAAC,CAAC;IACjE,IAAIC,SAAS,EAAEH,GAAG,CAACS,IAAI,CAAC,OAAOC,UAAU,CAACR,IAAI,CAAC,OAAO,CAAC,CAAC,KACnDF,GAAG,CAACS,IAAI,CAAC,MAAMC,UAAU,CAACR,IAAI,CAAC,MAAM,CAAC;EAC7C;EACA,OAAOF,GAAG,CAACW,IAAI,CAAC,IAAI,CAAC;AACvB;AACA,SAASD,UAAUA,CAAChB,CAAC,EAAE;EACrB,OAAOA,CAAC,CACLkB,UAAU,CAAC,GAAG,EAAC,OAAO,CAAC,CACvBA,UAAU,CAAC,GAAG,EAAC,MAAM,CAAC,CACtBA,UAAU,CAAC,GAAG,EAAC,MAAM,CAAC;AAC3B;;AAEA;AACA,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,sBAAA;EACvC,MAAM,CAAClB,UAAU,EAAEmB,aAAa,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyD,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5D,QAAQ,CAAC,QAAQ,CAAC;EAClE,MAAM,CAAC6D,QAAQ,EAAEC,WAAW,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM+D,UAAU,GAAGhE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAG;;EAEnC;EACAF,SAAS,CAAC,MAAM;IACd,IAAI,CAACwC,UAAU,IAAI,CAACoB,cAAc,EAAE;MAAEK,WAAW,CAAC,IAAI,CAAC;MAAE;IAAQ;;IAEjE;IACA,MAAME,KAAK,GAAG,CAAC,CAAC;IAChB,MAAMC,OAAO,GAAG,EAAE;IAClB,KAAK,MAAM,CAACC,CAAC,EAAEC,GAAG,CAAC,IAAIxB,MAAM,CAACyB,OAAO,CAAC/D,QAAQ,CAAC,EAAE;MAC/C,IAAI8D,GAAG,CAACpB,IAAI,CAACV,UAAU,CAAC,EAAE2B,KAAK,CAACE,CAAC,CAAC,GAAG,IAAI,CAAC,KACrCD,OAAO,CAACjB,IAAI,CAACkB,CAAC,CAAC;IACtB;;IAEA;IACA,MAAMG,MAAM,GAAG/C,eAAe,CAACmC,cAAc,CAAC;IAC9C,MAAMa,WAAW,GAAGjC,UAAU,CAACb,WAAW,CAAC,CAAC;IAC5C,MAAM+C,OAAO,GAAGF,MAAM,CAACxC,MAAM,CAACqC,CAAC,IAAII,WAAW,CAACE,QAAQ,CAACN,CAAC,CAAC,CAAC;IAC3D,MAAMO,WAAW,GAAGJ,MAAM,CAACxC,MAAM,CAACqC,CAAC,IAAI,CAACI,WAAW,CAACE,QAAQ,CAACN,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;IAE7E;IACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAGZ,OAAO,CAACnC,MAAM,GAAG,EAAE,CAAC;IAC5D,MAAMgD,eAAe,GAAGT,MAAM,CAACvC,MAAM,GAAIyC,OAAO,CAACzC,MAAM,GAAGuC,MAAM,CAACvC,MAAM,GAAI,CAAC;IAC5E,MAAMiD,YAAY,GAAGH,IAAI,CAACI,KAAK,CAAC,EAAE,GAAGF,eAAe,CAAC;IACrD,MAAMG,QAAQ,GAAGL,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACM,GAAG,CAAC,GAAG,EAAEP,cAAc,GAAGI,YAAY,CAAC,CAAC;IAE1EjB,WAAW,CAAC;MACVE,KAAK;MAAEC,OAAO;MAAEM,OAAO;MAAEE,WAAW;MAAEQ,QAAQ;MAC9CE,QAAQ,EAAEd,MAAM,CAACvC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACO,UAAU,EAAEoB,cAAc,CAAC,CAAC;;EAEhC;EACA,MAAM2B,QAAQ,GAAGtF,OAAO,CAAC,MAAM;IAAA,IAAAuF,qBAAA;IAC7B,IAAI,CAACxB,QAAQ,EAAE,OAAO,EAAE;IACxB,MAAMyB,IAAI,GAAG,EAAE;IACf,IAAIzB,QAAQ,CAACI,OAAO,CAACnC,MAAM,EAAEwD,IAAI,CAACtC,IAAI,CAAC,qBAAqBa,QAAQ,CAACI,OAAO,CAACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IAC1FoC,IAAI,CAACtC,IAAI,CACPa,QAAQ,CAACoB,QAAQ,IAAI,EAAE,GAAG,yBAAyB,GACjDpB,QAAQ,CAACoB,QAAQ,IAAI,EAAE,GAAG,kCAAkC,GAC5D,yEACJ,CAAC;IACD,KAAAI,qBAAA,GAAIxB,QAAQ,CAACY,WAAW,cAAAY,qBAAA,eAApBA,qBAAA,CAAsBvD,MAAM,EAC9BwD,IAAI,CAACtC,IAAI,CAAC,4BAA4Ba,QAAQ,CAACY,WAAW,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAACxB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACtF,OAAOoC,IAAI;EACb,CAAC,EAAE,CAACzB,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM0B,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAI,CAACA,IAAI,EAAE;IACX,IAAIA,IAAI,CAACC,IAAI,KAAK,YAAY,EAAE;MAAEC,KAAK,CAAC,yBAAyB,CAAC;MAAE;IAAQ;IAC5E,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAGC,CAAC,IAAItC,aAAa,CAACuC,MAAM,CAACD,CAAC,CAACE,MAAM,CAACC,MAAM,IAAI,EAAE,CAAC,CAAC;IACjEN,MAAM,CAACO,UAAU,CAACV,IAAI,CAAC;EACzB,CAAC;EAED,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMC,IAAI,GAAGrC,UAAU,CAACsC,OAAO;IAC/B,IAAI,CAACD,IAAI,EAAE;;IAEX;IACAE,MAAM,CAACC,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAU,CAAC,CAAC;IAEhD,MAAMC,MAAM,GAAG,MAAMxG,WAAW,CAACkG,IAAI,EAAE;MACrCO,KAAK,EAAE,CAAC;MACRC,eAAe,EAAE,SAAS;MAC1BC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,GAAG,GAAGJ,MAAM,CAACK,SAAS,CAAC,WAAW,CAAC;IACzC,MAAMC,GAAG,GAAG,IAAI/G,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IACtC,MAAMgH,KAAK,GAAGD,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;IAC9C,MAAMC,KAAK,GAAGL,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACG,SAAS,CAAC,CAAC;IAE/C,MAAMC,IAAI,GAAGN,KAAK,CAAC,CAAC;IACpB,MAAMO,IAAI,GAAId,MAAM,CAACe,MAAM,GAAGF,IAAI,GAAIb,MAAM,CAACgB,KAAK;;IAElD;IACA,IAAIC,CAAC,GAAG,CAAC;IACT,IAAIC,SAAS,GAAGJ,IAAI;IACpB,OAAOI,SAAS,GAAG,CAAC,EAAE;MACpBZ,GAAG,CAACa,QAAQ,CAACf,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAACa,CAAC,EAAEJ,IAAI,EAAEC,IAAI,CAAC;MAC3CI,SAAS,IAAIP,KAAK;MAClBM,CAAC,IAAIN,KAAK;MACV,IAAIO,SAAS,GAAG,CAAC,EAAEZ,GAAG,CAACc,OAAO,CAAC,CAAC;IAClC;IACAd,GAAG,CAACe,IAAI,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,MAAMC,aAAa,GAAGlI,OAAO,CAAC,MAAMkC,iBAAiB,CAACK,UAAU,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChF,MAAM4F,QAAQ,GAAGnI,OAAO,CAAC,MAAMsC,WAAW,CAACC,UAAU,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAErE,oBACEjC,OAAA;IAAA8H,QAAA,gBAEE9H,OAAA;MAAKY,SAAS,EAAC,QAAQ;MAAAkH,QAAA,gBACrB9H,OAAA;QAAKY,SAAS,EAAC,MAAM;QAAAkH,QAAA,gBACnB9H,OAAA;UAAIY,SAAS,EAAC,eAAe;UAAAkH,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9DlI,OAAA;UAAKY,SAAS,EAAC,YAAY;UAAAkH,QAAA,eACzB9H,OAAA;YACEqF,IAAI,EAAC,MAAM;YACX8C,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAG1C,CAAC;cAAA,IAAA2C,eAAA;cAAA,OAAKlD,UAAU,EAAAkD,eAAA,GAAC3C,CAAC,CAACE,MAAM,CAAC0C,KAAK,cAAAD,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,CAAC;YAAA;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNlI,OAAA;UACEY,SAAS,EAAC,yBAAyB;UACnC2H,IAAI,EAAE,EAAG;UACTC,WAAW,EAAC,gCAAgC;UAC5CC,KAAK,EAAExG,UAAW;UAClBmG,QAAQ,EAAG1C,CAAC,IAAKtC,aAAa,CAACsC,CAAC,CAACE,MAAM,CAAC6C,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENlI,OAAA;QAAKY,SAAS,EAAC,MAAM;QAAAkH,QAAA,gBACnB9H,OAAA;UAAIY,SAAS,EAAC,sBAAsB;UAAAkH,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5DlI,OAAA;UACEY,SAAS,EAAC,iCAAiC;UAC3C4H,WAAW,EAAC,qBAAgB;UAC5BC,KAAK,EAAEpF,cAAe;UACtB+E,QAAQ,EAAG1C,CAAC,IAAKpC,iBAAiB,CAACoC,CAAC,CAACE,MAAM,CAAC6C,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACFlI,OAAA;UAAGY,SAAS,EAAC,aAAa;UAAAkH,QAAA,EAAC;QAAuD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLjG,UAAU,iBACTjC,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAkH,QAAA,gBACnB9H,OAAA;QAAIY,SAAS,EAAC,eAAe;QAAAkH,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDlI,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAkH,QAAA,EAC3BvF,MAAM,CAACyB,OAAO,CAACvD,SAAS,CAAC,CAACa,GAAG,CAAC,CAAC,CAACoH,GAAG,EAAEC,CAAC,CAAC,kBACtC3I,OAAA;UAEEqF,IAAI,EAAC,QAAQ;UACbzE,SAAS,EAAE,iBAAiB2C,gBAAgB,KAAKmF,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;UACzEE,OAAO,EAAEA,CAAA,KAAMpF,mBAAmB,CAACkF,GAAG,CAAE;UACxCG,KAAK,EAAEF,CAAC,CAAChI,IAAK;UAAAmH,QAAA,gBAEd9H,OAAA;YAAKY,SAAS,EAAE,mBAAmB+H,CAAC,CAAC/H,SAAS;UAAG;YAAAmH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpDlI,OAAA;YAAKY,SAAS,EAAC,eAAe;YAAAkH,QAAA,EAAEa,CAAC,CAAChI;UAAI;YAAAoH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAPxCQ,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQF,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAzE,QAAQ,iBACPzD,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAkH,QAAA,gBACnB9H,OAAA;QAAIY,SAAS,EAAC,eAAe;QAAAkH,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElDlI,OAAA;QAAKY,SAAS,EAAC,WAAW;QAAAkH,QAAA,gBACxB9H,OAAA;UACEY,SAAS,EAAC,YAAY;UACtBkI,KAAK,EAAE;YAAE,OAAO,EAAE,GAAGrF,QAAQ,CAACoB,QAAQ;UAAI,CAAE;UAAAiD,QAAA,gBAE5C9H,OAAA;YAAKY,SAAS,EAAC,WAAW;YAAAkH,QAAA,GAAErE,QAAQ,CAACoB,QAAQ,EAAC,GAAC;UAAA;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrDlI,OAAA;YAAKY,SAAS,EAAC,aAAa;YAAAkH,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eAENlI,OAAA;UAAKY,SAAS,EAAC,iBAAiB;UAAAkH,QAAA,gBAC9B9H,OAAA;YAAA8H,QAAA,EACG9C,QAAQ,CAAC1D,GAAG,CAAC,CAACyH,CAAC,EAAEC,CAAC,kBAAKhJ,OAAA;cAAA8H,QAAA,EAAaiB;YAAC,GAALC,CAAC;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACLlI,OAAA;YAAKY,SAAS,EAAC,OAAO;YAAAkH,QAAA,IAAA5E,iBAAA,GACnBO,QAAQ,CAACU,OAAO,cAAAjB,iBAAA,uBAAhBA,iBAAA,CAAkBoB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAChD,GAAG,CAAEwC,CAAC,iBACpC9D,OAAA;cAAcY,SAAS,EAAC,SAAS;cAAAkH,QAAA,EAAEhE;YAAC,GAAzBA,CAAC;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+B,CAC5C,CAAC,GAAA/E,sBAAA,GACDM,QAAQ,CAACY,WAAW,cAAAlB,sBAAA,uBAApBA,sBAAA,CAAsBmB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAChD,GAAG,CAAEwC,CAAC,iBACxC9D,OAAA;cAAcY,SAAS,EAAC,WAAW;cAAAkH,QAAA,EAAEhE;YAAC,GAA3BA,CAAC;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENlI,OAAA;QAAKY,SAAS,EAAC,SAAS;QAAAkH,QAAA,eACtB9H,OAAA;UAAQY,SAAS,EAAC,aAAa;UAACgI,OAAO,EAAE7C,WAAY;UAAA+B,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAjG,UAAU,iBACTjC,OAAA;MACEiJ,GAAG,EAAEtF,UAAW;MAChB/C,SAAS,EAAE,gBAAgBH,SAAS,CAAC8C,gBAAgB,CAAC,CAAC3C,SAAS,EAAG;MACnEkI,KAAK,EAAE;QAAEI,UAAU,EAAEzI,SAAS,CAAC8C,gBAAgB,CAAC,CAAC1C;MAAU,CAAE;MAAAiH,QAAA,gBAE7D9H,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAkH,QAAA,gBAC3B9H,OAAA;UAAKY,SAAS,EAAC,QAAQ;UAAAkH,QAAA,EAAEF,aAAa,CAACtD,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC6E,WAAW,CAAC;QAAC;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtElI,OAAA;UAAKY,SAAS,EAAC,UAAU;UAAAkH,QAAA,gBACvB9H,OAAA;YAAIY,SAAS,EAAC,MAAM;YAAAkH,QAAA,EAAEF;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzClI,OAAA;YAAKY,SAAS,EAAC,SAAS;YAAAkH,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNlI,OAAA;QACEY,SAAS,EAAC,YAAY;QACtBwI,uBAAuB,EAAE;UAAEC,MAAM,EAAExB;QAAS;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAACjF,EAAA,CAnNuBD,cAAc;AAAAsG,EAAA,GAAdtG,cAAc;AAAA,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}