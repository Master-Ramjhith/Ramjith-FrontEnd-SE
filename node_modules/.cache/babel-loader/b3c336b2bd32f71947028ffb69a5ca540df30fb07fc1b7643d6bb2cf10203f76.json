{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smscp\\\\Desktop\\\\Ram\\\\PESU 5th sem Project\\\\SE project\\\\src\\\\ResumeAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState, useCallback } from \"react\";\n\n// Section definitions for robust parsing using regex\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SECTIONS = {\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\n  summary: /\\b(summary|objective|profile)\\b/i,\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\n  skills: /\\b(skills|technical skills|competencies|technologies)\\b/i,\n  education: /\\b(education|degree|university|college)\\b/i,\n  projects: /\\b(projects?|portfolio)\\b/i,\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i\n};\n\n// Template definitions for styling\nconst TEMPLATES = {\n  modern: {\n    name: \"Modern Professional\",\n    className: \"theme-modern\",\n    fontStack: \"ui-sans-serif, system-ui, Segoe UI, Arial\"\n  },\n  minimal: {\n    name: \"Minimal Clean\",\n    className: \"theme-minimal\",\n    fontStack: \"Arial, Helvetica, sans-serif\"\n  },\n  creative: {\n    name: \"Creative Bold\",\n    className: \"theme-creative\",\n    fontStack: \"Helvetica, Arial, sans-serif\"\n  }\n};\n\n// Stopwords used for cleaner keyword extraction from the JD\nconst STOPWORDS = new Set([\"and\", \"the\", \"with\", \"from\", \"that\", \"this\", \"your\", \"their\", \"our\", \"for\", \"into\", \"able\", \"will\", \"shall\", \"must\", \"have\", \"has\", \"had\", \"are\", \"was\", \"were\", \"you\", \"they\", \"them\", \"over\", \"under\", \"about\", \"above\", \"below\", \"not\", \"only\", \"but\", \"also\", \"more\", \"than\", \"such\", \"etc\", \"using\", \"use\", \"used\", \"strong\", \"good\", \"great\", \"work\", \"role\", \"team\", \"skills\", \"requirements\", \"responsibilities\", \"job\", \"description\", \"looking\", \"plus\", \"preferred\", \"required\", \"experience\", \"years\", \"year\", \"developer\", \"engineer\", \"data\"]);\n\n// Weak words that penalize the formatting/vocabulary score (action verb detection)\nconst WEAK_WORDS = [\"responsible for\", \"managed\", \"worked on\", \"assisted\", \"duties included\", \"had to\"];\n\n/** Extracts unique, relevant keywords from text, ignoring common stopwords. */\nfunction extractKeywords(text) {\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.]/i).map(w => w.trim()).filter(w => w.length > 2 && !STOPWORDS.has(w)))];\n}\n\n/** Finds the first non-empty line to use as the candidate name. */\nfunction firstNonEmptyLine(s) {\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\n}\n\n/** Escapes special HTML characters to prevent XSS in dangerouslySetInnerHTML. */\nfunction escapeHTML(s) {\n  return s.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\").replaceAll('\"', '&quot;').replaceAll(\"'\", '&#39;');\n}\n\n/** Converts plain text resume content into structured HTML for template rendering.\r\n * Properly nests consecutive bullet points within a single <ul> tag.\r\n */\nfunction plainToHTML(resumeText) {\n  const lines = (resumeText || \"\").split(/\\r?\\n/).map(line => line.trim()).filter(line => line.length > 0);\n  let htmlOutput = \"\";\n  let inList = false; // State flag to track if we are currently inside an <ul> block\n\n  lines.forEach(trimmed => {\n    // Check if the line looks like a standard resume section heading\n    const isHeading = Object.values(SECTIONS).some(r => r.test(trimmed));\n\n    // Check if the line looks like a bullet point (starts with '-', '*', '•', or digit followed by space)\n    const isBullet = trimmed.match(/^[-*•\\d.]\\s/);\n    const safeContent = escapeHTML(trimmed.replace(/^[-*•\\d.]\\s*/, ''));\n    if (isHeading) {\n      // Close list if we hit a heading and were in a list\n      if (inList) htmlOutput += \"</ul>\\n\";\n      inList = false;\n      htmlOutput += `<h2 class=\"section-heading\">${safeContent}</h2>\\n`;\n    } else if (isBullet) {\n      // Start list if not already in one\n      if (!inList) htmlOutput += \"<ul>\\n\";\n      inList = true;\n      htmlOutput += `<li>${safeContent}</li>\\n`;\n    } else {\n      // Close list if we hit a normal paragraph and were in a list\n      if (inList) htmlOutput += \"</ul>\\n\";\n      inList = false;\n      htmlOutput += `<p>${safeContent}</p>\\n`;\n    }\n  });\n\n  // Ensure the last list is closed if the resume ends with a list\n  if (inList) htmlOutput += \"</ul>\\n\";\n  return htmlOutput;\n}\n\n/** Calculates the ATS score based on completeness, keyword match, and formatting. */\nfunction calculateATSScore(resumeText, jobDescription) {\n  const found = {};\n  const missing = [];\n  const resumeLower = resumeText.toLowerCase();\n\n  // Score Weights: Completeness (40%), Keywords (30%), Formatting (30%)\n\n  // 1. Completeness (40%)\n  const coreSections = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\n  Object.entries(SECTIONS).forEach(([k, rgx]) => {\n    const isFound = rgx.test(resumeLower);\n    if (isFound) found[k] = true;else if (coreSections.includes(k)) missing.push(k);\n  });\n  const coreFoundCount = coreSections.length - missing.length;\n  // Score based on the ratio of found core sections\n  const structureScore = Math.round(coreFoundCount / coreSections.length * 40);\n\n  // 2. Keywords (30%) - JD matching\n  const jdKeys = extractKeywords(jobDescription);\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\n  // Prevents division by zero if JD is empty, setting score to max (30)\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\n  const keywordScore = Math.round(keywordMatchRatio * 30);\n\n  // 3. Formatting (30%) - Weak word check\n  let weakWordCount = 0;\n  WEAK_WORDS.forEach(word => {\n    // Global regex to count all instances of weak verbs\n    const regex = new RegExp(`\\\\b${word}\\\\b`, 'g');\n    weakWordCount += [...resumeLower.matchAll(regex)].length;\n  });\n\n  // Max penalty of 15 points (5 points per 5 occurrences of weak words)\n  const weakWordPenalty = Math.min(Math.floor(weakWordCount / 5) * 5, 15);\n  const formattingScore = Math.max(0, 30 - weakWordPenalty);\n\n  // Final Score calculation\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore + formattingScore));\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\n\n  // Note: weakWordPenalty is removed from the return object to fix the ESLint warning.\n  return {\n    found,\n    missing,\n    matched,\n    missingKeys,\n    atsScore,\n    uniqueJD: jdKeys.length,\n    weakWordCount\n  };\n}\nexport default function ResumeAnalyzer() {\n  _s();\n  const [resumeText, setResumeText] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\n  const [analysis, setAnalysis] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const previewRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  /** Handles file upload and processes content. */\n  const handleFile = file => {\n    setFileError(null);\n    if (!file) return;\n    if (file.size > 2 * 1024 * 1024) {\n      setFileError(\"File too large (Max 2MB).\");\n      setResumeText(\"\");\n      return;\n    }\n\n    // PDF Handling Simulation: PDF parsing is complex, so we load dummy text for PDF files\n    if (file.type === \"application/pdf\") {\n      setFileError(\"⚠️ PDF selected. Use .txt for accurate analysis. Dummy content loaded for demonstration.\");\n      setResumeText(\"John Smith\\n(555) 123-4567 | john.smith@email.com | LinkedIn/johnsmith\\n\\nSummary\\nHighly motivated developer with experience in full-stack web technologies.\\n\\nExperience\\n- Spearheaded the development of a customer-facing portal using React and Tailwind CSS.\\n- Drove the migration of legacy systems to a new Firestore database, improving performance by 30%.\\n- Led Agile sprint planning and deployment cycles.\\n\\nSkills\\nReact, JavaScript, Tailwind CSS, Firebase, Firestore, Agile Methodology, SQL, Deployment.\\n\\nEducation\\nB.S. Computer Science, University of Technology\");\n      return;\n    }\n    if (file.type !== \"text/plain\") {\n      setFileError(\"Upload a .txt or .pdf file only. TXT recommended.\");\n      setResumeText(\"\");\n      return;\n    }\n\n    // Handle TXT file content\n    const reader = new FileReader();\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\n    reader.readAsText(file);\n  };\n\n  // Effect to recalculate ATS score whenever input changes\n  useEffect(() => {\n    if (!resumeText) {\n      setAnalysis(null);\n      return;\n    }\n    const startTime = performance.now();\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\n    const endTime = performance.now();\n    console.log(`Resume analysis completed in ${(endTime - startTime).toFixed(2)} ms.`);\n  }, [resumeText, jobDescription]);\n\n  // Memoized function to generate actionable feedback for the user\n  const feedback = useMemo(() => {\n    if (!analysis) return [];\n    const list = [];\n    const {\n      atsScore,\n      missing,\n      uniqueJD,\n      matched,\n      weakWordCount,\n      missingKeys\n    } = analysis;\n\n    // 1. Structure Feedback\n    if (missing.length > 0) {\n      list.push(`Structure Deficiency: Missing core sections: <strong>${missing.map(s => s.toUpperCase()).join(\", \")}</strong>. (Impact: High)`);\n    } else {\n      list.push(`Structure Complete: All standard core sections found.`);\n    }\n\n    // 2. Keyword Feedback (Real-time JD Check)\n    const matchPct = uniqueJD ? Math.round(matched.length / uniqueJD * 100) : 100;\n    if (uniqueJD === 0) {\n      list.push(`No JD provided. Paste one to calculate keyword alignment and boost your score!`);\n    } else if (matchPct < 40) {\n      list.push(`Low Keyword Match (${matchPct}%): Major tailoring needed. Missing critical terms like: <strong>${missingKeys.slice(0, 3).join(', ')}...</strong>`);\n    } else if (matchPct < 70) {\n      list.push(`Moderate Match (${matchPct}%): Add missing terms for a stronger ATS score. You're close!`);\n    } else {\n      list.push(`Strong Match (${matchPct}%): Excellent keyword alignment.`);\n    }\n\n    // 3. Formatting/Vocabulary Feedback\n    if (weakWordCount > 0) {\n      list.push(`Vocabulary: Used weak verbs <strong>${weakWordCount}</strong> times. Replace passive terms like 'responsible for' with stronger **action verbs** like 'Spearheaded' or 'Drove'.`);\n    } else {\n      list.push(`Vocabulary: Strong action verbs detected.`);\n    }\n\n    // 4. Final Score\n    list.push(`Final ATS Score: <strong>${atsScore}%</strong>. Target 80%+ for top performance.`);\n    return list;\n  }, [analysis]);\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\n\n  /** Dynamically loads external libraries (jsPDF and html2canvas) for export. */\n  const loadLibraries = useCallback(() => {\n    return new Promise(resolve => {\n      if (window.jsPDF && window.html2canvas) return resolve();\n      const jsPDFScript = document.createElement(\"script\");\n      jsPDFScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\";\n      jsPDFScript.onload = () => {\n        const html2canvasScript = document.createElement(\"script\");\n        html2canvasScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\";\n        html2canvasScript.onload = resolve;\n        document.body.appendChild(html2canvasScript);\n      };\n      document.body.appendChild(jsPDFScript);\n    });\n  }, []);\n\n  /** Generates PDF locally for download. */\n  const handleDownload = async () => {\n    if (!previewRef.current) return;\n    setIsProcessing(true);\n    await loadLibraries();\n    const node = previewRef.current;\n\n    // Temporarily apply full template styles for high-quality, print-ready export\n    const originalClass = node.className;\n    node.className = `resume-sheet ${TEMPLATES[selectedTemplate].className}`;\n    try {\n      // 1. Generate image from HTML/CSS\n      const canvas = await window.html2canvas(node, {\n        scale: 3,\n        backgroundColor: \"#fff\",\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL(\"image/png\");\n\n      // 2. Generate PDF using jsPDF\n      const pdf = new window.jsPDF(\"p\", \"pt\", \"a4\");\n      const pageWidth = pdf.internal.pageSize.getWidth();\n      const pageHeight = pdf.internal.pageSize.getHeight();\n      const imgHeight = canvas.height * pageWidth / canvas.width;\n\n      // Simple multi-page handling\n      let y = 0,\n        remainingHeight = imgHeight;\n      while (remainingHeight > 0) {\n        pdf.addImage(imgData, \"PNG\", 0, -y, pageWidth, imgHeight);\n        remainingHeight -= pageHeight;\n        y += pageHeight;\n        if (remainingHeight > 0) pdf.addPage();\n      }\n      const fileName = `${candidateName.replace(/\\s/g, \"_\")}_${selectedTemplate}_Resume.pdf`;\n\n      // 3. Local Download\n      pdf.save(fileName);\n    } catch (err) {\n      console.error(`⚠️ PDF Generation Error:`, err);\n    } finally {\n      setIsProcessing(false);\n      // Revert styles after canvas generation\n      node.className = originalClass;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83D\\uDCC4 Resume Input (Max 2MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resume-dropzone\",\n            onDrop: e => {\n              e.preventDefault();\n              e.stopPropagation();\n              if (e.dataTransfer.files.length > 0) handleFile(e.dataTransfer.files[0]);\n            },\n            onDragOver: e => {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"dropzone-text\",\n              children: \"Drag & Drop or Select a File (.txt, .pdf)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \".txt,application/pdf\",\n              style: {\n                display: \"none\"\n              },\n              onChange: e => {\n                var _e$target$files;\n                return handleFile((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn select-file-btn\",\n              onClick: () => fileInputRef.current.click(),\n              children: \"Select File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), fileError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hint file-error\",\n              children: fileError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-input jd-input mt-1\",\n            placeholder: \"Paste your resume content here. (TXT is best for parsing accuracy)\",\n            value: resumeText,\n            onChange: e => setResumeText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83D\\uDCDD Job Description (For Keyword Scoring)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-input jd-input\",\n            placeholder: \"Paste Job Description here...\",\n            value: jobDescription,\n            onChange: e => setJobDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint\",\n            children: \"Pasting the JD is crucial. The tool analyzes keywords against this text for 30% of your ATS score.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), resumeText && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"\\uD83C\\uDFA8 Choose Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-grid\",\n            children: Object.entries(TEMPLATES).map(([key, t]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `template-card ${selectedTemplate === key ? \"selected\" : \"\"}`,\n              onClick: () => setSelectedTemplate(key),\n              title: t.name,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `template-swatch ${t.className}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"template-name\",\n                children: t.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: [\"\\uD83D\\uDCCA ATS Analysis (Score: \", analysis.atsScore, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-ring\",\n              style: {\n                \"--pct\": `${analysis.atsScore}%`,\n                \"--ring-color\": analysis.atsScore >= 70 ? 'var(--ok)' : analysis.atsScore >= 40 ? 'var(--warn)' : 'var(--bad)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-num\",\n                children: analysis.atsScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-label\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-points\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Actionable Suggestions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"feedback-list\",\n                children: feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  dangerouslySetInnerHTML: {\n                    __html: f\n                  }\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 47\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn primary\",\n              onClick: handleDownload,\n              disabled: isProcessing,\n              children: isProcessing ? 'Processing PDF...' : '⬇️ Download Template as PDF'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hint mt-05\",\n              children: \"Generates a PDF of your formatted resume using the selected template.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: previewRef,\n          className: `resume-sheet ${TEMPLATES[selectedTemplate].className}`,\n          style: {\n            fontFamily: TEMPLATES[selectedTemplate].fontStack\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sheet-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: candidateName.slice(0, 1).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"headings\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"name\",\n                children: candidateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tagline\",\n                children: [TEMPLATES[selectedTemplate].name, \" Template\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sheet-body\",\n            dangerouslySetInnerHTML: {\n              __html: htmlBody\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeAnalyzer, \"Fg/vfVHJcFsFRdBBM66UBj+DIB8=\");\n_c = ResumeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"ResumeAnalyzer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","SECTIONS","contact","summary","experience","skills","education","projects","certifications","TEMPLATES","modern","name","className","fontStack","minimal","creative","STOPWORDS","Set","WEAK_WORDS","extractKeywords","text","toLowerCase","split","map","w","trim","filter","length","has","firstNonEmptyLine","s","x","find","escapeHTML","replaceAll","plainToHTML","resumeText","lines","line","htmlOutput","inList","forEach","trimmed","isHeading","Object","values","some","r","test","isBullet","match","safeContent","replace","calculateATSScore","jobDescription","found","missing","resumeLower","coreSections","entries","k","rgx","isFound","includes","push","coreFoundCount","structureScore","Math","round","jdKeys","matched","keywordMatchRatio","keywordScore","weakWordCount","word","regex","RegExp","matchAll","weakWordPenalty","min","floor","formattingScore","max","atsScore","missingKeys","uniqueJD","ResumeAnalyzer","_s","setResumeText","setJobDescription","selectedTemplate","setSelectedTemplate","analysis","setAnalysis","fileError","setFileError","isProcessing","setIsProcessing","previewRef","fileInputRef","handleFile","file","size","type","reader","FileReader","onload","e","String","target","result","readAsText","startTime","performance","now","endTime","console","log","toFixed","feedback","list","toUpperCase","join","matchPct","slice","candidateName","htmlBody","loadLibraries","Promise","resolve","window","jsPDF","html2canvas","jsPDFScript","document","createElement","src","html2canvasScript","body","appendChild","handleDownload","current","node","originalClass","canvas","scale","backgroundColor","useCORS","imgData","toDataURL","pdf","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","imgHeight","height","width","y","remainingHeight","addImage","addPage","fileName","save","err","error","children","_jsxFileName","lineNumber","columnNumber","onDrop","preventDefault","stopPropagation","dataTransfer","files","onDragOver","ref","accept","style","display","onChange","_e$target$files","onClick","click","placeholder","value","key","t","title","f","i","dangerouslySetInnerHTML","__html","disabled","fontFamily","_c","$RefreshReg$"],"sources":["C:/Users/smscp/Desktop/Ram/PESU 5th sem Project/SE project/src/ResumeAnalyzer.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState, useCallback } from \"react\";\r\n\r\n// Section definitions for robust parsing using regex\r\nconst SECTIONS = {\r\n  contact: /\\b(contact|email|phone|linkedin|github|address)\\b/i,\r\n  summary: /\\b(summary|objective|profile)\\b/i,\r\n  experience: /\\b(experience|work experience|employment|career)\\b/i,\r\n  skills: /\\b(skills|technical skills|competencies|technologies)\\b/i,\r\n  education: /\\b(education|degree|university|college)\\b/i,\r\n  projects: /\\b(projects?|portfolio)\\b/i,\r\n  certifications: /\\b(certifications?|certificates?|license|licensed?)\\b/i,\r\n};\r\n\r\n// Template definitions for styling\r\nconst TEMPLATES = {\r\n  modern: { name: \"Modern Professional\", className: \"theme-modern\", fontStack: \"ui-sans-serif, system-ui, Segoe UI, Arial\" },\r\n  minimal: { name: \"Minimal Clean\", className: \"theme-minimal\", fontStack: \"Arial, Helvetica, sans-serif\" },\r\n  creative: { name: \"Creative Bold\", className: \"theme-creative\", fontStack: \"Helvetica, Arial, sans-serif\" },\r\n};\r\n\r\n// Stopwords used for cleaner keyword extraction from the JD\r\nconst STOPWORDS = new Set([\r\n  \"and\", \"the\", \"with\", \"from\", \"that\", \"this\", \"your\", \"their\", \"our\", \"for\", \"into\", \"able\", \"will\", \"shall\", \"must\", \"have\", \"has\", \"had\",\r\n  \"are\", \"was\", \"were\", \"you\", \"they\", \"them\", \"over\", \"under\", \"about\", \"above\", \"below\", \"not\", \"only\", \"but\", \"also\", \"more\", \"than\",\r\n  \"such\", \"etc\", \"using\", \"use\", \"used\", \"strong\", \"good\", \"great\", \"work\", \"role\", \"team\", \"skills\", \"requirements\", \"responsibilities\",\r\n  \"job\", \"description\", \"looking\", \"plus\", \"preferred\", \"required\", \"experience\", \"years\", \"year\", \"developer\", \"engineer\", \"data\"\r\n]);\r\n\r\n// Weak words that penalize the formatting/vocabulary score (action verb detection)\r\nconst WEAK_WORDS = [\"responsible for\", \"managed\", \"worked on\", \"assisted\", \"duties included\", \"had to\"];\r\n\r\n\r\n/** Extracts unique, relevant keywords from text, ignoring common stopwords. */\r\nfunction extractKeywords(text) {\r\n  return [...new Set(text.toLowerCase().split(/[^a-z0-9+#.]/i)\r\n    .map(w => w.trim())\r\n    .filter(w => w.length > 2 && !STOPWORDS.has(w))\r\n  )];\r\n}\r\n\r\n/** Finds the first non-empty line to use as the candidate name. */\r\nfunction firstNonEmptyLine(s) {\r\n  return (s || \"\").split(/\\r?\\n/).map(x => x.trim()).find(x => x.length > 0) || \"Candidate Name\";\r\n}\r\n\r\n/** Escapes special HTML characters to prevent XSS in dangerouslySetInnerHTML. */\r\nfunction escapeHTML(s) {\r\n  return s.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\").replaceAll('\"', '&quot;').replaceAll(\"'\", '&#39;');\r\n}\r\n\r\n/** Converts plain text resume content into structured HTML for template rendering.\r\n * Properly nests consecutive bullet points within a single <ul> tag.\r\n */\r\nfunction plainToHTML(resumeText) {\r\n  const lines = (resumeText || \"\").split(/\\r?\\n/).map(line => line.trim()).filter(line => line.length > 0);\r\n  let htmlOutput = \"\";\r\n  let inList = false; // State flag to track if we are currently inside an <ul> block\r\n\r\n  lines.forEach(trimmed => {\r\n    // Check if the line looks like a standard resume section heading\r\n    const isHeading = Object.values(SECTIONS).some(r => r.test(trimmed));\r\n\r\n    // Check if the line looks like a bullet point (starts with '-', '*', '•', or digit followed by space)\r\n    const isBullet = trimmed.match(/^[-*•\\d.]\\s/);\r\n    const safeContent = escapeHTML(trimmed.replace(/^[-*•\\d.]\\s*/, ''));\r\n\r\n    if (isHeading) {\r\n      // Close list if we hit a heading and were in a list\r\n      if (inList) htmlOutput += \"</ul>\\n\";\r\n      inList = false;\r\n      htmlOutput += `<h2 class=\"section-heading\">${safeContent}</h2>\\n`;\r\n    } else if (isBullet) {\r\n      // Start list if not already in one\r\n      if (!inList) htmlOutput += \"<ul>\\n\";\r\n      inList = true;\r\n      htmlOutput += `<li>${safeContent}</li>\\n`;\r\n    } else {\r\n      // Close list if we hit a normal paragraph and were in a list\r\n      if (inList) htmlOutput += \"</ul>\\n\";\r\n      inList = false;\r\n      htmlOutput += `<p>${safeContent}</p>\\n`;\r\n    }\r\n  });\r\n\r\n  // Ensure the last list is closed if the resume ends with a list\r\n  if (inList) htmlOutput += \"</ul>\\n\";\r\n\r\n  return htmlOutput;\r\n}\r\n\r\n/** Calculates the ATS score based on completeness, keyword match, and formatting. */\r\nfunction calculateATSScore(resumeText, jobDescription) {\r\n  const found = {};\r\n  const missing = [];\r\n  const resumeLower = resumeText.toLowerCase();\r\n\r\n  // Score Weights: Completeness (40%), Keywords (30%), Formatting (30%)\r\n\r\n  // 1. Completeness (40%)\r\n  const coreSections = [\"contact\", \"summary\", \"experience\", \"skills\", \"education\"];\r\n  Object.entries(SECTIONS).forEach(([k, rgx]) => {\r\n    const isFound = rgx.test(resumeLower);\r\n    if (isFound) found[k] = true;\r\n    else if (coreSections.includes(k)) missing.push(k);\r\n  });\r\n\r\n  const coreFoundCount = coreSections.length - missing.length;\r\n  // Score based on the ratio of found core sections\r\n  const structureScore = Math.round((coreFoundCount / coreSections.length) * 40);\r\n\r\n  // 2. Keywords (30%) - JD matching\r\n  const jdKeys = extractKeywords(jobDescription);\r\n  const matched = jdKeys.filter(k => resumeLower.includes(k));\r\n  // Prevents division by zero if JD is empty, setting score to max (30)\r\n  const keywordMatchRatio = jdKeys.length ? matched.length / jdKeys.length : 1;\r\n  const keywordScore = Math.round(keywordMatchRatio * 30);\r\n\r\n  // 3. Formatting (30%) - Weak word check\r\n  let weakWordCount = 0;\r\n  WEAK_WORDS.forEach(word => {\r\n    // Global regex to count all instances of weak verbs\r\n    const regex = new RegExp(`\\\\b${word}\\\\b`, 'g');\r\n    weakWordCount += [...resumeLower.matchAll(regex)].length;\r\n  });\r\n\r\n  // Max penalty of 15 points (5 points per 5 occurrences of weak words)\r\n  const weakWordPenalty = Math.min(Math.floor(weakWordCount / 5) * 5, 15);\r\n  const formattingScore = Math.max(0, 30 - weakWordPenalty);\r\n\r\n  // Final Score calculation\r\n  const atsScore = Math.max(0, Math.min(100, structureScore + keywordScore + formattingScore));\r\n  const missingKeys = jdKeys.filter(k => !resumeLower.includes(k));\r\n\r\n  // Note: weakWordPenalty is removed from the return object to fix the ESLint warning.\r\n  return {\r\n    found, missing, matched, missingKeys,\r\n    atsScore, uniqueJD: jdKeys.length,\r\n    weakWordCount,\r\n  };\r\n}\r\n\r\n\r\nexport default function ResumeAnalyzer() {\r\n  const [resumeText, setResumeText] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [selectedTemplate, setSelectedTemplate] = useState(\"modern\");\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [fileError, setFileError] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const previewRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  /** Handles file upload and processes content. */\r\n  const handleFile = (file) => {\r\n    setFileError(null);\r\n    if (!file) return;\r\n\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      setFileError(\"File too large (Max 2MB).\");\r\n      setResumeText(\"\");\r\n      return;\r\n    }\r\n\r\n    // PDF Handling Simulation: PDF parsing is complex, so we load dummy text for PDF files\r\n    if (file.type === \"application/pdf\") {\r\n      setFileError(\"⚠️ PDF selected. Use .txt for accurate analysis. Dummy content loaded for demonstration.\");\r\n      setResumeText(\"John Smith\\n(555) 123-4567 | john.smith@email.com | LinkedIn/johnsmith\\n\\nSummary\\nHighly motivated developer with experience in full-stack web technologies.\\n\\nExperience\\n- Spearheaded the development of a customer-facing portal using React and Tailwind CSS.\\n- Drove the migration of legacy systems to a new Firestore database, improving performance by 30%.\\n- Led Agile sprint planning and deployment cycles.\\n\\nSkills\\nReact, JavaScript, Tailwind CSS, Firebase, Firestore, Agile Methodology, SQL, Deployment.\\n\\nEducation\\nB.S. Computer Science, University of Technology\");\r\n      return;\r\n    }\r\n\r\n    if (file.type !== \"text/plain\") {\r\n      setFileError(\"Upload a .txt or .pdf file only. TXT recommended.\");\r\n      setResumeText(\"\");\r\n      return;\r\n    }\r\n\r\n    // Handle TXT file content\r\n    const reader = new FileReader();\r\n    reader.onload = e => setResumeText(String(e.target.result || \"\"));\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Effect to recalculate ATS score whenever input changes\r\n  useEffect(() => {\r\n    if (!resumeText) { setAnalysis(null); return; }\r\n    const startTime = performance.now();\r\n    setAnalysis(calculateATSScore(resumeText, jobDescription));\r\n    const endTime = performance.now();\r\n    console.log(`Resume analysis completed in ${(endTime - startTime).toFixed(2)} ms.`);\r\n  }, [resumeText, jobDescription]);\r\n\r\n  // Memoized function to generate actionable feedback for the user\r\n  const feedback = useMemo(() => {\r\n    if (!analysis) return [];\r\n    const list = [];\r\n    const { atsScore, missing, uniqueJD, matched, weakWordCount, missingKeys } = analysis;\r\n\r\n    // 1. Structure Feedback\r\n    if (missing.length > 0) {\r\n      list.push(`Structure Deficiency: Missing core sections: <strong>${missing.map(s => s.toUpperCase()).join(\", \")}</strong>. (Impact: High)`);\r\n    } else {\r\n      list.push(`Structure Complete: All standard core sections found.`);\r\n    }\r\n\r\n    // 2. Keyword Feedback (Real-time JD Check)\r\n    const matchPct = uniqueJD ? Math.round((matched.length / uniqueJD) * 100) : 100;\r\n    if (uniqueJD === 0) {\r\n      list.push(`No JD provided. Paste one to calculate keyword alignment and boost your score!`);\r\n    } else if (matchPct < 40) {\r\n      list.push(`Low Keyword Match (${matchPct}%): Major tailoring needed. Missing critical terms like: <strong>${missingKeys.slice(0, 3).join(', ')}...</strong>`);\r\n    } else if (matchPct < 70) {\r\n      list.push(`Moderate Match (${matchPct}%): Add missing terms for a stronger ATS score. You're close!`);\r\n    } else {\r\n      list.push(`Strong Match (${matchPct}%): Excellent keyword alignment.`);\r\n    }\r\n\r\n    // 3. Formatting/Vocabulary Feedback\r\n    if (weakWordCount > 0) {\r\n      list.push(`Vocabulary: Used weak verbs <strong>${weakWordCount}</strong> times. Replace passive terms like 'responsible for' with stronger **action verbs** like 'Spearheaded' or 'Drove'.`);\r\n    } else {\r\n      list.push(`Vocabulary: Strong action verbs detected.`);\r\n    }\r\n\r\n    // 4. Final Score\r\n    list.push(`Final ATS Score: <strong>${atsScore}%</strong>. Target 80%+ for top performance.`);\r\n\r\n    return list;\r\n  }, [analysis]);\r\n\r\n  const candidateName = useMemo(() => firstNonEmptyLine(resumeText), [resumeText]);\r\n  const htmlBody = useMemo(() => plainToHTML(resumeText), [resumeText]);\r\n\r\n  /** Dynamically loads external libraries (jsPDF and html2canvas) for export. */\r\n  const loadLibraries = useCallback(() => {\r\n    return new Promise((resolve) => {\r\n      if (window.jsPDF && window.html2canvas) return resolve();\r\n\r\n      const jsPDFScript = document.createElement(\"script\");\r\n      jsPDFScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\";\r\n      jsPDFScript.onload = () => {\r\n        const html2canvasScript = document.createElement(\"script\");\r\n        html2canvasScript.src = \"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\";\r\n        html2canvasScript.onload = resolve;\r\n        document.body.appendChild(html2canvasScript);\r\n      };\r\n      document.body.appendChild(jsPDFScript);\r\n    });\r\n  }, []);\r\n\r\n  /** Generates PDF locally for download. */\r\n  const handleDownload = async () => {\r\n    if (!previewRef.current) return;\r\n\r\n    setIsProcessing(true);\r\n    await loadLibraries();\r\n\r\n    const node = previewRef.current;\r\n\r\n    // Temporarily apply full template styles for high-quality, print-ready export\r\n    const originalClass = node.className;\r\n    node.className = `resume-sheet ${TEMPLATES[selectedTemplate].className}`;\r\n\r\n    try {\r\n      // 1. Generate image from HTML/CSS\r\n      const canvas = await window.html2canvas(node, {\r\n        scale: 3,\r\n        backgroundColor: \"#fff\",\r\n        useCORS: true\r\n      });\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n\r\n      // 2. Generate PDF using jsPDF\r\n      const pdf = new window.jsPDF(\"p\", \"pt\", \"a4\");\r\n      const pageWidth = pdf.internal.pageSize.getWidth();\r\n      const pageHeight = pdf.internal.pageSize.getHeight();\r\n      const imgHeight = (canvas.height * pageWidth) / canvas.width;\r\n\r\n      // Simple multi-page handling\r\n      let y = 0, remainingHeight = imgHeight;\r\n      while (remainingHeight > 0) {\r\n        pdf.addImage(imgData, \"PNG\", 0, -y, pageWidth, imgHeight);\r\n        remainingHeight -= pageHeight;\r\n        y += pageHeight;\r\n        if (remainingHeight > 0) pdf.addPage();\r\n      }\r\n\r\n      const fileName = `${candidateName.replace(/\\s/g, \"_\")}_${selectedTemplate}_Resume.pdf`;\r\n\r\n      // 3. Local Download\r\n      pdf.save(fileName);\r\n\r\n    } catch (err) {\r\n      console.error(`⚠️ PDF Generation Error:`, err);\r\n    } finally {\r\n      setIsProcessing(false);\r\n      // Revert styles after canvas generation\r\n      node.className = originalClass;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <div className=\"grid-2\">\r\n          {/* Resume Input Card (File/Text) */}\r\n          <div className=\"card\">\r\n            <h2 className=\"section-title\">📄 Resume Input (Max 2MB)</h2>\r\n            <div className=\"resume-dropzone\"\r\n              onDrop={e => { e.preventDefault(); e.stopPropagation(); if (e.dataTransfer.files.length > 0) handleFile(e.dataTransfer.files[0]); }}\r\n              onDragOver={e => { e.preventDefault(); e.stopPropagation(); }}\r\n            >\r\n              <p className=\"dropzone-text\">Drag & Drop or Select a File (.txt, .pdf)</p>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\".txt,application/pdf\"\r\n                style={{ display: \"none\" }}\r\n                onChange={e => handleFile(e.target.files?.[0])}\r\n              />\r\n              <button className=\"btn select-file-btn\" onClick={() => fileInputRef.current.click()}>Select File</button>\r\n              {fileError && <p className=\"hint file-error\">{fileError}</p>}\r\n            </div>\r\n            <textarea className=\"text-input jd-input mt-1\"\r\n              placeholder=\"Paste your resume content here. (TXT is best for parsing accuracy)\"\r\n              value={resumeText}\r\n              onChange={e => setResumeText(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {/* Job Description Card */}\r\n          <div className=\"card\">\r\n            <h2 className=\"section-title\">📝 Job Description (For Keyword Scoring)</h2>\r\n            <textarea className=\"text-input jd-input\" placeholder=\"Paste Job Description here...\" value={jobDescription} onChange={e => setJobDescription(e.target.value)} />\r\n            <p className=\"hint\">Pasting the JD is crucial. The tool analyzes keywords against this text for 30% of your ATS score.</p>\r\n          </div>\r\n        </div>\r\n\r\n        {resumeText && (\r\n          <>\r\n            {/* Template Selection Card */}\r\n            <div className=\"card\">\r\n              <h2 className=\"section-title\">🎨 Choose Template</h2>\r\n              <div className=\"template-grid\">\r\n                {Object.entries(TEMPLATES).map(([key, t]) => (\r\n                  <button key={key} type=\"button\" className={`template-card ${selectedTemplate === key ? \"selected\" : \"\"}`} onClick={() => setSelectedTemplate(key)} title={t.name}>\r\n                    <div className={`template-swatch ${t.className}`}></div>\r\n                    <div className=\"template-name\">{t.name}</div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* ATS Analysis Card (Score + Feedback) */}\r\n            {analysis && (\r\n              <div className=\"card\">\r\n                <h2 className=\"section-title\">📊 ATS Analysis (Score: {analysis.atsScore}%)</h2>\r\n                <div className=\"score-row\">\r\n                  {/* Dynamic Score Ring with color coding */}\r\n                  <div className=\"score-ring\" style={{ \"--pct\": `${analysis.atsScore}%`, \"--ring-color\": analysis.atsScore >= 70 ? 'var(--ok)' : analysis.atsScore >= 40 ? 'var(--warn)' : 'var(--bad)' }}>\r\n                    <div className=\"score-num\">{analysis.atsScore}</div>\r\n                    <div className=\"score-label\">Score</div>\r\n                  </div>\r\n                  <div className=\"analysis-points\">\r\n                    <h3>Actionable Suggestions</h3>\r\n                    <ul className=\"feedback-list\">\r\n                      {feedback.map((f, i) => <li key={i} dangerouslySetInnerHTML={{ __html: f }} />)}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <button className=\"btn primary\" onClick={handleDownload} disabled={isProcessing}>\r\n                    {isProcessing ? 'Processing PDF...' : '⬇️ Download Template as PDF'}\r\n                  </button>\r\n                  <p className=\"hint mt-05\">Generates a PDF of your formatted resume using the selected template.</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Resume Preview Sheet */}\r\n            <div ref={previewRef} className={`resume-sheet ${TEMPLATES[selectedTemplate].className}`} style={{ fontFamily: TEMPLATES[selectedTemplate].fontStack }}>\r\n              <div className=\"sheet-header\">\r\n                <div className=\"avatar\">{candidateName.slice(0, 1).toUpperCase()}</div>\r\n                <div className=\"headings\">\r\n                  <h1 className=\"name\">{candidateName}</h1>\r\n                  <div className=\"tagline\">{TEMPLATES[selectedTemplate].name} Template</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sheet-body\" dangerouslySetInnerHTML={{ __html: htmlBody }} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}